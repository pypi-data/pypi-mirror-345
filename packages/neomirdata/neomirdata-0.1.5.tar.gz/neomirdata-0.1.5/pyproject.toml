[tool.poetry]
name = "neomirdata"
version = "0.1.5"
description = "Common loaders for MIR datasets."
authors = ["Igor Bogicevic <igor.bogicevic@gmail.com>"]
maintainers = ["Igor Bogicevic <igor.bogicevic@gmail.com>"]
readme = "README.md"
license = "BSD-3-Clause"
packages = [{include = "mirdata"}]
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]

[tool.poetry.dependencies]
python = ">=3.12,<3.14"
attrs = "^23.2.0"
chardet = "^5.2.0"
Deprecated = "^1.2.14"
h5py = "^3.10.0"
librosa = "^0.10.1"
numpy = "^1.26.4"
pandas = "^2.2.1"
pretty_midi = "^0.2.10"
pyyaml = "^6.0.1"
openpyxl = "^3.1.2"
requests = "^2.31.0"
scipy = "^1.12.0"
tqdm = "^4.66.2"
smart_open = {extras = ["all"], version = "^6.4.0"}
standard-aifc = {version = "^3.13.0", python = ">=3.13"}
standard-sunau = {version = "^3.13.0", python = ">=3.13"}
audioop-lts = {version = "^0.2.1", python = ">=3.13"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-pep8 = "^1.0.6"
pytest-mock = "^3.12.0"
pytest-localserver = "^0.8.1"
pytest-xdist = "^3.5.0"
testcontainers = "^4.0.0"
future = "^1.0.0"
black = "^24.3.0"
flake8 = "^7.0.0"
mypy = "^1.9.0"
mir_eval = "^0.7"
types-PyYAML = "*"
types-chardet = "*"
types-Deprecated = "*"
ruff = "^0.3.3"
isort = "^5.13.2"
pre-commit = "^3.6.0"

[tool.poetry.group.docs.dependencies]
numpydoc = "^1.6.0"
recommonmark = "^0.7.1"
sphinx = "^7.2.6"
sphinxcontrib-napoleon = "^0.7"
sphinx_rtd_theme = "^2.0.0"
sphinx-togglebutton = "^0.3.2"
sphinx-copybutton = "^0.5.2"

[tool.poetry.group.optional.dependencies]
openpyxl = "^3.1.2"
dali-dataset = "^1.1"
music21 = "^9.1.0"
smart-open = [
    {extras = ["gcs"], version = "^6.4.0"},
    {extras = ["s3"], version = "^6.4.0"},
    {extras = ["http"], version = "^6.4.0"}
]

[tool.poetry.urls]
Homepage = "https://github.com/probablyrobot/neomirdata"
Documentation = "https://neomirdata.readthedocs.io/en/stable/"
Issues = "https://github.com/probablyrobot/neomirdata/issues"
Releases = "https://github.com/probablyrobot/neomirdata/releases"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-n auto -vv -k 'not test_extractall_unicode and not test_metadata'"

[tool.coverage.run]
source = ["mirdata"]
omit = ["tests/*"]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "B904",   # Exceptions without from err
    "E501",   # Line too long
    "RET505", # Unnecessary else after return
    "RET506", # Unnecessary elif after return
    "RET507", # Unnecessary else after continue
    "E721",   # Do not compare types, use isinstance()
    "E722",   # Do not use bare except
    "E731",   # Do not assign lambda expression, use def
    "E741",   # Ambiguous variable name
    "F601",   # Dictionary key repeated
    "F841",   # Local variable assigned but never used
    "F821"    # Undefined name
]

[tool.poetry.scripts]
format = "pre-commit:main"
