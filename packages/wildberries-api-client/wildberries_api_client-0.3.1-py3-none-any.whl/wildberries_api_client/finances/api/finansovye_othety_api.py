# coding: utf-8

"""
    Dokumenty i buhgalteria

    <div class=\"description_important\">       Uznat bolhe o dokumentah i buhgalterii mohno v <a href=\"https://seller.wildberries.ru/instructions/category/ba929b64-1f89-4426-82d7-ce998ee552bd?goBackOption=prevRoute&categoryId=3c971375-9939-45e8-ab82-376019be8942\">spravohnom centre</a> </div>  Prosmotr [finansovyh othetov](/openapi/financial-reports-and-accounting#tag/Finansovye-otchyoty) i [dokumentov](/openapi/financial-reports-and-accounting#tag/Dokumenty) prodavca.   # noqa: E501

    OpenAPI spec version: finances
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from wildberries_api_client.finances.api_client import ApiClient


class FinansovyeOthetyApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def api_v5_supplier_report_detail_by_period_get(self, date_from, date_to, **kwargs):  # noqa: E501
        """Othet o prodahah po realizacii  # noqa: E501

        Metod predostavlaet detalizacii k [ehenedelnym othetam realizacii](https://seller.wildberries.ru/suppliers-mutual-settlements/reports-implementations/reports-weekly-new). <br><br> Dannye dostupny s 29 anvara 2024 goda.  <div class=\"description_important\">     Vy mohete vygruzit dannye v <a href=\"https://dev.wildberries.ru/ru/cases/1\">Google Tablicy</a> </div>  <div class=\"description_limit\">     Maksimum 1 zapros v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> na odin akkaunt prodavca </div>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_v5_supplier_report_detail_by_period_get(date_from, date_to, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str date_from: Nahalnaa data otheta.<br> Data v formate RFC3339. Mohno peredat datu ili datu so vremenem.  Vrema mohno ukazyvat s tohnostu do sekund ili millisekund. <br> Vrema peredaetsa v hasovom poase Msk (UTC+3). <br>Primery:   - `2019-06-20`   - `2019-06-20T23:59:59`   - `2019-06-20T00:00:00.12345`   - `2017-03-25T00:00:00`  (required)
        :param date date_to: Konehnaa data otheta (required)
        :param int limit: Maksimalnoe kolihestvo strok otveta, vozvrahaemyh metodom. Ne mohet byt bolee 100000.
        :param int rrdid: Unikalnyi ID stroki otheta. Neobhodim dla poluhenia otheta hastami.  <br> Zagruzku otheta nuhno nahinat s `rrdid = 0` i pri posleduuhih vyzovah API peredavat v zaprose znahenie `rrd_id` iz poslednei stroki, poluhennoi v rezultate predyduhego vyzova.  <br> Takim obrazom, dla zagruzki odnogo otheta mohet ponadobitsa vyzyvat API do teh por, poka v otvete ne budet otdan pustoi massiv <code>[]</code>. 
        :return: list[DetailReportItem]
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.api_v5_supplier_report_detail_by_period_get_with_http_info(date_from, date_to, **kwargs)  # noqa: E501
        else:
            (data) = self.api_v5_supplier_report_detail_by_period_get_with_http_info(date_from, date_to, **kwargs)  # noqa: E501
            return data

    def api_v5_supplier_report_detail_by_period_get_with_http_info(self, date_from, date_to, **kwargs):  # noqa: E501
        """Othet o prodahah po realizacii  # noqa: E501

        Metod predostavlaet detalizacii k [ehenedelnym othetam realizacii](https://seller.wildberries.ru/suppliers-mutual-settlements/reports-implementations/reports-weekly-new). <br><br> Dannye dostupny s 29 anvara 2024 goda.  <div class=\"description_important\">     Vy mohete vygruzit dannye v <a href=\"https://dev.wildberries.ru/ru/cases/1\">Google Tablicy</a> </div>  <div class=\"description_limit\">     Maksimum 1 zapros v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> na odin akkaunt prodavca </div>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_v5_supplier_report_detail_by_period_get_with_http_info(date_from, date_to, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str date_from: Nahalnaa data otheta.<br> Data v formate RFC3339. Mohno peredat datu ili datu so vremenem.  Vrema mohno ukazyvat s tohnostu do sekund ili millisekund. <br> Vrema peredaetsa v hasovom poase Msk (UTC+3). <br>Primery:   - `2019-06-20`   - `2019-06-20T23:59:59`   - `2019-06-20T00:00:00.12345`   - `2017-03-25T00:00:00`  (required)
        :param date date_to: Konehnaa data otheta (required)
        :param int limit: Maksimalnoe kolihestvo strok otveta, vozvrahaemyh metodom. Ne mohet byt bolee 100000.
        :param int rrdid: Unikalnyi ID stroki otheta. Neobhodim dla poluhenia otheta hastami.  <br> Zagruzku otheta nuhno nahinat s `rrdid = 0` i pri posleduuhih vyzovah API peredavat v zaprose znahenie `rrd_id` iz poslednei stroki, poluhennoi v rezultate predyduhego vyzova.  <br> Takim obrazom, dla zagruzki odnogo otheta mohet ponadobitsa vyzyvat API do teh por, poka v otvete ne budet otdan pustoi massiv <code>[]</code>. 
        :return: list[DetailReportItem]
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['date_from', 'date_to', 'limit', 'rrdid']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method api_v5_supplier_report_detail_by_period_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'date_from' is set
        if ('date_from' not in params or
                params['date_from'] is None):
            raise ValueError("Missing the required parameter `date_from` when calling `api_v5_supplier_report_detail_by_period_get`")  # noqa: E501
        # verify the required parameter 'date_to' is set
        if ('date_to' not in params or
                params['date_to'] is None):
            raise ValueError("Missing the required parameter `date_to` when calling `api_v5_supplier_report_detail_by_period_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'date_from' in params:
            query_params.append(('dateFrom', params['date_from']))  # noqa: E501
        if 'limit' in params:
            query_params.append(('limit', params['limit']))  # noqa: E501
        if 'date_to' in params:
            query_params.append(('dateTo', params['date_to']))  # noqa: E501
        if 'rrdid' in params:
            query_params.append(('rrdid', params['rrdid']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/api/v5/supplier/reportDetailByPeriod', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='list[DetailReportItem]',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
