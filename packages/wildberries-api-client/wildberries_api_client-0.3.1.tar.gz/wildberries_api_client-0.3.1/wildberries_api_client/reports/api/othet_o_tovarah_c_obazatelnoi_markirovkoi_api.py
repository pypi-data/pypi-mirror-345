# coding: utf-8

"""
    Othety

    <div class=\"description_important\">     Uznat bolhe ob othetah mohno v <a href=\"https://seller.wildberries.ru/instructions/subcategory/5f2162c5-069b-416d-a4e1-48da2a76e6b0\">spravohnom centre</a> </div>  S pomohu etih metodov vy mohete poluhit [osnovnye othety](/openapi/reports#tag/Osnovnye-otchyoty) i othety o:   1. [Ostatkah na skladah](/openapi/reports#tag/Otchyot-ob-ostatkah-na-skladah)   2. [Tovarah s obazatelnoi markirovkoi](/openapi/reports#tag/Otchyot-o-tovarah-c-obyazatelnoj-markirovkoj)   3. [Uderhaniah](/openapi/reports#tag/Otchyoty-ob-uderzhaniyah)   4. [Platnoi priemke](/openapi/reports#tag/Platnaya-priyomka)   5. [Platnom hranenii](/openapi/reports#tag/Platnoe-hranenie)   6. [Prodahah po regionam](/openapi/reports#tag/Prodazhi-po-regionam)   7. [Dole brenda v prodahah](/openapi/reports#tag/Dolya-brenda-v-prodazhah)   8. [Skrytyh tovarah](/openapi/reports#tag/Skrytye-tovary)   9. [Vozvratah i peremehenii tovarov](/openapi/reports#tag/Otchyot-o-vozvratah-i-peremeshenii-tovarov)   10. [Dinamike oborahivaemosti](/openapi/reports#tag/Dinamika-oborachivaemosti)   # noqa: E501

    OpenAPI spec version: reports
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from wildberries_api_client.reports.api_client import ApiClient


class OthetOTovarahCObazatelnoiMarkirovkoiApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def api_v1_analytics_excise_report_post(self, date_from, date_to, **kwargs):  # noqa: E501
        """Poluhit othet  # noqa: E501

        Metod predostavlaet othet s [operaciami po tovaram s obazatelnoi markirovkoi](https://seller.wildberries.ru/analytics-reports/excise-report).<br><br>  Dannyi othet mohno sohranit v [formate tablic](https://dev.wildberries.ru/cases/1).  <div class=\"description_limit\">     Maksimum 10 zaprosov za 5 <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">hasov</a> na odin akkaunt prodavca </div>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_v1_analytics_excise_report_post(date_from, date_to, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str date_from: Nahalo othetnogo perioda v formate RFC3339. Mohno peredat datu  ili datu so vremenem. Primery:    * `2023-12-01`   * `2023-12-01T23:59:59`   * `2023-12-01T00:00:00.12345`   * `2023-12-01T00:00:00`  (required)
        :param str date_to: Konec othetnogo perioda v formate RFC3339. Mohno peredat datu  ili datu so vremenem. Primery:    * `2023-12-01`   * `2023-12-01T23:59:59`   * `2023-12-01T00:00:00.12345`   * `2023-12-01T00:00:00`  (required)
        :param ExciseReportRequest body:
        :return: ExciseReportResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.api_v1_analytics_excise_report_post_with_http_info(date_from, date_to, **kwargs)  # noqa: E501
        else:
            (data) = self.api_v1_analytics_excise_report_post_with_http_info(date_from, date_to, **kwargs)  # noqa: E501
            return data

    def api_v1_analytics_excise_report_post_with_http_info(self, date_from, date_to, **kwargs):  # noqa: E501
        """Poluhit othet  # noqa: E501

        Metod predostavlaet othet s [operaciami po tovaram s obazatelnoi markirovkoi](https://seller.wildberries.ru/analytics-reports/excise-report).<br><br>  Dannyi othet mohno sohranit v [formate tablic](https://dev.wildberries.ru/cases/1).  <div class=\"description_limit\">     Maksimum 10 zaprosov za 5 <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">hasov</a> na odin akkaunt prodavca </div>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_v1_analytics_excise_report_post_with_http_info(date_from, date_to, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str date_from: Nahalo othetnogo perioda v formate RFC3339. Mohno peredat datu  ili datu so vremenem. Primery:    * `2023-12-01`   * `2023-12-01T23:59:59`   * `2023-12-01T00:00:00.12345`   * `2023-12-01T00:00:00`  (required)
        :param str date_to: Konec othetnogo perioda v formate RFC3339. Mohno peredat datu  ili datu so vremenem. Primery:    * `2023-12-01`   * `2023-12-01T23:59:59`   * `2023-12-01T00:00:00.12345`   * `2023-12-01T00:00:00`  (required)
        :param ExciseReportRequest body:
        :return: ExciseReportResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['date_from', 'date_to', 'body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method api_v1_analytics_excise_report_post" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'date_from' is set
        if ('date_from' not in params or
                params['date_from'] is None):
            raise ValueError("Missing the required parameter `date_from` when calling `api_v1_analytics_excise_report_post`")  # noqa: E501
        # verify the required parameter 'date_to' is set
        if ('date_to' not in params or
                params['date_to'] is None):
            raise ValueError("Missing the required parameter `date_to` when calling `api_v1_analytics_excise_report_post`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'date_from' in params:
            query_params.append(('dateFrom', params['date_from']))  # noqa: E501
        if 'date_to' in params:
            query_params.append(('dateTo', params['date_to']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/api/v1/analytics/excise-report', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='ExciseReportResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
