# This workflow will upload a Python Package to PyPI when a release is created. For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Publish Python Package

on:
  release:
    types: [published]
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: "Install uv"
        uses: "astral-sh/setup-uv@v6"
        with:
          version: "0.6.17"
          python-version: 3.13
          activate-environment: true

      - name: Build release distributions
        run: |
          uv pip install --group build
          uv build

      - name: Test build package
        run: |
          uv run --with dist/django_scalar-*.whl --refresh-package django_scalar --no-project -- python -c "import django_scalar"
          uv run --with dist/django_scalar-*.tar.gz --refresh-package django_scalar --no-project -- python -c "import django_scalar"

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://test.pypi.org/p/django-scalar
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      url: https://pypi.org/project/django-scalar/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: "Install uv"
        uses: "astral-sh/setup-uv@v6"
        with:
          version: "0.6.17"
          python-version: 3.13
          activate-environment: true
          enable-cache: false

      - name: Publish release distributions to PyPI
        run: uv publish

      # - name: Publish release distributions to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     packages-dir: dist/
