"""Tests pokemon/gen_1/_memory.py."""

import unittest

import numpy as np
from pyboy import PyBoy

from gymboy.environments.pokemon.gen_1._memory import (
    _badges,
    _events,
    _exps,
    _game_area,
    _hps,
    _levels,
    _max_hps,
    _max_pps,
    _money,
    _moves,
    _owned_pokemons,
    _pokemon_ids,
    _pps,
    _seen_pokemons,
    _team_size,
)


class TestMemory(unittest.TestCase):
    """Tests the methods under the pokemon/gen_1/_memory.py file."""

    def setUp(self):
        self.rom_path = "./resources/roms/pokemon/gen_1/pokemon_blue.gb"
        self.init_state_path1 = (
            "./resources/states/pokemon/gen_1/pokemon_blue_after_intro.state"
        )
        self.init_state_path2 = (
            "./resources/states/pokemon/gen_1/pokemon_blue_after_first_pokemon.state"
        )
        self.init_state_path3 = (
            "./resources/states/pokemon/gen_1/pokemon_blue_after_first_order.state"
        )

        self.pyboy1 = PyBoy(self.rom_path, sound_emulated=False)
        with open(self.init_state_path1, "rb") as f:
            self.pyboy1.load_state(f)
        self.pyboy1.tick(1)

        self.pyboy2 = PyBoy(self.rom_path, sound_emulated=False)
        with open(self.init_state_path2, "rb") as f:
            self.pyboy2.load_state(f)
        self.pyboy2.tick(1)

        self.pyboy3 = PyBoy(self.rom_path, sound_emulated=False)
        with open(self.init_state_path3, "rb") as f:
            self.pyboy3.load_state(f)
        self.pyboy3.tick(1)

    def tearDown(self):
        self.pyboy1.stop()
        self.pyboy2.stop()
        self.pyboy3.stop()

    def test_badges(self):
        """Tests the badges() method."""
        self.assertEqual(0, _badges(self.pyboy1, yellow=False))
        self.assertEqual(0, _badges(self.pyboy2, yellow=False))
        self.assertEqual(1, _badges(self.pyboy3, yellow=False))

    def test_money(self):
        """Tests the money() method."""
        self.assertEqual(3000, _money(self.pyboy1, yellow=False))
        self.assertEqual(3000, _money(self.pyboy2, yellow=False))
        self.assertEqual(3346, _money(self.pyboy3, yellow=False))

    def test_pokemon_ids(self):
        """Tests the pokemon_ids() method."""
        np.testing.assert_allclose(
            [0, 0, 0, 0, 0, 0], _pokemon_ids(self.pyboy1, yellow=False)
        )
        np.testing.assert_allclose(
            [177, 0, 0, 0, 0, 0], _pokemon_ids(self.pyboy2, yellow=False)
        )
        np.testing.assert_allclose(
            [169, 36, 179, 0, 0, 0], _pokemon_ids(self.pyboy3, yellow=False)
        )

    def test_team_size(self):
        """Tests the team_size() method."""
        self.assertEqual(0, _team_size(self.pyboy1, yellow=False))
        self.assertEqual(1, _team_size(self.pyboy2, yellow=False))
        self.assertEqual(3, _team_size(self.pyboy3, yellow=False))

    def test_levels(self):
        """Tests the levels() method."""
        np.testing.assert_allclose(
            [0, 0, 0, 0, 0, 0], _levels(self.pyboy1, yellow=False)
        )
        np.testing.assert_allclose(
            [5, 0, 0, 0, 0, 0], _levels(self.pyboy2, yellow=False)
        )
        np.testing.assert_allclose(
            [11, 8, 21, 0, 0, 0], _levels(self.pyboy3, yellow=False)
        )

    def test_hps(self):
        """Tests the hps() method."""
        np.testing.assert_allclose([0, 0, 0, 0, 0, 0], _hps(self.pyboy1, yellow=False))
        np.testing.assert_allclose([20, 0, 0, 0, 0, 0], _hps(self.pyboy2, yellow=False))
        np.testing.assert_allclose(
            [33, 25, 65, 0, 0, 0], _hps(self.pyboy3, yellow=False)
        )

    def test_max_hps(self):
        """Tests the max_hps() method."""
        np.testing.assert_allclose(
            [0, 0, 0, 0, 0, 0], _max_hps(self.pyboy1, yellow=False)
        )
        np.testing.assert_allclose(
            [20, 0, 0, 0, 0, 0], _max_hps(self.pyboy2, yellow=False)
        )
        np.testing.assert_allclose(
            [33, 25, 65, 0, 0, 0], _max_hps(self.pyboy3, yellow=False)
        )

    def test_exps(self):
        """Tests the exps() method."""
        np.testing.assert_allclose([0, 0, 0, 0, 0, 0], _exps(self.pyboy1, yellow=False))
        np.testing.assert_allclose(
            [135, 0, 0, 0, 0, 0], _exps(self.pyboy2, yellow=False)
        )
        np.testing.assert_allclose(
            [761, 314, 7085, 0, 0, 0], _exps(self.pyboy3, yellow=False)
        )

    def test_moves(self):
        """Tests the moves() method."""
        np.testing.assert_allclose(
            [
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _moves(self.pyboy1, yellow=False),
        )
        np.testing.assert_allclose(
            [
                [33, 39, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _moves(self.pyboy2, yellow=False),
        )
        np.testing.assert_allclose(
            [
                [33, 111, 0, 0],
                [16, 28, 0, 0],
                [33, 39, 145, 55],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _moves(self.pyboy3, yellow=False),
        )

    def test_pps(self):
        """Tests the pps() method."""
        np.testing.assert_allclose(
            [
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _pps(self.pyboy1, yellow=False),
        )
        np.testing.assert_allclose(
            [
                [35, 30, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _pps(self.pyboy2, yellow=False),
        )
        np.testing.assert_allclose(
            [
                [35, 40, 0, 0],
                [35, 15, 0, 0],
                [35, 30, 30, 25],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _pps(self.pyboy3, yellow=False),
        )

    def test_max_pps(self):
        """Tests the max_pps() method."""
        np.testing.assert_allclose(
            [
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _max_pps(self.pyboy1, yellow=False),
        )
        np.testing.assert_allclose(
            [
                [35, 30, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _max_pps(self.pyboy2, yellow=False),
        )
        np.testing.assert_allclose(
            [
                [35, 40, 0, 0],
                [35, 15, 0, 0],
                [35, 30, 30, 25],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
            ],
            _max_pps(self.pyboy3, yellow=False),
        )

    def test_seen_pokemons(self):
        """Tests the seen_pokemons() method."""
        self.assertEqual(0, _seen_pokemons(self.pyboy1, yellow=False))
        self.assertEqual(2, _seen_pokemons(self.pyboy2, yellow=False))
        self.assertEqual(20, _seen_pokemons(self.pyboy3, yellow=False))

    def test_owned_pokemons(self):
        """Tests the owned_pokemons() method."""
        self.assertEqual(0, _owned_pokemons(self.pyboy1, yellow=False))
        self.assertEqual(1, _owned_pokemons(self.pyboy2, yellow=False))
        self.assertEqual(4, _owned_pokemons(self.pyboy3, yellow=False))

    def test_events(self):
        """Tests the events() method."""
        self.assertEqual(0, _events(self.pyboy1, yellow=False))
        self.assertEqual(6, _events(self.pyboy2, yellow=False))
        self.assertEqual(26, _events(self.pyboy3, yellow=False))

    def test_game_area(self):
        """Tests the game_area() method."""
        np.testing.assert_allclose(
            _game_area(self.pyboy1),
            np.array(
                [
                    [
                        272,
                        272,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        262,
                        263,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        278,
                        279,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        270,
                        271,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        4,
                        5,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        301,
                        302,
                        257,
                        257,
                        257,
                        257,
                        6,
                        7,
                        257,
                        257,
                        257,
                        257,
                        324,
                        325,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        317,
                        318,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        264,
                        265,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        317,
                        318,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        326,
                        327,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        319,
                        303,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        257,
                        280,
                        281,
                        257,
                        257,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                    ],
                    [
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                        272,
                    ],
                ]
            ),
        )
        np.testing.assert_allclose(
            _game_area(self.pyboy2),
            np.array(
                [
                    [
                        291,
                        291,
                        291,
                        291,
                        261,
                        262,
                        339,
                        339,
                        339,
                        339,
                        339,
                        339,
                        339,
                        339,
                        264,
                        265,
                        291,
                        291,
                        291,
                        291,
                    ],
                    [
                        313,
                        291,
                        291,
                        291,
                        277,
                        312,
                        274,
                        274,
                        274,
                        274,
                        274,
                        274,
                        274,
                        274,
                        312,
                        281,
                        313,
                        291,
                        291,
                        291,
                    ],
                    [
                        291,
                        291,
                        291,
                        291,
                        277,
                        312,
                        274,
                        274,
                        274,
                        274,
                        274,
                        274,
                        274,
                        274,
                        312,
                        281,
                        291,
                        291,
                        291,
                        291,
                    ],
                    [
                        291,
                        291,
                        313,
                        291,
                        277,
                        278,
                        279,
                        279,
                        279,
                        279,
                        279,
                        279,
                        279,
                        279,
                        280,
                        281,
                        291,
                        291,
                        313,
                        291,
                    ],
                    [
                        291,
                        291,
                        291,
                        291,
                        293,
                        294,
                        266,
                        266,
                        266,
                        331,
                        331,
                        266,
                        266,
                        266,
                        296,
                        297,
                        291,
                        291,
                        291,
                        291,
                    ],
                    [
                        313,
                        291,
                        291,
                        291,
                        271,
                        290,
                        290,
                        290,
                        331,
                        331,
                        331,
                        331,
                        331,
                        331,
                        331,
                        287,
                        313,
                        291,
                        291,
                        291,
                    ],
                    [
                        291,
                        291,
                        291,
                        291,
                        271,
                        266,
                        266,
                        266,
                        267,
                        268,
                        266,
                        266,
                        266,
                        266,
                        266,
                        287,
                        291,
                        291,
                        291,
                        291,
                    ],
                    [
                        291,
                        291,
                        313,
                        291,
                        334,
                        282,
                        282,
                        282,
                        0,
                        1,
                        282,
                        282,
                        282,
                        282,
                        282,
                        335,
                        291,
                        291,
                        313,
                        291,
                    ],
                    [
                        291,
                        291,
                        291,
                        291,
                        313,
                        313,
                        313,
                        313,
                        2,
                        3,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        313,
                        291,
                        291,
                        291,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        291,
                        291,
                        291,
                        291,
                        270,
                        270,
                        270,
                        270,
                        270,
                        270,
                        326,
                        327,
                        270,
                        270,
                        270,
                        270,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        291,
                        291,
                        313,
                        291,
                        341,
                        341,
                        57,
                        56,
                        341,
                        341,
                        342,
                        343,
                        341,
                        341,
                        341,
                        341,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        313,
                        313,
                        313,
                        313,
                        300,
                        300,
                        59,
                        58,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        313,
                        313,
                        313,
                        313,
                        300,
                        259,
                        300,
                        259,
                        300,
                        259,
                        300,
                        259,
                        300,
                        300,
                        300,
                        300,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        313,
                        313,
                        313,
                        313,
                        259,
                        300,
                        259,
                        300,
                        259,
                        300,
                        259,
                        300,
                        300,
                        300,
                        300,
                        300,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        313,
                        313,
                        313,
                        313,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        300,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                    ],
                    [
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                        313,
                    ],
                ]
            ),
        )
        np.testing.assert_allclose(
            _game_area(self.pyboy3),
            [
                [
                    273,
                    273,
                    273,
                    273,
                    292,
                    292,
                    332,
                    339,
                    339,
                    339,
                    339,
                    339,
                    339,
                    333,
                    295,
                    295,
                    273,
                    273,
                    273,
                    273,
                ],
                [
                    273,
                    273,
                    273,
                    273,
                    292,
                    292,
                    346,
                    274,
                    274,
                    274,
                    274,
                    274,
                    274,
                    346,
                    295,
                    295,
                    273,
                    273,
                    273,
                    273,
                ],
                [
                    311,
                    311,
                    311,
                    311,
                    308,
                    292,
                    346,
                    274,
                    274,
                    274,
                    274,
                    274,
                    274,
                    346,
                    295,
                    310,
                    311,
                    311,
                    311,
                    275,
                ],
                [
                    311,
                    311,
                    311,
                    311,
                    311,
                    308,
                    348,
                    279,
                    279,
                    279,
                    279,
                    279,
                    279,
                    349,
                    310,
                    311,
                    311,
                    311,
                    275,
                    295,
                ],
                [
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    271,
                    266,
                    266,
                    266,
                    266,
                    266,
                    266,
                    287,
                    291,
                    291,
                    291,
                    291,
                    295,
                    295,
                ],
                [
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    271,
                    331,
                    331,
                    331,
                    331,
                    331,
                    331,
                    287,
                    313,
                    291,
                    291,
                    291,
                    295,
                    295,
                ],
                [
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    271,
                    331,
                    267,
                    268,
                    322,
                    323,
                    331,
                    287,
                    291,
                    291,
                    291,
                    291,
                    295,
                    310,
                ],
                [
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    334,
                    282,
                    0,
                    1,
                    330,
                    330,
                    282,
                    335,
                    291,
                    291,
                    313,
                    291,
                    310,
                    311,
                ],
                [
                    313,
                    313,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    2,
                    3,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    313,
                    313,
                ],
                [
                    313,
                    313,
                    104,
                    105,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    313,
                ],
                [
                    313,
                    313,
                    106,
                    107,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    313,
                    313,
                ],
                [
                    311,
                    311,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    313,
                    313,
                ],
                [
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                ],
                [
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                ],
                [
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                ],
                [
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    310,
                    311,
                    311,
                    311,
                    310,
                    311,
                ],
                [
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                    291,
                ],
                [
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                    291,
                    291,
                    313,
                    291,
                ],
            ],
        )


if __name__ == "__main__":
    unittest.main()
