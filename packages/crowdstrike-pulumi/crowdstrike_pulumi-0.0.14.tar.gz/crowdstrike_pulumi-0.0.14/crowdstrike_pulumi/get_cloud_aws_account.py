# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetCloudAwsAccountResult',
    'AwaitableGetCloudAwsAccountResult',
    'get_cloud_aws_account',
    'get_cloud_aws_account_output',
]

@pulumi.output_type
class GetCloudAwsAccountResult:
    """
    A collection of values returned by getCloudAwsAccount.
    """
    def __init__(__self__, account_id=None, accounts=None, id=None, organization_id=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if accounts and not isinstance(accounts, list):
            raise TypeError("Expected argument 'accounts' to be a list")
        pulumi.set(__self__, "accounts", accounts)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[builtins.str]:
        """
        Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organization_id filter for OR matching
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def accounts(self) -> Sequence['outputs.GetCloudAwsAccountAccountResult']:
        """
        The list of AWS accounts
        """
        return pulumi.get(self, "accounts")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> Optional[builtins.str]:
        """
        Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with account_id filter for OR matching
        """
        return pulumi.get(self, "organization_id")


class AwaitableGetCloudAwsAccountResult(GetCloudAwsAccountResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudAwsAccountResult(
            account_id=self.account_id,
            accounts=self.accounts,
            id=self.id,
            organization_id=self.organization_id)


def get_cloud_aws_account(account_id: Optional[builtins.str] = None,
                          organization_id: Optional[builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudAwsAccountResult:
    """
    This data source provides information about AWS accounts in Falcon.

    ## API Scopes

    The following API scopes are required:

    - Cloud security AWS registration | Read & Write
    - CSPM registration | Read & Write

    ## Example Usage

    ```python
    import pulumi
    import pulumi_crowdstrike as crowdstrike

    all = crowdstrike.get_cloud_aws_account()
    specific = crowdstrike.get_cloud_aws_account(account_id="123456789012")
    org = crowdstrike.get_cloud_aws_account(organization_id="o-123456789012")
    ```


    :param builtins.str account_id: Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organization_id filter for OR matching
    :param builtins.str organization_id: Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with account_id filter for OR matching
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('crowdstrike:index/getCloudAwsAccount:getCloudAwsAccount', __args__, opts=opts, typ=GetCloudAwsAccountResult).value

    return AwaitableGetCloudAwsAccountResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        accounts=pulumi.get(__ret__, 'accounts'),
        id=pulumi.get(__ret__, 'id'),
        organization_id=pulumi.get(__ret__, 'organization_id'))
def get_cloud_aws_account_output(account_id: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                 organization_id: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCloudAwsAccountResult]:
    """
    This data source provides information about AWS accounts in Falcon.

    ## API Scopes

    The following API scopes are required:

    - Cloud security AWS registration | Read & Write
    - CSPM registration | Read & Write

    ## Example Usage

    ```python
    import pulumi
    import pulumi_crowdstrike as crowdstrike

    all = crowdstrike.get_cloud_aws_account()
    specific = crowdstrike.get_cloud_aws_account(account_id="123456789012")
    org = crowdstrike.get_cloud_aws_account(organization_id="o-123456789012")
    ```


    :param builtins.str account_id: Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organization_id filter for OR matching
    :param builtins.str organization_id: Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with account_id filter for OR matching
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('crowdstrike:index/getCloudAwsAccount:getCloudAwsAccount', __args__, opts=opts, typ=GetCloudAwsAccountResult)
    return __ret__.apply(lambda __response__: GetCloudAwsAccountResult(
        account_id=pulumi.get(__response__, 'account_id'),
        accounts=pulumi.get(__response__, 'accounts'),
        id=pulumi.get(__response__, 'id'),
        organization_id=pulumi.get(__response__, 'organization_id')))
