## How it works

Fully automated [{{ builder_package_name }}]({{ builder_repo_url }}) carefully generates
type annotations for each service, patiently waiting for `{{ package.library_name }}` updates. It delivers
drop-in type annotations for you and makes sure that:

- All available `{{ package.library_name }}` services are covered.
- Each public class and method of every `{{ package.library_name }}` service gets valid type annotations
  extracted from `botocore` schemas.
- Type annotations include up-to-date documentation.
- Link to documentation is provided for every method.
- Code is processed by [ruff](https://docs.astral.sh/ruff/) for readability.

## What's new

### Implemented features

- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3` libraries
- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs` compatibility
- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type annotations for each service
- Generated `TypeDefs` for each service
- Generated `Literals` for each service
- Auto discovery of types for `boto3.client` and `boto3.resource` calls
- Auto discovery of types for `session.client` and `session.resource` calls
- Auto discovery of types for `client.get_waiter` and `client.get_paginator` calls
- Auto discovery of types for `ServiceResource` and `Resource` collections
- Auto discovery of types for `aiobotocore.Session.create_client` calls

### Latest changes

Builder changelog can be found in [Releases]({{ builder_repo_url }}/releases).

## Versioning

`{{ package.pypi_name }}` version is the same as related `{{ package.library_name }}` version and follows
[Python Packaging version specifiers](https://packaging.python.org/en/latest/specifications/version-specifiers/).

## Thank you

- [Allie Fitter](https://github.com/alliefitter) for
  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),
  this package is based on top of his work
- [black](https://github.com/psf/black) developers for an awesome formatting tool
- [Timothy Edmund Crosley](https://github.com/timothycrosley) for
  [isort](https://github.com/PyCQA/isort) and how flexible it is
- [mypy](https://github.com/python/mypy) developers for doing all dirty work for us
- [pyright](https://github.com/microsoft/pyright) team for the new era of typed Python

## Documentation

All services type annotations can be found in [{{ package.library_name }} docs]({{ package.get_local_doc_link() }})

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features in
[{{ builder_package_name }}]({{ builder_repo_url }}/issues/) repository.
