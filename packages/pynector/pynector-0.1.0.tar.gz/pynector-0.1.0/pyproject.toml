[project]
name = "pynector"
version = "0.1.0"
description = "Python Connector Library"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "pynector Team", email = "info@pynector.org"}
]
dependencies = [
    "anyio>=4.9.0",
    "pyyaml>=6.0.2",
    "httpx>=0.27.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "strict"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "\\.\\.\\.",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=3.0.0",
    "hypothesis>=6.0.0",
    "pre-commit>=4.2.0",
    "aiohttp>=3.9.0",  # For mock HTTP server in tests
]

[project.optional-dependencies]
observability = [
    "opentelemetry-api>=1.26.0",
    "opentelemetry-sdk>=1.26.0",
    "structlog>=25.3.0",
]

zipkin = [
    "opentelemetry-exporter-zipkin>=1.11.1",
]

otlp = [
    "opentelemetry-exporter-otlp>=1.32.1",
]

sdk = [
    "openai>=1.12.0",
    "anthropic>=0.8.0",
]

all = [
    "opentelemetry-api>=1.26.0",
    "opentelemetry-sdk>=1.26.0",
    "structlog>=25.3.0",
    "opentelemetry-exporter-zipkin>=1.11.1",
    "opentelemetry-exporter-otlp>=1.32.1",
    "openai>=1.12.0",
    "anthropic>=0.8.0",
]




[tool.hatch.build.targets.wheel]
packages = ["src/pynector"]

[tool.hatch.build]
exclude = [
    "dev/*",
    "data/*",
    "notebooks/*",
    "tests/*",
    "*.pyc",
    "__pycache__",
    "temp_logs/*",
    "logs/*",
    "reports"
]
