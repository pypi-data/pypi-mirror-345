[tool.poetry]
name = "gcm-diagnostics"
version = "v1.4.1"
description = "Business validation diagnostics (errors) collection library. With FastAPI support."
authors = ["Michal Kuchta <niximor@gmail.com>"]
readme = "README.md"
packages = [
    { include = "gcm_diagnostics" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.urls]
Homepage = "https://gitlab.com/gcm-cz/gcm-diagnostics"
Repository = "https://gitlab.com/gcm-cz/gcm-diagnostics"
Issues = "https://gitlab.com/gcm-cz/gcm-diagnostics/-/issues"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2"
fastapi = "^0"


[tool.poetry.group.dev.dependencies]
pytest = "^8"
mypy = "^1"
pylint = "^3"
ruff = "^0"
httpx = "^0.28.1"
pytest-asyncio = "^0.25.2"
assertpy = "^1.1"
pytest-cov = "^6.0.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pylint.'MESSAGES CONTROL']
max-line-length = 130
max-args = 8
max-positional-arguments = 8
disable = [
    "missing-module-docstring",
    "too-few-public-methods",
    "duplicate-code",
]
enable = [
    "useless-suppression"
]
load-plugins = [
    "pylint.extensions.no_self_use",
]

[tool.mypy]
# more informative output
pretty = true
show_error_codes = true
show_error_context = true

# stricter rules
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
check_untyped_defs = true

# relaxing rules
strict_optional = false
follow_imports = "silent"
disable_error_code = [
    "import-untyped",
]


[tool.ruff]
line-length = 130

[tool.ruff.lint]
# see https://docs.astral.sh/ruff/rules/ for more information about what checks each option adds
select = [
    "F",     # pyflakes
    "E",     # pycodestyle (former pep8) error
    "W",     # pycodestyle (former pep8) warning
    "I",     # isort
    "N",     # pep8-naming
    "RUF",   # RUFF's own rules
    "B",     # flake8-bugbear
    "S",     # flake8-bandit
    "A",     # flake8-builtins
    "ASYNC", # flake8-async
    "DTZ",   # flake8-datetimez
    "YTT",   # flake8-annotations
    "C4",    # flake8-comprehension
    "G",     # flake8-logging-format
]
ignore = [
    "N818",  # https://docs.astral.sh/ruff/rules/error-suffix-on-exception-name/
    "S608",  # https://docs.astral.sh/ruff/rules/hardcoded-sql-expression/
]
