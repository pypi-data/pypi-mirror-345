name: Documentation

on:
  push:
    paths:
      - 'docs/**'
      - 'src/**'
      - 'examples/**'
      - 'README.md'
      - 'pyproject.toml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
      - 'examples/**'
      - 'README.md'
      - 'pyproject.toml'
      - '.github/workflows/docs.yml'
  release:
    types: [published]
  workflow_dispatch:

# Permissions needed for this workflow
permissions:
  contents: write
  pages: write
  pull-requests: write
  id-token: write

# Concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Documentation preview for PRs
  docs-preview:
    name: Documentation Preview
    if: |
      github.event_name == 'pull_request' && 
      github.actor != 'renovate[bot]' && 
      github.actor != 'dependabot[bot]' && 
      !contains(github.actor, 'bot')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt
      
      - name: Build documentation
        run: |
          python -m pip install nox
          python -m pip install -e ".[docs]"
          python -m nox -s docs
      
      - name: Upload documentation preview
        uses: actions/upload-artifact@v4
        with:
          name: docs-preview
          path: docs/_build/html
          if-no-files-found: error
      
      - name: Deploy to GitHub Pages (PR Preview)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
          destination_dir: pr-preview/${{ github.event.pull_request.number }}
          keep_files: true
      
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts`;
            const pagesUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/pr-preview/${context.issue.number}/`;
            const comment = `文档预览已成功构建！\n\n- [查看文档预览](${pagesUrl})\n- [下载构建产物](${artifactUrl})`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Deploy documentation to GitHub Pages
  docs-deploy:
    name: Deploy Documentation
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      github.event_name == 'release' ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt
      
      - name: Build documentation
        run: |
          python -m pip install nox
          python -m pip install -e ".[docs]"
          python -m nox -s docs
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/_build/html'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
