{"content": "### EXISTING STRUCTURES\n\n### Burner Mining Drill at position (41.0, -82.0)\nConsists of the following entities:\n- Burner Mining Drill (position (41.0, -82.0)) with the status EntityStatus.WORKING and currently using coal as fuel. It has a drop position at (41.5, -80.5) and is connected to a wooden chest for resource extraction.\n\n### Wooden Chest at position (41.5, -80.5)\nConsists of the following entities:\n- Wooden Chest (position (41.5, -80.5)) with an inventory containing coal (currently 4). It is the drop position for the Burner Mining Drill.\n\n### Stone Furnace at position (-15.0, -50.0)\nConsists of the following entities:\n- Stone Furnace (position (-15.0, -50.0)) with the status EntityStatus.NO_INGREDIENTS, indicating it currently has no ingredients to smelt. It has a fuel inventory containing coal (1) and a result inventory with iron plates (46).\n\n### ERROR TIPS\n- **Error extracting items from wooden chest**: Ensure that the wooden chest contains the item you are trying to extract. In this case, the error occurred because the wooden chest did not contain iron ore.\n- **Warnings about full chest**: Regularly check the inventory of the wooden chest at (41.5, -80.5) to ensure it is not full, as this will prevent the Burner Mining Drill from continuing its operation.\n- **Burner Mining Drill status NO_FUEL**: Monitor the fuel levels in the Burner Mining Drill. If it runs out of fuel, it will stop working. Ensure a steady supply of coal to avoid interruptions.\n\n### NAMESPACE\n- **Utility Functions Defined**:\n  - `extract_item`: Used to extract items from entities.\n    - **Failure Mode**: Could not extract iron-ore from wooden-chest at (41.5, -80.5) due to the absence of the item.\n    - **Success Mode**: Successfully extracted coal from the wooden chest multiple times.\n  \n- **Important Variables Assigned**:\n  - `extracted_items`: List of items extracted, type: List[Item]\n  - `wooden_chest`: Entity reference to the wooden chest, type: Entity\n  - `quantity`: Integer representing the number of items to extract, type: int\n  - `final_inventory`: Dictionary representing the current inventory, type: Dict[str, int]"}