"""
This type stub file was generated by pyright.
"""

import numpy as np
from functools import cached_property
from typing import List, Union
from .base import EmbeddingFunction
from .registry import register
from .utils import AUDIO, IMAGES, TEXT
from lancedb.pydantic import PYDANTIC_VERSION

@register("imagebind")
class ImageBindEmbeddings(EmbeddingFunction):
    """
    An embedding function that uses the ImageBind API
    For generating multi-modal embeddings across
    six different modalities: images, text, audio, depth, thermal, and IMU data

    to download package, run :
        `pip install imagebind-packaged==0.1.2`
    """
    name: str = ...
    device: str = ...
    normalize: bool = ...
    if PYDANTIC_VERSION.major < 2:
        class Config:
            keep_untouched = ...
        
        
    else:
        model_config = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @cached_property
    def embedding_model(self): # -> Any:
        """
        Get the embedding model. This is cached so that the model is only loaded
        once per process.
        """
        ...
    
    def ndims(self): # -> int:
        ...
    
    def compute_query_embeddings(self, query: Union[str], *args, **kwargs) -> List[np.ndarray]:
        """
        Compute the embeddings for a given user query

        Parameters
        ----------
        query : Union[str]
            The query to embed. A query can be either text, image paths or audio paths.
        """
        ...
    
    def generate_image_embeddings(self, image: IMAGES) -> np.ndarray:
        ...
    
    def generate_audio_embeddings(self, audio: AUDIO) -> np.ndarray:
        ...
    
    def generate_text_embeddings(self, text: TEXT) -> np.ndarray:
        ...
    
    def compute_source_embeddings(self, source: Union[IMAGES, AUDIO], *args, **kwargs) -> List[np.array]:
        """
        Get the embeddings for the given sourcefield column in the pydantic model.
        """
        ...
    
    def sanitize_input(self, input: Union[IMAGES, AUDIO]) -> Union[List[bytes], np.ndarray]:
        """
        Sanitize the input to the embedding function.
        """
        ...
    
    def get_embedding_model(self): # -> Any:
        """
        fetches the imagebind embedding model
        """
        ...
    


