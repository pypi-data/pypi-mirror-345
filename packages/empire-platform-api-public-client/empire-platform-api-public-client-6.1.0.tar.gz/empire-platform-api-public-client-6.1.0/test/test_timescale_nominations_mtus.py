# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Empire**, the allocation and nomination platform of BritNed_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/britned/empire-platform-api) 

    The version of the OpenAPI document: 6.1.0
    Contact: britned.info@britned.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from empire_platform_api_public_client.models.timescale_nominations_mtus import TimescaleNominationsMtus

class TestTimescaleNominationsMtus(unittest.TestCase):
    """TimescaleNominationsMtus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TimescaleNominationsMtus:
        """Test TimescaleNominationsMtus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimescaleNominationsMtus`
        """
        model = TimescaleNominationsMtus()
        if include_optional:
            return TimescaleNominationsMtus(
                mtu = '2022-01-04T10:00:00.000Z',
                mtu_status = 'EDITABLE',
                total_trs = 56,
                current_nomination = empire_platform_api_public_client.models.timescale_nominations_mtus_current_nomination.TimescaleNominations_mtus_currentNomination(
                    status = 'PRE', 
                    value = 56, 
                    floored_value = 56, 
                    pre_curtailed_value = 56, ),
                not_nominated_trs = 56
            )
        else:
            return TimescaleNominationsMtus(
                mtu = '2022-01-04T10:00:00.000Z',
                mtu_status = 'EDITABLE',
                total_trs = 56,
                not_nominated_trs = 56,
        )
        """

    def testTimescaleNominationsMtus(self):
        """Test TimescaleNominationsMtus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
