"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from duckyai.types import BaseModel
from typing import Any, Dict, List, Optional
from typing_extensions import NotRequired, TypedDict


class DocumentTypedDict(TypedDict):
    doc_id: str
    r"""The unique identifier of the document"""
    content_chunks: List[str]
    next_cursor: NotRequired[str]
    r"""A cursor to fetch the next set of chunks (if available)"""
    metadata: NotRequired[Dict[str, Any]]
    r"""Metadata associated with the document. Accepts key value pairs where the value can be a string, number, boolean, or list of strings."""
    title: NotRequired[str]
    r"""Title of the document"""
    source_url: NotRequired[str]
    r"""URL associated with the document"""
    status: NotRequired[str]
    r"""Status of the document (pending, indexing, indexed)"""


class Document(BaseModel):
    doc_id: str
    r"""The unique identifier of the document"""

    content_chunks: List[str]

    next_cursor: Optional[str] = None
    r"""A cursor to fetch the next set of chunks (if available)"""

    metadata: Optional[Dict[str, Any]] = None
    r"""Metadata associated with the document. Accepts key value pairs where the value can be a string, number, boolean, or list of strings."""

    title: Optional[str] = None
    r"""Title of the document"""

    source_url: Optional[str] = None
    r"""URL associated with the document"""

    status: Optional[str] = None
    r"""Status of the document (pending, indexing, indexed)"""
