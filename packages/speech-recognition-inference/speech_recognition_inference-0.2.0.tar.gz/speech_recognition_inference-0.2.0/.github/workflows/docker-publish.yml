name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '0 1 * * 0'
  push:
    branches: [ "main"]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract Version from Tag
      - name: Extract Version Number
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        id: extract_version
        run: |
          VERSION=$(echo "${GITHUB_REF#refs/tags/v}")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      # Step 6: Build Docker Image for Branch Push (excluding tag pushes)
      - name: Build Docker Image (Branch Push)
        if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false  # Don't push the image for branch pushes
          no-cache: true
          tags: ghcr.io/${{env.IMAGE_NAME}}:main

      # Step 7: Build Docker Image for Pull Requests (without pushing)
      - name: Build Docker Image (Pull Request)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false  # Don't push the image for pull requests
          no-cache: true
          tags: ghcr.io/${{env.IMAGE_NAME}}:pr-${{ github.event.pull_request.number }}

      # Build and Push Docker image with Buildx when new tag is published
      - name: Build and Push Docker Image (New Tag is Published)
        if: github.event_name == 'push' && startsWith(github.ref,'refs/tags/v')
        id: build-and-push
        uses: docker/build-push-action@v5
        env:
          VERSION: ${{env.VERSION}}
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          no-cache: true
          tags: |
            ghcr.io/${{env.IMAGE_NAME}}:${{env.VERSION}}
            ghcr.io/${{env.IMAGE_NAME}}:latest


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image (New Tag is Published)
        if: ${{ github.event_name == 'push' && startsWith(github.ref,'refs/tags/v')}}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        env:
          VERSION: ${{env.VERSION}}
        run: cosign sign ghcr.io/${{env.IMAGE_NAME}}:${{env.VERSION}}
