Metadata-Version: 2.4
Name: pyautoschema
Version: 0.2.0
Summary: Automatically generate Pydantic models from dictionaries
Author: Shakhobiddin Bozorov
Author-email: Shakhobiddin Bozorov <bozorovshahob27@gmail.com>
License: Shakhobiddin Bozorov
        
        
        MIT License
        
        Copyright (c) 2025 Shakhobiddin Bozorov
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
Project-URL: Homepage, https://pypi.org/project/pyautoschema/
Project-URL: Repository, https://github.com/Robben1972/pyautoschema
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: license-file
Dynamic: requires-python

# PyAutoSchema

**PyAutoSchema** is a lightweight Python library that automatically generates [Pydantic](https://docs.pydantic.dev/) models from Python dictionaries, JSON, or XML files. It's especially useful for fast prototyping, validating API responses, or converting JSON-like structures into Pydantic schemas.

## üîß Features

- Supports nested dictionaries and complex data structures
- Infers list, union, and other advanced types
- Generates clean, human-readable Pydantic classes
- Supports JSON and XML input formats
- Simple one-line usage

## üì¶ Installation

Install PyAutoSchema using pip:

```bash
pip install pyautoschema
```

## üöÄ Usage

### Python Dictionary Example

```python
from pyautoschema import schemaCreator

sample = {
    "id": 123,
    "name": "Alice",
    "tags": ["admin", "user"],
    "profile": {
        "age": 30,
        "active": True
    }
}

infer_schema(sample, output="schemas.py")
```

Generated output (`schemas.py`):

```python
from typing import List
from pydantic import BaseModel

class Profile(BaseModel):
    age: int
    active: bool

class InferredModel(BaseModel):
    id: int
    name: str
    tags: List[str]
    profile: Profile
```

### JSON File Example

```bash
pyautoschema --input sample.json --output schemas.py
```

### XML File Example

```bash
pyautoschema --input sample.xml --output schemas.py
```

## üõ† CLI Usage

PyAutoSchema also provides a command-line interface for generating schemas directly from JSON or XML files.

```bash
pyautoschema --input <path_to_file> --output <output_file>
```

- `--input` (`-i`): Path to the input `.json` or `.xml` file (required)
- `--output` (`-o`): Path to the output `.py` file (default: `schemas.py`)

## üß™ Supported Types

PyAutoSchema automatically detects and maps the following types:

- **Primitive Types**: `int`, `float`, `bool`, `str`
- **Advanced Types**: `datetime`, `date`, `time`, `UUID`, `EmailStr`, `HttpUrl`
- **Collections**: `List`, `Union`, `Any`


## üåê Links

- [Homepage](https://pypi.org/project/pyautoschema/)
- [Repository](https://github.com/Robben1972/pyautoschema)

## üìÑ License

This project is licensed under the terms of the MIT License. See the [LICENSE](LICENSE) file for details.
