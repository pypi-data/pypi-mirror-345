"use strict";(self.webpackChunkhintbot=self.webpackChunkhintbot||[]).push([[396],{396:(e,t,n)=>{n.r(t),n.d(t,{default:()=>f});var a=n(630),i=n(691),o=n(561),r=n(733),s=n(29),l=n.n(s);class d extends i.ReactWidget{constructor(e){super(),this._message="",this._message=e}getValue(){var e;return null===(e=this.node.querySelector("textarea"))||void 0===e?void 0:e.value}render(){return l().createElement("div",{className:"reflection"},l().createElement("p",null,this._message),l().createElement("textarea",{name:"reflection-input",className:"reflection-input",rows:10}),l().createElement("p",{style:{fontStyle:"italic"}},"Text entered here will be passed to the external language model service to improve hint relevance."))}}var c=n(641),u=n(110);async function h(e="",t={}){const n=u.ServerConnection.makeSettings(),a=c.URLExt.join(n.baseUrl,"hintbot",e);let i;try{i=await u.ServerConnection.makeRequest(a,t,n)}catch(e){throw new u.ServerConnection.NetworkError(e)}let o=await i.text();if(o.length>0)try{o=JSON.parse(o)}catch(e){console.log("Not a JSON response body.",i)}if(!i.ok)throw new u.ServerConnection.ResponseError(i,o.message||o);return o}const p=async(e,t,n)=>{var a;const o=e.getMetadata("hintHistory");let r=!1;if(o)for(let s=0;s<o.length;s++)if(!o[s].isGPT&&0===(null===(a=o[s])||void 0===a?void 0:a.hintContent)){const a=await h("check_ta",{method:"POST",body:JSON.stringify({request_id:o[s].requestId})});if(200==a.statusCode){if(a.feedback_ready){o[s].hintContent=a.feedback;const l=e.getMetadata("questionIndex");i.Notification.info(`Instructor feedback for Question ${l} is now available. You can view it by expanding the bar beneath the question.`,{autoClose:2e4}),r=!0,n.exporters.forEach((i=>{n.publishEvent(t,{eventName:"GetInstructorHint",eventTime:Date.now(),eventInfo:{gradeId:e.getMetadata("nbgrader").grade_id,requestId:o[s].requestId,hintType:o[s].hintType,hintContent:a.feedback}},i,!1)}))}}else o[s].error=a.message,n.exporters.forEach((i=>{n.publishEvent(t,{eventName:"GetInstructorHintError",eventTime:Date.now(),eventInfo:{gradeId:e.getMetadata("nbgrader").grade_id,requestId:o[s].requestId,hintType:o[s].hintType,error:a.message}},i,!1)}))}return r&&e.setMetadata("hintHistory",o),r},m=async(e,t,n,a)=>{var i,o;document.getElementById(`hint-history-bar-${e.id}`)&&document.getElementById(`hint-history-bar-${e.id}`).remove();const r=e.getMetadata("hintHistory"),s=document.createElement("div");if(s.classList.add("hint-history-bar"),s.id=`hint-history-bar-${e.id}`,r&&r.length>0){for(let t=0;t<r.length;t++)if(0!==(null===(i=r[t])||void 0===i?void 0:i.hintContent)){const i=document.createElement("div"),o=document.createElement("button");o.classList.add("accordion"),r[t].isGPT||o.classList.add("ta-accordion"),o.innerText=r[t].isGPT?`Click to review previous AI hint (${r[t].hintType})`:`Click to review previous instructor feedback (${r[t].hintType})`;const l=document.createElement("div");l.classList.add("accordion-panel");const d=document.createElement("p");d.classList.add(),d.innerText=r[t].hintContent,l.appendChild(d),i.appendChild(o),i.appendChild(l),s.appendChild(i),o.addEventListener("click",(function(){this.classList.toggle("active"),l.style.maxHeight?l.style.maxHeight=null:l.style.maxHeight=l.scrollHeight+"px",a.exporters.forEach((i=>{a.publishEvent(n,{eventName:this.classList.contains("active")?"HintHistoryReview":"HintHistoryHide",eventTime:Date.now(),eventInfo:{gradeId:e.getMetadata("nbgrader").grade_id,requestId:r[t].requestId,isGPT:r[t].isGPT,hintType:r[t].hintType,hintContent:r[t].hintContent}},i,!1)}))}))}else if(null===(o=r[t])||void 0===o?void 0:o.errorMessage){const e=document.createElement("button");e.classList.add("accordion","accordion-error"),e.innerText=r[t].error;const n=document.createElement("div");n.appendChild(e),s.appendChild(n)}n.content.widgets[t].node.appendChild(s)}};class g extends i.ReactWidget{constructor(e){super(),this._message="",this._message=e}getValue(){var e,t;return{email:null===(e=this.node.querySelector("input"))||void 0===e?void 0:e.value,reflection:null===(t=this.node.querySelector("textarea"))||void 0===t?void 0:t.value}}render(){return l().createElement("div",{className:"reflection"},l().createElement("div",null,l().createElement("label",null,this._message,l().createElement("textarea",{name:"reflection-input",className:"reflection-input",rows:10}))),l().createElement("div",null,l().createElement("label",null,"Your email:",l().createElement("input",{type:"text",name:"email",className:"email"}),"@umich.edu")),l().createElement("p",{style:{fontStyle:"italic"}},"Please enter your UMich email address here so that we could notify you once the feedback is ready. The instructional team will not be able to see your email when preparing their response."))}}const b=async(e,t,n,a,o,r,s,l,d,c)=>{var u;const p=n.getMetadata("nbgrader").grade_id,b=document.createElement("div");b.id="hint-banner-placeholder",e.content.node.insertBefore(b,e.content.node.firstChild);const v=document.createElement("div");v.id="hint-banner",null===(u=e.content.node.parentElement)||void 0===u||u.insertBefore(v,e.content.node),v.innerHTML='<p><span class="loader"></span>Retrieving hint... Please do not refresh the page.</p> <p>It usually takes around 2 minutes to generate a hint. You may continue to work on the assignment in the meantime.</p>';const y=document.createElement("div");y.classList.add("hint-banner-cancel-button"),y.innerText="Cancel request",v.appendChild(y),y.onclick=async()=>{await h("cancel",{method:"POST",body:JSON.stringify({request_id:c})})};const f=a=>{v.remove(),b.remove();const c=n.getMetadata("remaining_hints");c[d]+=1,n.setMetadata("remaining_hints",c),document.getElementById(p).querySelector("."+d).querySelector(".hint-quantity").innerHTML=c[d],e.context.save(),(0,i.showDialog)({title:"Hint Request Error. Please try again later",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"HintRequestError",eventTime:Date.now(),eventInfo:{gradeId:p,requestId:null==a?void 0:a.message,promptGroup:o,prompt:r,uuid:s,preReflection:l,hintType:d}},n,!1)}))};try{const u=await h("reflection",{method:"POST",body:JSON.stringify({request_id:c,reflection_question:r,reflection_answer:l})});if(console.log("Sent reflection",u),!u)throw new Error;{const u=setInterval((async()=>{const w=await h("check",{method:"POST",body:JSON.stringify({request_id:c})});0===w.status?console.log("loading"):1===w.status?(console.log("success"),clearInterval(u),((c,u)=>{const f=n.getMetadata("hintHistory")||[];n.setMetadata("hintHistory",[...f,{requestId:u,isGPT:!0,hintType:d,hintContent:c}]),t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"HintRequestCompleted",eventTime:Date.now(),eventInfo:{hintContent:c,gradeId:p,requestId:u,promptGroup:o,prompt:r,uuid:s,preReflection:l,hintType:d}},n,!0)})),v.innerText=c,y.remove();const w=document.createElement("div");w.id="hint-banner-buttons-container";const E=document.createElement("div");E.id="hint-banner-buttons";const T=document.createElement("button");T.classList.add("hint-banner-button"),T.innerText="Helpful 👍";const q=document.createElement("button");q.classList.add("hint-banner-button"),q.innerText="Unhelpful 👎",E.appendChild(q),E.appendChild(T),w.appendChild(E),v.appendChild(w);const C=async i=>{t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"HintEvaluated",eventTime:Date.now(),eventInfo:{gradeId:p,requestId:u,hintContent:c,evaluation:i,promptGroup:o,prompt:r,uuid:s,preReflection:l,hintType:d}},n,!1)})),T.remove(),q.remove(),m(n,a,e,t)};T.onclick=()=>{C("helpful"),v.remove(),b.remove()},q.onclick=()=>{C("unhelpful"),v.innerHTML="<div><p style='display:block'>Do you want to raise this issue to a member of the instructional team for help (this will not use up a hint request)?</p><p style='display:block'>Instructors may take up to 24 hours to respond to individual requests, so if your request is sent right before an assignment is due a response may not arrive until after the deadline. The system will email you once a response has been made and you will be able to see instructional team feedback directly in your Jupyter notebook.</p><p style='display:block'>If you choose not to raise the issue to an instructional team member at this time, you can always connect with the instructors in the course slack channel.</p></div>";const a=document.createElement("button");a.classList.add("hint-banner-cancel-button"),a.innerText="Cancel";const o=document.createElement("button");o.classList.add("hint-banner-button"),o.innerText="Raise issue",E.appendChild(a),E.appendChild(o),v.appendChild(w),a.onclick=()=>{t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"InstructorRequestCanceled",eventTime:Date.now(),eventInfo:{gradeId:p,requestId:u,uuid:s,hintType:d}},n,!1)})),v.remove(),b.remove()},o.onclick=async()=>{var r,l;t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"InstructorRequestContinued",eventTime:Date.now(),eventInfo:{gradeId:p,requestId:u,uuid:s,hintType:d}},n,!1)}));const c=await(0,i.showDialog)({title:"Reflection",body:new g("Reflect on why the AI hint is not useful to you. This will help instructors provide you better feedback."),buttons:[i.Dialog.cancelButton({label:"Cancel",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"}),i.Dialog.createButton({label:"Submit",className:"jp-Dialog-button jp-mod-accept jp-mod-styled"})],hasClose:!1});if(t.exporters.forEach((n=>{var a;t.publishEvent(e,{eventName:"InstructorReflection",eventTime:Date.now(),eventInfo:{status:c.button.label,gradeId:p,uuid:s,hintType:d,reflection:null===(a=c.value)||void 0===a?void 0:a.reflection}},n,!1)})),"Submit"===c.button.label){const t=await h("ta",{method:"POST",body:JSON.stringify({request_id:u,student_email:(null===(r=c.value)||void 0===r?void 0:r.email)+"@umich.edu",student_notes:null===(l=c.value)||void 0===l?void 0:l.reflection})});if(console.log("create ta ticket",t),200!==t.statusCode)(0,i.showDialog)({title:(null==t?void 0:t.message)||"Error",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]});else{const t=n.getMetadata("hintHistory")||[];n.setMetadata("hintHistory",[...t,{requestId:u,isGPT:!1,hintType:d,hintContent:0}]),o.remove(),a.remove(),v.innerText="Request sent! You will receive a response via email when an instructional team member has reviewed your request.",e.context.save();const i=document.createElement("button");i.classList.add("hint-banner-cancel-button"),i.innerText="Close",E.appendChild(i),v.appendChild(w),i.onclick=()=>{v.remove(),b.remove()}}}}}})(JSON.parse(w.result).feedback,c)):2===w.status?(console.log("cancelled"),clearInterval(u),(n=>{v.remove(),b.remove(),(0,i.showDialog)({title:"Hint Request Cancelled",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),t.exporters.forEach((a=>{t.publishEvent(e,{eventName:"HintRequestCancelled",eventTime:Date.now(),eventInfo:{gradeId:p,requestId:n,promptGroup:o,prompt:r,uuid:s,preReflection:l,hintType:d}},a,!1)}))})(c)):(clearInterval(u),f(new Error(c)))}),1e3)}}catch(e){console.log(e),f(e)}};class v extends i.ReactWidget{constructor(){super()}getValue(){var e;return null===(e=this.node.querySelector('input[name="hint-info"]:checked'))||void 0===e?void 0:e.value}render(){return l().createElement("div",{className:"hint-info"},"You can request hints of the following types, but keep in mind you are limited in the number of hints you can request:",l().createElement("div",null,l().createElement("label",null,l().createElement("span",{className:"hint-request-bar-right-request-button planning"},"Planning")," ","A hint aimed at helping you to identify the steps needed to solve the question.")),l().createElement("div",null,l().createElement("label",null,l().createElement("span",{className:"hint-request-bar-right-request-button debugging"},"Debugging")," ","A hint aimed at helping you identify and fix a bug in your current program.")),l().createElement("div",null,l().createElement("label",null,l().createElement("span",{className:"hint-request-bar-right-request-button optimizing"},"Optimizing")," ","A hint aimed at helping you optimize your current program for better performance and readability.")))}}class y extends i.ReactWidget{constructor(){super()}getValue(){var e;return null===(e=this.node.querySelector('input[name="hint-consent"]:checked'))||void 0===e?void 0:e.value}render(){return l().createElement("div",{className:"hint-consent"},l().createElement("p",null,"The hinting features in this notebook are a part of a research prototype developed at the University of Michigan with the purpose of supporting your learning. It is completely optional to use these features, press cancel if you do not wish to use this prototype."),l().createElement("p",null,"When you request a hint this prototype takes your notebook, as well as other contextual information you might provide, and uses external/third party large language model services for analysis. Hints may be incorrect, incomplete, or misleading, and you are encouraged to critically evaluate responses before modifying your program."),l().createElement("p",null,"If you have questions about the system, contact Dr. Christopher Brooks (brooksch@umich.edu)."))}}const f={id:"hintbot:plugin",description:"A JupyterLab extension.",autoStart:!0,requires:[a.INotebookTracker,o.IJupyterLabPioneer],activate:async(e,t,n)=>{t.widgetAdded.connect((async(e,t)=>{await t.revealed,await n.loadExporters(t),await(async(e,t)=>{var n,a,o,s;const l=null===(n=e.content.model)||void 0===n?void 0:n.cells,c=async(n,a,o)=>{if(!0===e.model.getMetadata("firstTimeUsingHintbot")){const n=await(0,i.showDialog)({body:new y,buttons:[i.Dialog.cancelButton({label:"Cancel",className:"jp-mod-reject jp-mod-styled"}),i.Dialog.createButton({label:"Consent and request hint",className:"jp-mod-accept jp-mod-styled"})],hasClose:!1});if("Cancel"===n.button.label)return;t.exporters.forEach((a=>{t.publishEvent(e,{eventName:"FirstTimeUsingHintbot",eventTime:Date.now(),eventInfo:{status:n.button.label}},a,!1)})),e.model.setMetadata("firstTimeUsingHintbot",!1)}(async(e,t,n,a,o)=>{var s;const l=null===(s=n.getMetadata("nbgrader"))||void 0===s?void 0:s.grade_id,c=n.getMetadata("remaining_hints");if(document.getElementById("hint-banner"))(0,i.showDialog)({title:"Please review previous hint first.",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"HintAlreadyExists",eventTime:Date.now(),eventInfo:{gradeId:l}},n,!1)}));else if(c[o]<1)(0,i.showDialog)({title:"No hint left for this question.",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"NotEnoughHint",eventTime:Date.now(),eventInfo:{gradeId:l}},n,!1)}));else{const s=(0,r.v4)(),p="promptA",m=[{hintType:"planning",serverHintType:"plan",promptA:"Considering the program you wrote and the feedback you have received from the system so far, what do you think is a possible issue with the program plan and problem-solving steps?",promptB:"Considering the program you wrote and the feedback you have received from the system so far, what do you think is a possible issue with the program plan and problem-solving steps? Which steps in your program plan could be improved? How do you think the program plan can be updated to solve this question?"},{hintType:"debugging",serverHintType:"debug",promptA:"Considering the program you wrote and the feedback you have received from the system so far, what do you think is a possible bug in the program?",promptB:"Considering the program you wrote and the feedback you have received from the system so far, what do you think is a possible bug in the program? How does the bug affect the program? What do you think is a way to fix the bug?"},{hintType:"optimizing",serverHintType:"optimize",promptA:"Considering the program you wrote and the feedback you have received from the system so far, what do you think is a possible issue with the program in terms of performance and readability?",promptB:"Considering the program you wrote and the feedback you have received from the system so far, what do you think is a possible issue with the program in terms of performance and readability? Which parts of the program need to be optimized? How do you think the program can be improved?"}],g=await h("hint",{method:"POST",body:JSON.stringify({hint_type:m.find((e=>e.hintType===o)).serverHintType,problem_id:l,buggy_notebook_path:e.context.path})});console.log("create ticket",g);const v=null==g?void 0:g.request_id;c[o]-=1,n.setMetadata("remaining_hints",c),document.getElementById(l).querySelector("."+o).querySelector(".hint-quantity").innerHTML=c[o],e.context.save();const y=await(u=m.find((e=>e.hintType===o))[p],(0,i.showDialog)({title:"Reflection",body:new d(u),buttons:[i.Dialog.cancelButton({label:"Cancel",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"}),i.Dialog.createButton({label:"Submit",className:"jp-Dialog-button jp-mod-accept jp-mod-styled"})],hasClose:!1}));t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"Reflection",eventTime:Date.now(),eventInfo:{status:y.button.label,gradeId:l,uuid:s,hintType:o,promptGroup:p,prompt:m.find((e=>e.hintType===o))[p],reflection:y.value}},n,!1)})),"Cancel"!==y.button.label&&b(e,t,n,a,p,m.find((e=>e.hintType===o))[p],s,y.value,o,v)}var u})(e,t,n,a,o)},u=(n,a)=>{const o=document.createElement("div");o.classList.add("hint-request-bar");const r=document.createElement("div");r.classList.add("hint-request-bar-left");const s=document.createElement("div");s.classList.add("hint-request-bar-left-text"),r.appendChild(s),s.innerText="Request Hint";const l=document.createElement("button");l.classList.add("hint-request-bar-left-info-button"),l.innerText=" ? ",l.onclick=()=>{(0,i.showDialog)({body:new v,buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),t.exporters.forEach((n=>{t.publishEvent(e,{eventName:"HintTypeReview",eventTime:Date.now()},n,!1)}))},r.appendChild(l);const d=document.createElement("div");d.id=n.getMetadata("nbgrader").grade_id,d.classList.add("hint-request-bar-right");const u=document.createElement("button");u.classList.add("hint-request-bar-right-request-button","planning"),u.onclick=()=>c(n,a,"planning");const h=document.createElement("button");h.classList.add("hint-request-bar-right-request-button","debugging"),h.onclick=()=>c(n,a,"debugging");const p=document.createElement("button");if(p.classList.add("hint-request-bar-right-request-button","optimizing"),p.onclick=()=>c(n,a,"optimizing"),void 0===n.getMetadata("remaining_hints"))n.setMetadata("remaining_hints",{planning:1,debugging:3,optimizing:1}),u.innerHTML="Planning hint (<span class='hint-quantity'>1</span> left)",h.innerHTML="Debugging hint (<span class='hint-quantity'>3</span> left)",p.innerHTML="Optimizing hint (<span class='hint-quantity'>1</span> left)";else{const e=n.getMetadata("remaining_hints");u.innerHTML=`Planning hint (<span class='hint-quantity'>${e.planning}</span> left)`,h.innerHTML=`Debugging hint (<span class='hint-quantity'>${e.debugging}</span> left)`,p.innerHTML=`Optimizing hint (<span class='hint-quantity'>${e.optimizing}</span> left)`}return d.appendChild(u),d.appendChild(h),d.appendChild(p),o.appendChild(r),o.appendChild(d),o};if(void 0===e.model.getMetadata("firstTimeUsingHintbot")&&e.model.setMetadata("firstTimeUsingHintbot",!0),l){let n=1;for(let i=0;i<l.length;i++)if(l.get(i).getMetadata("nbgrader")&&"markdown"===(null===(a=l.get(i))||void 0===a?void 0:a.type)&&(null===(o=l.get(i).getMetadata("nbgrader"))||void 0===o?void 0:o.grade_id)&&!["cell-d4da7eb9acee2a6d","cell-a839e7b47494b4c2","cell-018440ed2f1b6a62","cell-018440eg2f1b6a62"].includes(null===(s=l.get(i).getMetadata("nbgrader"))||void 0===s?void 0:s.grade_id)){l.get(i).setMetadata("questionIndex",n),n+=1;const a=u(l.get(i),i);e.content.widgets[i].node.appendChild(a),await p(l.get(i),e,t),await m(l.get(i),i,e,t),setInterval((async()=>{const a=await p(l.get(i),e,t);console.log(`Check instructor feedback for question ${n}`),!0===a&&(console.log(`Received new instructor feedback for question ${n}, recreating history bar`),await m(l.get(i),i,e,t))}),3e5)}}})(t,n)}))}}}}]);