Metadata-Version: 2.4
Name: gapms
Version: 0.1.2
Summary: GAP-MS is a pipeline designed to evaluate and refine predicted gene models by integrating proteogenomic evidence from mass spectrometry with in-silico gene predictions.
Author-email: Qussai Abbas <qussai.abbas@tum.de>
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# GAP-MS: **Gene Model Assessment using Peptides from Mass Spectrometry**

**GAP-MS** is a pipeline designed to evaluate and refine predicted gene models by integrating proteogenomic evidence from mass spectrometry with in-silico gene predictions. This approach leverages an iterative machine learning framework to classify predicted proteins as *supported* or *unsupported*, improving both specificity and overall accuracy of gene models.

---

## 📦 Installation

We recommend setting up a dedicated Conda environment to manage dependencies:

```bash
conda create -n gapms_env python=3.10 perl-xml-parser perl-xml-twig -c conda-forge
conda activate gapms_env
git clone https://github.com/qussai96/GAP-MS.git
cd GAP-MS
pip install -e .
```

---

## 📂 Required Inputs

To run GAP-MS, you need the following input files:

1. **Gene models** in GTF or GFF format  
2. **Translated protein sequences** (FASTA format) of the gene models  
3. **Peptide list**  plain text (.txt) file containing peptides identified from a mass spectrometry experiment [Each peptide should be on a separate line]
---

## 🧪 Running the Pipeline

### Option 1: With translated protein FASTA file

If you already have the translated gene models in FASTA format:

```bash
gapms -g annotations.gtf -a proteins.fasta -p peptides.txt [-o /path/to/output_directory]
```
> ℹ️ **Note**: If the `-o` output directory is not specified, the results will be written to a folder named `GAPMS_Output` in the same directory as the GTF file.

### Option 2: With genome assembly file

If you only have the genome assembly (FASTA) and not the translated proteins, gapms will get the translated proteins from the assembly by running:

```bash
gapms -g annotations.gtf -a assembly.fasta -p peptides.txt [-o /path/to/output_directory]
```
---

## 🔄 Optional: Use Custom Mapping File

If you prefer to use a custom peptide-to-protein mapping (instead of running `proteomapper`), use the `-m` option:

```bash
gapms -g annotations.gtf -a assembly.fasta -m /path/to/mapping_file.tsv [-o /path/to/output_directory]
```

- The mapping file **must** include at least:
  - `peptide`
  - `protein` columns

---

## 📁 Example Data

You can find examples of input files in the `tutorials/` directory to help you get started.

---

## 📬 Feedback & Issues

If you encounter bugs or have suggestions, please open an issue on the [GitHub repository](https://github.com/qussai96/GAP-MS/issues).

---
