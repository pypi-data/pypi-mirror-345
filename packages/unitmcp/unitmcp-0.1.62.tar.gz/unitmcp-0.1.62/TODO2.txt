zaktualizuj examples/runner, dodaj testy i sprawdz czy w src/unitmcp nie ma duplikatow w implementacji,
zmniejsz wielkosc plikow, jesli maja wiecej niz 3400 linii, oddziel rozne funkcje, jesli to mozliwe do osobnych plikow

uzyj runner wszedzie tam, gdzie mozna uproscic start przykladow w exampes/ z uzyciem client-server
finalnie rkazdy przyklad powinien miec w swoim folderze pliki runner, client, server, aby pokazac jak to dziala oraz przyklady impelenmentacji zpotrzebnymi plikami konfiguracji i readme
podobnie jak to jest zaimplementowane w przykladach: examples/ai

zaproponuj inne rozwiazanie jesli ten plan mozna ulepszyc, interesuje mnie jak najprawidziej zrobione rozwiazanie, gdzie w przykladach bedzie
mogl zorientowac sie jak to dziala junior programista oraz nieprogramista: devops, admin, kazdy ktory chce to urchomic w firmie laub w swoim srodowisku w domu



sprawdz czy wszystkei foldery w examples/ maja runner, client, server, aby pokazac jak to dziala oraz przyklady impelenmentacji zpotrzebnymi plikami konfiguracji i readme
sprawdz czy sa poprawnie uruchamiane, stworz skrypt do uruchamiania kolejno wszytskich przykaldow w example/ albo zaktualziuj jesli taki istnieje
bazujac na kodzie z exampels/ stworz wiecej testsow w tests/


I've been working on updating the examples in the UnitMCP project to follow a standardized structure. Let me summarize what I've accomplished so far and what still needs to be done:

Structure Standardization
I've created and implemented:

A standardized base runner in examples/runner/base_runner.py
A template directory structure in examples/template/ with:
runner.py, client.py, server.py
config/client.yaml and config/server.yaml
README.md with documentation
tests/ directory with test files
Two utility scripts:
check_example_structure.py to verify which examples follow the standard structure
convert_example_structure.py to update examples to follow the standard structure


sprawdz czy nie ma duplikatow examples po stworzeniu template,
wszysteki przyklady i pliki powinny byc rozne
jesli nei sa to stworz plan refaktoryzacji i wykonaj zmiany a na koneic przetestuj wszystkie przyklady w examples/

