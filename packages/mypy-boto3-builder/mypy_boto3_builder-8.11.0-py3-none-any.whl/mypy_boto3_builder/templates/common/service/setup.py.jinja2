"""
Setup script for {{ package.pypi_name }}.

{{ copyright }}
"""
from pathlib import Path

from setuptools import setup  # type: ignore


LONG_DESCRIPTION = (Path(__file__).parent / "README.md").read_text()


setup(
    name="{{ package.pypi_name }}",
    version="{{ package.version }}",
    packages=["{{ package.name }}"],
    url="{{ builder_repo_url }}",
    license="MIT License",
    author="Vlad Emelianov",
    author_email="vlad.emelianov.nz@gmail.com",
    description="Type annotations for {{ package.library_name }} {{ service_name.class_name }} {{ package.library_version }} service generated with {{ builder_package_name }} {{ builder_version }}",
    classifiers=[
{% for classifier in package.get_classifiers() -%}
        {{ "\n        " -}}"{{ classifier -}}",
{%- endfor %}
    ],
    keywords='{{ package.library_name }} {{ service_name.boto3_name }} {{ package.library_name }}-stubs type-annotations mypy typeshed autocomplete',
    long_description=LONG_DESCRIPTION,
    long_description_content_type="text/markdown",
    package_data={"{{ package.name }}": ["py.typed", "*.pyi"]},
    python_requires='>={{ package.min_python_version }}',
    project_urls={
        'Documentation': '{{ package.get_local_doc_link() }}',
        'Source': '{{ builder_repo_url }}',
        'Tracker': '{{ builder_repo_url }}/issues',
    },
    {% if package.install_requires %}
    install_requires=[
        {% for item in package.install_requires.iterate_items() %}
            '{{ item.render() }}'{{ '' if loop.last else ', ' }}
        {% endfor -%}
    ],
    {% endif %}
    zip_safe=False,
)
