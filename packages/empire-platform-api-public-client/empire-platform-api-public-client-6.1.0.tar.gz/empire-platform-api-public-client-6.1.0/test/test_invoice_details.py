# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Empire**, the allocation and nomination platform of BritNed_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/britned/empire-platform-api) 

    The version of the OpenAPI document: 6.1.0
    Contact: britned.info@britned.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from empire_platform_api_public_client.models.invoice_details import InvoiceDetails

class TestInvoiceDetails(unittest.TestCase):
    """InvoiceDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvoiceDetails:
        """Test InvoiceDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoiceDetails`
        """
        model = InvoiceDetails()
        if include_optional:
            return InvoiceDetails(
                id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09',
                group_id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09',
                display_id = '',
                participant = empire_platform_api_public_client.models.invoice_participant_details.InvoiceParticipantDetails(
                    id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                    name = '', ),
                period = empire_platform_api_public_client.models.date_period.DatePeriod(
                    start = '2022-01-04', 
                    end = '2022-01-04', ),
                net_amount = 1.337,
                gross_amount = 1.337,
                due_date = '2022-01-04',
                sent_date = '2022-01-04',
                paid_date = '2022-01-04',
                status = 'DRAFT',
                last_status_change = '2022-01-04T00:00:00.000Z',
                sendable = True,
                line_items = [
                    empire_platform_api_public_client.models.invoice_line_item.InvoiceLineItem(
                        id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                        code = 'NL_GB_EXPLICIT_ANNUAL_AUCTIONS', 
                        direction = 'GB_NL', 
                        delivery_month = '2022-01-01', 
                        net_amount = 1.337, 
                        vat_rate = 0, 
                        vat_amount = 1.337, 
                        gross_amount = 1.337, 
                        manually_added = True, )
                    ],
                vat_rates = [
                    empire_platform_api_public_client.models.invoice_vat_rate.InvoiceVatRate(
                        direction = 'GB_NL', 
                        vat_rate = 0, )
                    ],
                summaries = [
                    empire_platform_api_public_client.models.invoice_summary.InvoiceSummary(
                        direction = 'GB_NL', 
                        net_amount = 1.337, 
                        net_amount_gbp = 1.337, 
                        vat_amount = 1.337, 
                        vat_amount_gbp = 1.337, 
                        exchange_rate = 1.337, 
                        exchange_rate_day = '2022-01-04', )
                    ],
                attachment = empire_platform_api_public_client.models.attachment.Attachment(
                    id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                    file_name = '', 
                    file_size = 0, 
                    mime_type = '', 
                    url = '', ),
                history = [
                    empire_platform_api_public_client.models.invoice_history.InvoiceHistory(
                        user = empire_platform_api_public_client.models.invoice_participant_details.InvoiceParticipantDetails(
                            id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                            name = '', ), 
                        action = 'GENERATED', 
                        actioned_at = '2022-01-04T00:00:00.000Z', )
                    ]
            )
        else:
            return InvoiceDetails(
                id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09',
                group_id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09',
                display_id = '',
                participant = empire_platform_api_public_client.models.invoice_participant_details.InvoiceParticipantDetails(
                    id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                    name = '', ),
                period = empire_platform_api_public_client.models.date_period.DatePeriod(
                    start = '2022-01-04', 
                    end = '2022-01-04', ),
                net_amount = 1.337,
                gross_amount = 1.337,
                status = 'DRAFT',
                last_status_change = '2022-01-04T00:00:00.000Z',
                sendable = True,
                line_items = [
                    empire_platform_api_public_client.models.invoice_line_item.InvoiceLineItem(
                        id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                        code = 'NL_GB_EXPLICIT_ANNUAL_AUCTIONS', 
                        direction = 'GB_NL', 
                        delivery_month = '2022-01-01', 
                        net_amount = 1.337, 
                        vat_rate = 0, 
                        vat_amount = 1.337, 
                        gross_amount = 1.337, 
                        manually_added = True, )
                    ],
                vat_rates = [
                    empire_platform_api_public_client.models.invoice_vat_rate.InvoiceVatRate(
                        direction = 'GB_NL', 
                        vat_rate = 0, )
                    ],
                summaries = [
                    empire_platform_api_public_client.models.invoice_summary.InvoiceSummary(
                        direction = 'GB_NL', 
                        net_amount = 1.337, 
                        net_amount_gbp = 1.337, 
                        vat_amount = 1.337, 
                        vat_amount_gbp = 1.337, 
                        exchange_rate = 1.337, 
                        exchange_rate_day = '2022-01-04', )
                    ],
                history = [
                    empire_platform_api_public_client.models.invoice_history.InvoiceHistory(
                        user = empire_platform_api_public_client.models.invoice_participant_details.InvoiceParticipantDetails(
                            id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                            name = '', ), 
                        action = 'GENERATED', 
                        actioned_at = '2022-01-04T00:00:00.000Z', )
                    ],
        )
        """

    def testInvoiceDetails(self):
        """Test InvoiceDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
