# coding: utf-8

"""
    Zakazy Samovyvoz

    Upravlenie [sborohnymi zadaniami](/openapi/in-store-pickup#tag/Sborochnye-zadaniya-Samovyvoz) i [metadannymi](/openapi/in-store-pickup#tag/Metadannye-Samovyvoz) zakazov shemy Samovyvoz.   # noqa: E501

    OpenAPI spec version: instorepickup
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ApiOrderClientInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'phone': 'str',
        'first_name': 'str',
        'order_id': 'int',
        'phone_code': 'int'
    }

    attribute_map = {
        'phone': 'phone',
        'first_name': 'firstName',
        'order_id': 'orderID',
        'phone_code': 'phoneCode'
    }

    def __init__(self, phone=None, first_name=None, order_id=None, phone_code=None):  # noqa: E501
        """ApiOrderClientInfo - a model defined in Swagger"""  # noqa: E501
        self._phone = None
        self._first_name = None
        self._order_id = None
        self._phone_code = None
        self.discriminator = None
        if phone is not None:
            self.phone = phone
        if first_name is not None:
            self.first_name = first_name
        if order_id is not None:
            self.order_id = order_id
        if phone_code is not None:
            self.phone_code = phone_code

    @property
    def phone(self):
        """Gets the phone of this ApiOrderClientInfo.  # noqa: E501

        Telefon dla svazi s pokupatelem. htoby svazatsa s pokupatelem naberite etot nomer i vvedite dobavohnyi kod. Dannyi nomer ne avlaetsa pramym nomerom pokupatela.   # noqa: E501

        :return: The phone of this ApiOrderClientInfo.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this ApiOrderClientInfo.

        Telefon dla svazi s pokupatelem. htoby svazatsa s pokupatelem naberite etot nomer i vvedite dobavohnyi kod. Dannyi nomer ne avlaetsa pramym nomerom pokupatela.   # noqa: E501

        :param phone: The phone of this ApiOrderClientInfo.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def first_name(self):
        """Gets the first_name of this ApiOrderClientInfo.  # noqa: E501

        Ima pokupatela  # noqa: E501

        :return: The first_name of this ApiOrderClientInfo.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ApiOrderClientInfo.

        Ima pokupatela  # noqa: E501

        :param first_name: The first_name of this ApiOrderClientInfo.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def order_id(self):
        """Gets the order_id of this ApiOrderClientInfo.  # noqa: E501

        Nomer zakaza  # noqa: E501

        :return: The order_id of this ApiOrderClientInfo.  # noqa: E501
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this ApiOrderClientInfo.

        Nomer zakaza  # noqa: E501

        :param order_id: The order_id of this ApiOrderClientInfo.  # noqa: E501
        :type: int
        """

        self._order_id = order_id

    @property
    def phone_code(self):
        """Gets the phone_code of this ApiOrderClientInfo.  # noqa: E501

        Dobavohnyi kod  # noqa: E501

        :return: The phone_code of this ApiOrderClientInfo.  # noqa: E501
        :rtype: int
        """
        return self._phone_code

    @phone_code.setter
    def phone_code(self, phone_code):
        """Sets the phone_code of this ApiOrderClientInfo.

        Dobavohnyi kod  # noqa: E501

        :param phone_code: The phone_code of this ApiOrderClientInfo.  # noqa: E501
        :type: int
        """

        self._phone_code = phone_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApiOrderClientInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiOrderClientInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
