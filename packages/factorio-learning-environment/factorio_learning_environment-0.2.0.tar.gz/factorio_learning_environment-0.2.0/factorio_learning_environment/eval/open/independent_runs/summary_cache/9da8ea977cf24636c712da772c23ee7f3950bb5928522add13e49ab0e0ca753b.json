{"content": "### EXISTING STRUCTURES\n\n#### Electricity generator at position(-6.5, 71.0)\nConsists of \n- Offshore pump at position(-11.5, 69.5)\n- Boiler at position(-6.5, 71.0)\n- Steam engine at position(-2.5,71.5)\n- Pipe group connecting offshore pump to boiler and steam engine\n- Small electric poles at various positions ( exact positions not listed)\n\n#### Iron ore mine and processing setup at position(15.5, 70.5)\nConsists of \n- Electric mining drill at position(15.5,70.5)\n- Wooden chest at position(15.5,68.5)\n- Inserter at position(16.5,68.5)\n- Three stone furnaces at position(18.0,69.0),(20.0,69.0) and (22.0,69.0)\n- Small electric poles at positions (14.5, 68.5) and (13.5, 71.5)\n\n#### Steel plate production setup at position(24.0,69.0)\nConsists of \n- Steel furnace at position(24.0,69.0)\n- Inserter that puts iron plates into steel furnace\n\n### ERROR TIPS\n* Errors when entities are not receiving power\n  - Ensure that the entities are connected to a power source and that the power source is functioning correctly\n* Errors when furnaces are not smelting\n  - Check if the furnaces have the required ingredients and fuel to smelt\n* Errors due to full chests\n  - Ensure that chests are emptied regularly to avoid production halts\n  - Current status: Wooden chest at position(15.5,68.5) is full with {'iron-ore': 26}\n* Errors when inserting items into an entity\n  - Check if the entity has enough space to receive the items\n  - Ensure you have the required items in your inventory before attempting to insert them\n* Errors due to undefined variables\n  - Ensure all variables are defined before using them in your code\n  - 'connection' is not defined. Check the variable name and ensure it is defined before use.\n* Attribute errors\n  - Check the correct attribute names and values for entities and their statuses\n* Errors due to incorrect syntax\n  - Check the code syntax for any typos or incorrect usage\n* Errors when placing entities next to each other\n  - Ensure there is enough space between entities to place new entities\n* Check if the target position is occupied by another entity or is not buildable (e.g, water)\n* Move closer to the target position before attempting to place the entity\n* Increasing spacing or changing direction might resolve placement issues\n* Check for nearby entities that might be blocking the placement\n* Errors when inspecting inventory of an entity\n  - Ensure the entity exists and is not stale before attempting to inspect its inventory\n* Errors when extracting items from an empty chest\n  - Check if the chest has the required items before attempting to extract them\n\n### NAMESPACE\nThe following utility functions have been defined by the agent\n* `extract_items(Entity, item_type) \n    + Input: entity (Entity) and item_type (str)\n    + Output: extracted items (int)\n    + Summary of failure and success modes: \n      - Success: Items are extracted from the entity when the entity exists and has the required items.\n      - Failure: Extraction fails when the entity does not exist or does not have the required items.\n* `move_items(source, destination, item_type) \n    + Input: source (Entity or Inventory), destination (Entity or Inventory) and item_type (str)\n    + Output: None\n    + Summary of failure and success modes: \n      - Success: Items are moved from the source to the destination when both exist and have the required items.\n      - Failure: Movement fails when the source or destination does not exist or does not have the required items.\n* `add_fuel(entity, fuel_type) \n    + Input: entity (Entity), fuel_type (str)\n    + Output: None\n    + Summary of failure and success modes: \n      - Success: Fuel is added to the entity when the entity exists and has a fuel inventory.\n      - Failure: Addition fails when the entity does not exist or does not have a fuel inventory.\n* Important variables:\n  - `EntityStatus` (enum): Represents the status of an entity (e.g., WORKING, NO_POWER, NO_INGREDIENTS)\n  - `Entity` (object): Represents an entity on the map (e.g., mining drill, furnace, inserter)\n  - `Inventory` (object): Represents an inventory of items (e.g., entity inventory, player's inventory)"}