{"content": "### EXISTING STRUCTURES\n\n#### Coal Mine at position(16.0, 0.0)\nConsists of \n- Burner mining drill (position 16.0, 0.0) \n- Chest (position 16.5, 1.5) to collect coal\n\n#### Crude Oil Extraction at position(17.5, 40.5)\nConsists of \n- Pumpjack (position 17.5, 40.5)\n\n#### Electricity Generator at position(14.5, 39.0)\nConsists of \n- Boiler (position 14.5, 41.0)\n- Steam engine (position 14.5, 37.5)\n- Offshore pump (position -9.5, -0.5) connected to boiler via pipes\n\n#### Oil Refinery at position(22.5, 42.5)\nConsists of \n- Oil refinery (position 22.5, 42.5)\n- Storage tank (position 27.5, 42.5)\n- Pipe (position 25.5, 42.5) connecting oil refinery to storage tank\n- Pumpjack (position 17.5, 40.5) connected to oil refinery via pipes\n\n#### Chemical Plant at position(27.5, 37.5)\nConsists of \n- Chemical plant (position 27.5, 37.5)\n- Small electric pole (position 25.5, 37.5) connected to chemical plant\n- Storage tank (position 27.5, 42.5) connected to chemical plant via pipes\n\n### ERROR TIPS\n\n* Errors when placing entities too far away from the current position\n  - Make sure to move to the target position before attempting to place entities.\n* Errors when connecting entities with pipes\n  - Ensure that there are no obstacles between the entities you are trying to connect.\n  - Make sure the target entity is able to receive fluid from the source entity.\n  - Ensure the source entity has fluid in it before attempting to connect it to another entity.\n* Errors when placing pipes or other entities at occupied positions\n  - Ensure the target position is not occupied by another entity before attempting to place.\n* Errors when trying to access non-existent entities\n  - Verify that the entity exists at the specified position before attempting to access or manipulate it.\n* Errors when using undefined variables\n  - Make sure to define variables before using them in your code.\n* Errors when entities are not found at specified positions\n  - Verify that the entity exists at the specified position before attempting to access or manipulate it.\n* Errors when connecting entities with no valid connections\n  - Ensure that there are no obstacles between the entities you are trying to connect and that the target entity is able to receive the fluid from the source entity.\n* Errors when asserting entity status without ensuring prerequisites are met\n  - Ensure that entities have the necessary inputs, power, and connections before asserting they are working.\n* Errors when getting entities of a specific type\n  - Make sure to check if the list of entities is not empty before attempting to access its elements.\n* Errors when setting entity recipe\n  - Ensure that the recipe is valid and properly defined.\n* Errors when attempting to connect an empty source entity to a target entity\n  - Ensure the source entity has the required fluid before attempting to connect it to the target entity.\n* Errors when using undefined names\n  - Make sure to define names before using them in your code.\n\n### NAMESPACE\n\n* `place_entity(Prototype, position)`: Places an entity of the given prototype at the specified position.\n  - Failure modes: \n    - The target position is too far away.\n    - The target position is occupied by another entity.\n  - Important variables: \n    - `Prototype`: The type of entity to be placed (e.g., `Prototype.Boiler`, `Prototype.Pipe`).\n    - `position`: The coordinates where the entity is to be placed.\n* `connect_entities(entity1, entity2, Prototype)`: Connects two entities using the specified prototype (e.g., `Prototype.Pipe`).\n  - Failure modes: \n    - No valid connections found between the source and target entities.\n    - The source entity is empty.\n  - Important variables: \n    - `entity1` and `entity2`: The entities to be connected.\n    - `Prototype`: The type of connection (e.g., `Prototype.Pipe`, `Prototype.UndergroundPipe`).\n* `get_entity(Prototype, position)`: Retrieves an entity of the given prototype at the specified position.\n  - Failure modes: \n    - No entity of the specified type found at the given position.\n  - Important variables: \n    - `Prototype`: The type of entity to be retrieved.\n    - `position`: The coordinates of the entity to be retrieved.\n* `get_entities(Prototype)`: Retrieves a list of entities of the"}