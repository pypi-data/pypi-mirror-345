{"content": "### EXISTING STRUCTURES\n### Electricity generator at position(x=117.5, y=-30.5)\nConsists of steam engine(position x=117.5, y=-30.5), boiler(position x=111.5, y=-32.0) and offshore pump (position x=106.5, y=-32.5)\n\n### Copper plate mine at position(x=60.0, y=-60.0)\nConsists of following entities\n-  Furnace (position x=60.0, y=-60.0)\n\n### Water supply system\nConsists of following entities\n-  Offshore pump (position x=106.5, y=-32.5)\n-  PipeGroup (fluid_system=149549, position=x=105.5 y=-32.5)\n\n### Electricity distribution system\nConsists of following entities\n-  ElectricityGroup (id=579550, poles=[(x=120.5,y=-26.5),(x=111.5,y=-30.5),(x=115.5,y=-32.5),(x=115.5,y=-30.5),(x=112.5,y=-24.5),(x=111.5,y=-27.5)])\n\n### ERROR TIPS\n### Errors when using furnace\n-  Ensure that the furnace has ingredients to smelt before starting the smelting process\n### Errors when using boiler\n-  Ensure that the boiler has fuel before starting the heating process\n### Errors when using steam engine\n-  Ensure that the steam engine is connected to a fluid system before starting the generation process\n### Errors when placing entities\n-  Ensure that the target position is not occupied by another entity before placing a new entity\n\n### NAMESPACE\n*   Important variables:\n    *   `inventory`: a dictionary containing the current inventory of the agent, with keys representing item names and values representing quantities\n    *   `entities`: a list of entities on the map, with each entity represented as a dictionary containing its properties\n    *   `fluid_systems`: a list of fluid systems on the map, with each fluid system represented as a dictionary containing its properties\n    *   `electricity_groups`: a list of electricity groups on the map, with each electricity group represented as a dictionary containing its properties\n*   Utility functions:\n    *   `get_entity_status(entity)`: returns the status of the given entity\n    *   `get_entity_position(entity)`: returns the position of the given entity\n    *   `get_entity_connection_points(entity)`: returns the connection points of the given entity\n    *   `get_entity_neighbours(entity)`: returns the neighbours of the given entity\n    *   `get_fluid_system(fluid_system_id)`: returns the fluid system with the given ID\n    *   `get_electricity_group(electricity_group_id)`: returns the electricity group with the given ID\n*   Failure modes:\n    *   `get_entity_status(entity)` may return `EntityStatus.NO_INGREDIENTS` if the entity is a furnace and has no ingredients to smelt\n    *   `get_entity_status(entity)` may return `EntityStatus.NO_FUEL` if the entity is a boiler and has no fuel\n    *   `get_entity_status(entity)` may return `EntityStatus.NOT_CONNECTED` if the entity is a steam engine and is not connected to a fluid system\n*   Success modes:\n    *   `get_entity_status(entity)` may return `EntityStatus.WORKING` if the entity is an offshore pump and is working correctly\n    *   `get_entity_status(entity)` may return `EntityStatus.FULL_OUTPUT` if the entity is a pipe group and is outputting fluid correctly"}