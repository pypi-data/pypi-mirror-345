# coding: utf-8

"""
    Rabota s tovarami

    <div class=\"description_ref\">     Uznat, kak ispolzovat metody v biznes-keisah, mohno v <a href=\"https://dev.wildberries.ru/news/101\">instrukcii po rabote s tovarami</a> </div>  Rabota s tovarami vkluhaet v seba:   1. [Sozdanie](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov) i [redaktirovanie](/openapi/work-with-products#tag/Kartochki-tovarov) kartohek tovarov: v tom hisle, poluhenie [kategorii, predmetov i harakteristik tovarov](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki) i zagruzku [mediafailov](/openapi/work-with-products#tag/Mediafajly).   2. Nastroiku [arlykov](/openapi/work-with-products#tag/Yarlyki) dla udobnogo poiska tovarov.   3. Ustanovku [cen i skidok](/openapi/work-with-products#tag/Ceny-i-skidki).   4. Upravlenie [ostatkami tovarov](/openapi/work-with-products#tag/Ostatki-na-skladah-prodavca) i [skladami](/openapi/work-with-products#tag/Sklady-prodavca), esli vy rabotaete po modeli prodah so sklada prodavca.   # noqa: E501

    OpenAPI spec version: products
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from wildberries_api_client.products.api_client import ApiClient


class KategoriiPredmetyIHarakteristikiApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def content_v2_directory_colors_get(self, **kwargs):  # noqa: E501
        """cvet  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `cvet`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_colors_get(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_directory_colors_get_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_directory_colors_get_with_http_info(**kwargs)  # noqa: E501
            return data

    def content_v2_directory_colors_get_with_http_info(self, **kwargs):  # noqa: E501
        """cvet  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `cvet`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_colors_get_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['locale']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_directory_colors_get" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/directory/colors', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2003',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def content_v2_directory_countries_get(self, **kwargs):  # noqa: E501
        """Strana proizvodstva  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `Strana proizvodstva`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_countries_get(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2005
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_directory_countries_get_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_directory_countries_get_with_http_info(**kwargs)  # noqa: E501
            return data

    def content_v2_directory_countries_get_with_http_info(self, **kwargs):  # noqa: E501
        """Strana proizvodstva  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `Strana proizvodstva`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_countries_get_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2005
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['locale']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_directory_countries_get" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/directory/countries', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2005',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def content_v2_directory_kinds_get(self, **kwargs):  # noqa: E501
        """Pol  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `Pol`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_kinds_get(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2004
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_directory_kinds_get_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_directory_kinds_get_with_http_info(**kwargs)  # noqa: E501
            return data

    def content_v2_directory_kinds_get_with_http_info(self, **kwargs):  # noqa: E501
        """Pol  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `Pol`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_kinds_get_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2004
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['locale']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_directory_kinds_get" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/directory/kinds', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2004',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def content_v2_directory_seasons_get(self, **kwargs):  # noqa: E501
        """Sezon  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `Sezon`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_seasons_get(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2006
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_directory_seasons_get_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_directory_seasons_get_with_http_info(**kwargs)  # noqa: E501
            return data

    def content_v2_directory_seasons_get_with_http_info(self, **kwargs):  # noqa: E501
        """Sezon  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `Sezon`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_seasons_get_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2006
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['locale']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_directory_seasons_get" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/directory/seasons', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2006',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def content_v2_directory_tnved_get(self, subject_id, **kwargs):  # noqa: E501
        """TNVED-kod  # noqa: E501

        Metod predostavlaet spisok TNVED-kodov po ID [predmeta](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) i fragmentu TNVED-koda.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_tnved_get(subject_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param int subject_id: ID predmeta (required)
        :param int search: Poisk po TNVED-kodu. Rabotaet tolko v pare s `subjectID`
        :param str locale: azyk polei otveta:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2008
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_directory_tnved_get_with_http_info(subject_id, **kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_directory_tnved_get_with_http_info(subject_id, **kwargs)  # noqa: E501
            return data

    def content_v2_directory_tnved_get_with_http_info(self, subject_id, **kwargs):  # noqa: E501
        """TNVED-kod  # noqa: E501

        Metod predostavlaet spisok TNVED-kodov po ID [predmeta](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get) i fragmentu TNVED-koda.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_tnved_get_with_http_info(subject_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param int subject_id: ID predmeta (required)
        :param int search: Poisk po TNVED-kodu. Rabotaet tolko v pare s `subjectID`
        :param str locale: azyk polei otveta:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2008
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['subject_id', 'search', 'locale']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_directory_tnved_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'subject_id' is set
        if ('subject_id' not in params or
                params['subject_id'] is None):
            raise ValueError("Missing the required parameter `subject_id` when calling `content_v2_directory_tnved_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'subject_id' in params:
            query_params.append(('subjectID', params['subject_id']))  # noqa: E501
        if 'search' in params:
            query_params.append(('search', params['search']))  # noqa: E501
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/directory/tnved', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2008',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def content_v2_directory_vat_get(self, locale, **kwargs):  # noqa: E501
        """Stavka NDS  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `Stavka NDS`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_vat_get(locale, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice  (required)
        :return: InlineResponse2007
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_directory_vat_get_with_http_info(locale, **kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_directory_vat_get_with_http_info(locale, **kwargs)  # noqa: E501
            return data

    def content_v2_directory_vat_get_with_http_info(self, locale, **kwargs):  # noqa: E501
        """Stavka NDS  # noqa: E501

        Metod predostavlaet vozmohnye znahenia [harakteristiki](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get) predmeta `Stavka NDS`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_directory_vat_get_with_http_info(locale, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice  (required)
        :return: InlineResponse2007
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['locale']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_directory_vat_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'locale' is set
        if ('locale' not in params or
                params['locale'] is None):
            raise ValueError("Missing the required parameter `locale` when calling `content_v2_directory_vat_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/directory/vat', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2007',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def content_v2_object_all_get(self, **kwargs):  # noqa: E501
        """Spisok predmetov  # noqa: E501

        Metod predostavlaet spisok nazvanii [roditelskih kategorii predmetov](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) i ih predmetov s ID. Naprimer, u kategorii `Igruhki` budut predmety `Kaleidoskopy`, `Kukly`, `Mahiki`.  <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_object_all_get(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :param str name: Poisk po nazvaniu predmeta (Noski), poisk rabotaet po podstroke, iskat mohno na lubom iz podderhivaemyh azykov.
        :param int limit:
        :param int offset:
        :param int parent_id: ID roditelskoi kategorii predmeta
        :return: InlineResponse2001
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_object_all_get_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_object_all_get_with_http_info(**kwargs)  # noqa: E501
            return data

    def content_v2_object_all_get_with_http_info(self, **kwargs):  # noqa: E501
        """Spisok predmetov  # noqa: E501

        Metod predostavlaet spisok nazvanii [roditelskih kategorii predmetov](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1parent~1all/get) i ih predmetov s ID. Naprimer, u kategorii `Igruhki` budut predmety `Kaleidoskopy`, `Kukly`, `Mahiki`.  <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_object_all_get_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk polei otveta:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :param str name: Poisk po nazvaniu predmeta (Noski), poisk rabotaet po podstroke, iskat mohno na lubom iz podderhivaemyh azykov.
        :param int limit:
        :param int offset:
        :param int parent_id: ID roditelskoi kategorii predmeta
        :return: InlineResponse2001
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['locale', 'name', 'limit', 'offset', 'parent_id']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_object_all_get" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501
        if 'name' in params:
            query_params.append(('name', params['name']))  # noqa: E501
        if 'limit' in params:
            query_params.append(('limit', params['limit']))  # noqa: E501
        if 'offset' in params:
            query_params.append(('offset', params['offset']))  # noqa: E501
        if 'parent_id' in params:
            query_params.append(('parentID', params['parent_id']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/object/all', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2001',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def content_v2_object_charcs_subject_id_get(self, subject_id, **kwargs):  # noqa: E501
        """harakteristiki predmeta  # noqa: E501

        Metod predostavlaet parametry harakteristik predmeta: nazvania, tipy dannyh, edinicy izmerenia i tak dalee. V zaprose neobhodimo ukazat ID [predmeta](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   <div class=\"description_important\">   Dla poluhenia harakteristik <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\">cvet</a>, <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\">Pol</a>, <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\">Strana proizvodstva</a>, <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\">Sezon</a>, <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\">Stavka NDS</a> i <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\">TNVED-kod</a> ispolzuite otdelnye metody </div>  <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_object_charcs_subject_id_get(subject_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param int subject_id: ID predmeta (required)
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2002
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_object_charcs_subject_id_get_with_http_info(subject_id, **kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_object_charcs_subject_id_get_with_http_info(subject_id, **kwargs)  # noqa: E501
            return data

    def content_v2_object_charcs_subject_id_get_with_http_info(self, subject_id, **kwargs):  # noqa: E501
        """harakteristiki predmeta  # noqa: E501

        Metod predostavlaet parametry harakteristik predmeta: nazvania, tipy dannyh, edinicy izmerenia i tak dalee. V zaprose neobhodimo ukazat ID [predmeta](/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1object~1all/get).   <div class=\"description_important\">   Dla poluhenia harakteristik <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1colors/get\">cvet</a>, <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1kinds/get\">Pol</a>, <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1countries/get\">Strana proizvodstva</a>, <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1seasons/get\">Sezon</a>, <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1vat/get\">Stavka NDS</a> i <a href=\"/openapi/work-with-products#tag/Kategorii-predmety-i-harakteristiki/paths/~1content~1v2~1directory~1tnved/get\">TNVED-kod</a> ispolzuite otdelnye metody </div>  <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_object_charcs_subject_id_get_with_http_info(subject_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param int subject_id: ID predmeta (required)
        :param str locale: azyk polei otveta `subjectName` i `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse2002
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['subject_id', 'locale']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_object_charcs_subject_id_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'subject_id' is set
        if ('subject_id' not in params or
                params['subject_id'] is None):
            raise ValueError("Missing the required parameter `subject_id` when calling `content_v2_object_charcs_subject_id_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'subject_id' in params:
            path_params['subjectId'] = params['subject_id']  # noqa: E501

        query_params = []
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/object/charcs/{subjectId}', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2002',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def content_v2_object_parent_all_get(self, **kwargs):  # noqa: E501
        """Roditelskie kategorii tovarov  # noqa: E501

        Metod predostavlaet nazvania i ID vseh roditelskih kategorii dla [sozdania kartohek tovarov](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): naprimer, `Elektronika`, `Bytovaa himia`, `Rukodelie`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_object_parent_all_get(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk pola otveta `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse200
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.content_v2_object_parent_all_get_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.content_v2_object_parent_all_get_with_http_info(**kwargs)  # noqa: E501
            return data

    def content_v2_object_parent_all_get_with_http_info(self, **kwargs):  # noqa: E501
        """Roditelskie kategorii tovarov  # noqa: E501

        Metod predostavlaet nazvania i ID vseh roditelskih kategorii dla [sozdania kartohek tovarov](/openapi/work-with-products#tag/Sozdanie-kartochek-tovarov): naprimer, `Elektronika`, `Bytovaa himia`, `Rukodelie`.   <div class=\"description_limit\">   Maksimum 100 zaprosov v <a href=\"/openapi/api-information#tag/Vvedenie/Limity-zaprosov\">minutu</a> dla vseh metodov kategorii <a href=\"/openapi/api-information#tag/Avtorizaciya/Kak-sozdat-token\">Kontent</a> na odin akkaunt prodavca </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.content_v2_object_parent_all_get_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str locale: azyk pola otveta `name`:     - `ru` — russkii   - `en` — angliiskii   - `zh` — kitaiskii  Ne ispolzuetsa v pesohnice 
        :return: InlineResponse200
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['locale']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method content_v2_object_parent_all_get" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'locale' in params:
            query_params.append(('locale', params['locale']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/content/v2/object/parent/all', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse200',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
