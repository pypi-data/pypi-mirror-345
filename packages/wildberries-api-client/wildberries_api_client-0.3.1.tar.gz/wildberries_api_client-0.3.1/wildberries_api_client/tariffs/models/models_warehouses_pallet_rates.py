# coding: utf-8

"""
    Tarify

    <div class=\"description_important\">       Uznat bolhe o komissiah i tarifah mohno v <a href=\"https://seller.wildberries.ru/instructions/category/a04560b5-256d-48cb-8f09-60e283b5d493\">spravohnom centre</a> </div>  V dannom razdele dostupny metody poluhenia:   1. [Komissii](/openapi/wb-tariffs#tag/Komissii)   2. [Koefficientov skladov](/openapi/wb-tariffs#tag/Koefficienty-skladov)   3. [Tarifov na vozvrat tovarov prodavcu](/openapi/wb-tariffs#tag/Stoimost-vozvrata-prodavcu)    # noqa: E501

    OpenAPI spec version: tariffs
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ModelsWarehousesPalletRates(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dt_next_pallet': 'str',
        'dt_till_max': 'str',
        'warehouse_list': 'list[ModelsWarehousePalletRates]'
    }

    attribute_map = {
        'dt_next_pallet': 'dtNextPallet',
        'dt_till_max': 'dtTillMax',
        'warehouse_list': 'warehouseList'
    }

    def __init__(self, dt_next_pallet=None, dt_till_max=None, warehouse_list=None):  # noqa: E501
        """ModelsWarehousesPalletRates - a model defined in Swagger"""  # noqa: E501
        self._dt_next_pallet = None
        self._dt_till_max = None
        self._warehouse_list = None
        self.discriminator = None
        if dt_next_pallet is not None:
            self.dt_next_pallet = dt_next_pallet
        if dt_till_max is not None:
            self.dt_till_max = dt_till_max
        if warehouse_list is not None:
            self.warehouse_list = warehouse_list

    @property
    def dt_next_pallet(self):
        """Gets the dt_next_pallet of this ModelsWarehousesPalletRates.  # noqa: E501

        Data nahala sleduuhego tarifa  # noqa: E501

        :return: The dt_next_pallet of this ModelsWarehousesPalletRates.  # noqa: E501
        :rtype: str
        """
        return self._dt_next_pallet

    @dt_next_pallet.setter
    def dt_next_pallet(self, dt_next_pallet):
        """Sets the dt_next_pallet of this ModelsWarehousesPalletRates.

        Data nahala sleduuhego tarifa  # noqa: E501

        :param dt_next_pallet: The dt_next_pallet of this ModelsWarehousesPalletRates.  # noqa: E501
        :type: str
        """

        self._dt_next_pallet = dt_next_pallet

    @property
    def dt_till_max(self):
        """Gets the dt_till_max of this ModelsWarehousesPalletRates.  # noqa: E501

        Data okonhania poslednego ustanovlennogo tarifa  # noqa: E501

        :return: The dt_till_max of this ModelsWarehousesPalletRates.  # noqa: E501
        :rtype: str
        """
        return self._dt_till_max

    @dt_till_max.setter
    def dt_till_max(self, dt_till_max):
        """Sets the dt_till_max of this ModelsWarehousesPalletRates.

        Data okonhania poslednego ustanovlennogo tarifa  # noqa: E501

        :param dt_till_max: The dt_till_max of this ModelsWarehousesPalletRates.  # noqa: E501
        :type: str
        """

        self._dt_till_max = dt_till_max

    @property
    def warehouse_list(self):
        """Gets the warehouse_list of this ModelsWarehousesPalletRates.  # noqa: E501

        Tarify dla monopallet, sgruppirovannye po skladam  # noqa: E501

        :return: The warehouse_list of this ModelsWarehousesPalletRates.  # noqa: E501
        :rtype: list[ModelsWarehousePalletRates]
        """
        return self._warehouse_list

    @warehouse_list.setter
    def warehouse_list(self, warehouse_list):
        """Sets the warehouse_list of this ModelsWarehousesPalletRates.

        Tarify dla monopallet, sgruppirovannye po skladam  # noqa: E501

        :param warehouse_list: The warehouse_list of this ModelsWarehousesPalletRates.  # noqa: E501
        :type: list[ModelsWarehousePalletRates]
        """

        self._warehouse_list = warehouse_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ModelsWarehousesPalletRates, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ModelsWarehousesPalletRates):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
