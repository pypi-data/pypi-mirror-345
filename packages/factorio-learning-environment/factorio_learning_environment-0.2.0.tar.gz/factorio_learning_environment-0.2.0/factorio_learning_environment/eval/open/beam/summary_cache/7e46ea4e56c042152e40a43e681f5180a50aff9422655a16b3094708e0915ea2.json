{"content": "Ah, I see the issue now. We need to craft the burner mining drill first! Let's check the recipe and craft it:\n\n```python\n# First check our inventory\ninventory = inspect_inventory()\nprint(f\"Starting inventory: {inventory}\")\n\n# Check recipe for burner mining drill\nrecipe = get_prototype_recipe(Prototype.BurnerMiningDrill)\nprint(f\"Burner mining drill recipe: {recipe}\")\n\n# We need:\n# - 3 iron plates\n# - 3 iron gear wheels\n# - 1 stone furnace\n\n# First craft the iron gear wheels needed (2 iron plates each)\niron_plates_needed_for_gears = 3 * 2  # 3 gears * 2 plates each\nif inventory.get(Prototype.IronPlate, 0) >= iron_plates_needed_for_gears:\n    craft_item(Prototype.IronGearWheel, quantity=3)\n    print(f\"Crafted iron gear wheels. New inventory: {inspect_inventory()}\")\n\n# Now craft the burner mining drill\ninventory = inspect_inventory()\nif (inventory.get(Prototype.IronGearWheel, 0) >= 3 and \n    inventory.get(Prototype.IronPlate, 0) >= 3 and\n    inventory.get(Prototype.StoneFurnace, 0) >= 1):\n    craft_item(Prototype.BurnerMiningDrill)\n    print(f\"Crafted burner mining drill. New inventory: {inspect_inventory()}\")\n\n# Now place the drill\niron_pos = nearest(Resource.IronOre)\nmove_to(iron_pos)\ndrill = place_entity(Prototype.BurnerMiningDrill, position=iron_pos)\nif drill:\n    insert_item(Prototype.Coal, drill, quantity=10)\n    print(f\"Placed and fueled mining drill at: {drill.position}\")\n\n    # Place furnace next to drill's output\n    furnace = place_entity_next_to(\n        Prototype.StoneFurnace,\n        reference_position=drill.drop_position,\n        direction=Direction.RIGHT,\n        spacing=1\n    )\n    if furnace:\n        insert_item(Prototype.Coal, furnace, quantity=10)\n        print(f\"Placed and fueled furnace at: {furnace.position}\")\n\nprint(f\"Final inventory: {inspect_inventory()}\")\nprint(f\"Entities on map: {get_entities()}\")\n```", "summary_range": "[1-224]"}