{"content": "### EXISTING STRUCTURES\n### Iron Ore Mine at position(-17.0, -50.0)\nConsists of following entities\n-  Burner mining drill (position (-17.0, -50.0)) and transport belts at positions ((-16.5, -51.5), (-15.5, -51.5))\n-  Burner mining drill (position (-15.0, -50.0)) and transport belts at positions ((-16.5, -51.5), (-15.5, -51.5), (-14.5, -51.5), (-13.5, -51.5))\n### Iron Plate Factory at position(-10.0, -49.0)\nConsists of following entities\n-  Furnace (position (-10.0, -49.0)) \n### Inserter System at position(-13.5, -50.5)\nConsists of following entities\n-  Burner inserter (position (-13.5, -50.5)) and transport belt at position ((-14.5, -51.5))\n-  Burner inserter (position (-13.5, -48.5)) and transport belts at positions ((-12.5, -48.5), (-12.5, -47.5))\n### Storage System at position(-16.5, -47.5)\nConsists of following entities\n-  Wooden chest (position (-16.5, -47.5)) and burner inserter at position ((-16.5, -46.5))\n\n### ERROR TIPS\n### Errors when mining without fuel\n-  Ensure that the burner mining drill has sufficient fuel before starting the mining operation\n### Errors when output is blocked by items on the ground\n-  Ensure that there is a sink entity in place to accept the output of the mining drill\n### Errors when inserter is waiting for source items\n-  Ensure that the inserter has access to the required source items\n### Errors when furnace is out of fuel\n-  Ensure that the furnace has sufficient fuel to operate\n\n### NAMESPACE\n*   Important variables:\n    *   `wooden-chest`: type `Entity`, assigned value `WoodenChest(name='wooden-chest', direction=Direction.UP, position=Position(x=-16.5, y=-47.5), energy=0.0, status=EntityStatus.NORMAL, inventory=Inventory({}))`\n    *   `burner-mining-drill`: type `Entity`, assigned value `BurnerMiningDrill(fuel=Inventory({}), name='burner-mining-drill', direction=Direction.DOWN, position=Position(x=-17.0, y=-50.0), energy=0.0, warnings=['out of fuel', 'output blocked by item on the ground. There is no sink entity in place to accept the output.'], status=EntityStatus.NO_FUEL, neighbours=[...])`\n    *   `stone-furnace`: type `Entity`, assigned value `Furnace(fuel=Inventory({}), name='stone-furnace', direction=Direction.UP, position=Position(x=-10.0, y=-49.0), energy=0.0, warnings=['out of fuel'], status=EntityStatus.NO_FUEL, furnace_source=Inventory({'iron-ore': 21}), furnace_result=Inventory({'iron-plate': 55}), height=2.0, width=2.0)`\n*   Utility functions:\n    *   `get_entity_position(entity)`: type `function`, returns the position of the given entity\n    *   `get_entity_status(entity)`: type `function`, returns the status of the given entity\n    *   `get_entity_neighbours(entity)`: type `function`, returns the neighbours of the given entity\n    *   `get_entity_inventory(entity)`: type `function`, returns the inventory of the given entity\n    *   `get_entity_fuel(entity)`: type `function`, returns the fuel of the given entity\n    *   `get_entity_warnings(entity)`: type `function`, returns the warnings of the given entity\n    *   `get_entity_direction(entity)`: type `function`, returns the direction of the given entity\n    *   `get_entity_name(entity)`: type `function`, returns the name of the given entity\n    *   `get_entity_height(entity)`: type `function`, returns the height of the given entity\n    *   `get_entity_width(entity)`: type `function`, returns the width of the given entity\n    *   `get_entity_energy(entity)`: type `function`, returns the energy of the given entity\n    *   `get_entity_resources(entity)`: type `function`, returns the resources of the given entity\n    *   `get_entity_drop_position(entity)`: type `function`, returns the drop position of the given entity\n    *   `"}