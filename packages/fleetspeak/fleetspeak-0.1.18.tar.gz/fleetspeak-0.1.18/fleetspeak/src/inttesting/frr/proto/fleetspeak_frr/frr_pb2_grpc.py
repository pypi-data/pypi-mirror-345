# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from fleetspeak.src.common.proto.fleetspeak import common_pb2 as fleetspeak_dot_src_dot_common_dot_proto_dot_fleetspeak_dot_common__pb2
from fleetspeak.src.inttesting.frr.proto.fleetspeak_frr import frr_pb2 as fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2

GRPC_GENERATED_VERSION = '1.69.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in fleetspeak/src/inttesting/frr/proto/fleetspeak_frr/frr_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MasterStub(object):
    """The service implemented by the FRR master server to collect data from the FRR
    Fleetspeak server services.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecordTrafficResponse = channel.unary_unary(
                '/fleetspeak.frr.Master/RecordTrafficResponse',
                request_serializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.MessageInfo.SerializeToString,
                response_deserializer=fleetspeak_dot_src_dot_common_dot_proto_dot_fleetspeak_dot_common__pb2.EmptyMessage.FromString,
                _registered_method=True)
        self.RecordFileResponse = channel.unary_unary(
                '/fleetspeak.frr.Master/RecordFileResponse',
                request_serializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.FileResponseInfo.SerializeToString,
                response_deserializer=fleetspeak_dot_src_dot_common_dot_proto_dot_fleetspeak_dot_common__pb2.EmptyMessage.FromString,
                _registered_method=True)
        self.CompletedRequests = channel.unary_unary(
                '/fleetspeak.frr.Master/CompletedRequests',
                request_serializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CompletedRequestsRequest.SerializeToString,
                response_deserializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CompletedRequestsResponse.FromString,
                _registered_method=True)
        self.CreateHunt = channel.unary_unary(
                '/fleetspeak.frr.Master/CreateHunt',
                request_serializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CreateHuntRequest.SerializeToString,
                response_deserializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CreateHuntResponse.FromString,
                _registered_method=True)


class MasterServicer(object):
    """The service implemented by the FRR master server to collect data from the FRR
    Fleetspeak server services.
    """

    def RecordTrafficResponse(self, request, context):
        """RecordMessage records that a TrafficResponse message was received by
        the FS server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordFileResponse(self, request, context):
        """RecordFileResponse records that a FileResponse message was received
        by the FS server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompletedRequests(self, request, context):
        """CompletedRequests returns a list of requests made to a client which have
        been completed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateHunt(self, request, context):
        """CreateHunt initiates a hunt which sends the provided TrafficRequestData to
        every client, up to limit.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MasterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RecordTrafficResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordTrafficResponse,
                    request_deserializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.MessageInfo.FromString,
                    response_serializer=fleetspeak_dot_src_dot_common_dot_proto_dot_fleetspeak_dot_common__pb2.EmptyMessage.SerializeToString,
            ),
            'RecordFileResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordFileResponse,
                    request_deserializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.FileResponseInfo.FromString,
                    response_serializer=fleetspeak_dot_src_dot_common_dot_proto_dot_fleetspeak_dot_common__pb2.EmptyMessage.SerializeToString,
            ),
            'CompletedRequests': grpc.unary_unary_rpc_method_handler(
                    servicer.CompletedRequests,
                    request_deserializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CompletedRequestsRequest.FromString,
                    response_serializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CompletedRequestsResponse.SerializeToString,
            ),
            'CreateHunt': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateHunt,
                    request_deserializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CreateHuntRequest.FromString,
                    response_serializer=fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CreateHuntResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fleetspeak.frr.Master', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('fleetspeak.frr.Master', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Master(object):
    """The service implemented by the FRR master server to collect data from the FRR
    Fleetspeak server services.
    """

    @staticmethod
    def RecordTrafficResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fleetspeak.frr.Master/RecordTrafficResponse',
            fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.MessageInfo.SerializeToString,
            fleetspeak_dot_src_dot_common_dot_proto_dot_fleetspeak_dot_common__pb2.EmptyMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RecordFileResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fleetspeak.frr.Master/RecordFileResponse',
            fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.FileResponseInfo.SerializeToString,
            fleetspeak_dot_src_dot_common_dot_proto_dot_fleetspeak_dot_common__pb2.EmptyMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CompletedRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fleetspeak.frr.Master/CompletedRequests',
            fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CompletedRequestsRequest.SerializeToString,
            fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CompletedRequestsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateHunt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fleetspeak.frr.Master/CreateHunt',
            fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CreateHuntRequest.SerializeToString,
            fleetspeak_dot_src_dot_inttesting_dot_frr_dot_proto_dot_fleetspeak__frr_dot_frr__pb2.CreateHuntResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
