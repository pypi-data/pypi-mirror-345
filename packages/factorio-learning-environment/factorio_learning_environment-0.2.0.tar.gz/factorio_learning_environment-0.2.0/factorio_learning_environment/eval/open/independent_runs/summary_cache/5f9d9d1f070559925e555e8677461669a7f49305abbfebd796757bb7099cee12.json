{"content": "## EXISTING STRUCTURES\n\n### Electricity Generator at Position (x=10.5, y=34.5)\nConsists of:\n- Offshore pump at position (x=-7.5, y=25.5)\n- Pipes connecting offshore pump to boiler and steam engine at positions:\n  - Pipe at x=-7.5 y=24.5\n  - Pipe at x=-6.5 y=24.5\n  - Pipe at x=-5.5 y=24.5\n  - Pipe at x=-4.5 y=24.5\n  - Pipe at x=-3.5 y=24.5\n  - Pipe at x=-2.5 y=24.5\n  - Pipe at x=-1.5 y=24.5\n- Boiler (currently not connected) intended to be part of this structure\n- Steam engine at position (x=10.5, y=34.5) (currently not connected)\n- Small electric poles intended to connect the steam engine to the electricity network\n\n### Iron Plate Production Facility\nConsists of:\n- Furnace at position (x=15.0, y=0.0)\n- Inserters at positions:\n  - Inserter at position (x=17.5, y=0.5) (waiting for source items, not connected to power)\n  - Inserter at position (x=16.5, y=0.5) (not receiving electricity)\n- Wooden chests at positions:\n  - Chest at position (x=5.5, y=0.5)\n  - Chest at position (x=18.5, y=0.5)\n\n## ERROR TIPS\n\n### Errors with Boiler Connection\n- Ensure that the boiler is properly connected to the fluid system and positioned correctly to receive water from the pipes. Check for any obstructions or incorrect placements.\n\n### Errors when Using Undefined Functions\n- Avoid using undefined functions such as `shift_entity`. Ensure that all functions used are correctly defined and imported.\n\n### Errors when Placing Entities\n- Before placing an entity like a boiler, ensure that the target location is clear of other objects or unplaceable terrain such as water. Use a function to check the tile's availability before attempting to place the entity.\n\n### Type Errors in Code\n- When using functions that require specific data types, ensure that the arguments are of the correct type. For example, when using `int()`, ensure the input is a string, bytes-like object, or a real number.\n\n### Errors with Pydantic Type Handling\n- When using Pydantic models, ensure that the attributes are correctly set and that the data types match the expected types. Refer to Pydantic documentation for handling common type issues."}