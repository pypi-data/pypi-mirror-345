{"content": "## EXISTING STRUCTURES\n\n### Iron Plate Production Setup\nConsists of the following entities:\n- **Furnace** at position (-3.0, 1.0) fueled by coal, actively working with iron ore as the source.\n- **Burner Inserter** at position (-1.5, 0.5), fueled by coal, currently working. It picks up from position (-2.5, 0.5) and drops at position (-0.5, 0.5).\n- **Wooden Chest** at position (2.5, 0.5) containing 50 iron plates.\n- **Wooden Chest** at position (-0.5, 0.5) to collect items from the inserter.\n- **Belt Group** connecting positions (-1.5, 0.5) to (0.5, 0.5) and (1.5, 0.5) to (1.5, -1.5), consisting of 6 belts, currently working with iron plates.\n\n### Additional Belt Group\n- **Belt Group** connecting positions (0.5, 2.5) to (2.5, 2.5) and (1.5, 1.5) to (3.5, 1.5), consisting of 3 belts, currently empty.\n\n## ERROR TIPS\n\n### Errors when placing entities on occupied tiles\n- Ensure the target position is free before placing an entity. If an error occurs indicating an entity already exists at the target position, remove the obstructing entity first.\n\n### Inserter waiting for space in destination\n- Ensure there is space in the destination for the inserter to drop items. Place a sink object at the specified drop position to prevent the inserter from being blocked.\n\n### Inserter waiting for source items\n- Verify that the source supply is adequate for the inserter to function. Check input supply to ensure continuous operation.\n\n### Misalignment of Inserter positions\n- Ensure that the inserter's pickup and drop positions are correctly aligned with the source and destination entities. Realign the inserter if misalignment is detected to ensure smooth operation.\n\n### Repeated Errors with Transport Belt Placement\n- Avoid attempting to place a transport belt on a tile where one already exists. Always check for existing entities at the target position before placement to prevent errors and unnecessary removal actions.\n\n### Incorrect Argument Type in Function Calls\n- Ensure that function arguments match the expected types. For instance, when using `insert_item`, ensure the second argument is an `Entity` or `EntityGroup`, not a `Position`.\n\n### Errors in Connecting Entities\n- Verify that all entities involved in connections are correctly initialized and not `NoneType`. Ensure that the entities have the required attributes before attempting to connect them.\n\n### Inventory Management Errors\n- Ensure that the required items are available in the inventory before attempting to insert them into entities. Check inventory levels and replenish as needed to avoid insertion errors.\n\n### Errors in Picking Up Entities\n- Confirm the presence of the target entity at the specified position before attempting to pick it up. If the entity is not found, verify the position or check for any changes in the map layout.\n\n### Errors in Entity Retrieval\n- Ensure that the entity retrieval functions are called with correct and existing positions. If an entity is not found at a specified location, recheck the position or ensure the entity exists at that location.\n\n### Errors due to Obstructed Positions\n- When a position is obstructed, search for an alternative spot to place the entity. Ensure the area is clear before attempting placement.\n\n### Errors in Supplying Entities\n- Confirm that the inventory contains the necessary items before attempting to supply entities. If an error occurs due to missing items, gather the required resources first.\n\n### Errors with NoneType in Entity Connections\n- Address the repeated error \"Failed to connect entities: 'NoneType' object has no attribute 'tile_dimensions'\" by ensuring that all entities are properly instantiated and have valid attributes before attempting to connect them.\n\n### ValueError in Function Calls\n- Correct the argument type in function calls such as `inspect_inventory`. Ensure the first argument is an `Entity` or `Position` object, not a `BeltGroup` or other incorrect type.\n\n### Errors in Setting Entity Recipes\n- Ensure that the correct entity type is targeted when setting recipes. The error \"Could not set recipe to iron-plate: No building found that could have its recipe set\" suggests verifying that the entity is capable of having a recipe set, such as an assembler or furnace.\n\n### Errors in Picking Up Nonexistent Entities\n- When attempting to pick up an entity, ensure that it exists at the specified position. The error \"Could not pickup: Couldn't find transport-belt at position (2.5, 0.5) to pick up\" indicates the need to verify the presence of the entity before attempting to pick it up."}