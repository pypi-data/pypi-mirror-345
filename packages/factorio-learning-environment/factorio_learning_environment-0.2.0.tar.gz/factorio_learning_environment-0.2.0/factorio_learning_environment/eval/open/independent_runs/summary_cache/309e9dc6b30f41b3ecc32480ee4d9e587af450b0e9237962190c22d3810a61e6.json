{"content": "### EXISTING STRUCTURES\n\n#### Stone mine at position(-46.0, 1.0)\nConsists of \n- Burner mining drill (position: x=-46.0, y=1.0)\n- Wooden chest (position: x=-46.5, y=-0.5) to collect stone\n- Burner inserter (position: x=-44.5, y=1.5) that is connected to the burner mining drill and stone furnace\n\n#### Stone furnace at position(-43.0, 3.0)\nConsists of \n- Stone furnace (position: x=-43.0, y=3.0)\n- Burner inserter (position: x=-42.5, y=4.5) that is connected to the stone furnace and a wooden chest (position: x=-42.5, y=5.5)\n\n#### Iron plate production at position(-38.0, 5.0)\nConsists of \n- Stone furnace (position: x=-38.0, y=5.0) for smelting iron ore into iron plates\n\n#### Copper plate production at position(-35.0, 5.0)\nConsists of \n- Stone furnace (position: x=-35.0, y=5.0) for smelting copper ore into copper plates\n\n#### Stone wall production at position(-29.5, 5.5)\nConsists of \n- Assembling machine 1 (position: x=-29.5, y=5.5) for crafting stone walls\n- Burner inserter (position: x=-27.5, y=5.5) that is connected to the assembling machine 1\n\n### ERROR TIPS\n- Errors when placing entities at occupied positions\n  - Ensure the target location is clear of other entities or unplaceable terrain before attempting to place an entity.\n- Errors due to undefined variables\n  - Make sure to define all variables before using them in the code.\n- Errors when inserting items into entities\n  - Verify that you have the required items in your inventory before attempting to insert them into an entity.\n- Errors when extracting items from entities\n  - Ensure the entity contains the item you are trying to extract before attempting to extract it.\n- Errors when crafting items with missing sub-ingredients\n  - Verify that you have the required sub-ingredients in your inventory or can craft them before attempting to craft a complex item.\n- Errors when attempting to place an entity without having it in the inventory\n  - Ensure you have the entity you are trying to place in your inventory before attempting to place it.\n- Errors when attempting to extract non-existent items from an entity\n  - Verify that the entity contains the item you are trying to extract before attempting to extract it.\n- Errors when getting or finding non-existent entities\n  - Ensure that the entity exists on the map and is of the correct type before attempting to interact with it.\n- Errors when searching for a power source for an entity\n  - Ensure that a power source (e.g., steam engine) exists on the map and is properly connected to the entity.\n\n### NAMESPACE\n- `place_entity(entity: Any, direction: Any, position: Any, exact: Any) -> Any`: Places an entity on the map at a specified position.\n  - Success mode: Entity is placed successfully if the target location is valid and the entity is in the inventory.\n  - Failure mode: Fails if the target location is occupied, unplaceable, or if the entity is not in the inventory.\n- `insert_item(Prototype, entity, quantity: int)`: Inserts items into an entity.\n  - Success mode: Items are inserted successfully if the entity is capable of holding them and the items are available in the inventory.\n  - Failure mode: Fails if there are no items to insert or if the entity is not capable of holding the items.\n- `extract_item(Prototype, entity, quantity: int)`: Extracts items from an entity.\n  - Success mode: Items are extracted successfully if the entity contains the items.\n  - Failure mode: Fails if the entity does not contain the items to be extracted.\n- `get_entity(Prototype, Position)`: Gets an entity of a specific type at a given position.\n  - Success mode: Returns the entity if it exists at the specified position.\n  - Failure mode: Fails if no entity of the specified type is found at the given position.\n- `nearest(Prototype)`: Finds the nearest entity of a specific type.\n  - Success mode: Returns the nearest entity if one exists.\n  - Failure mode: Fails if no entity of the specified type is found.\n\nImportant variables:\n- `entity`: The entity to be placed or interacted with (type: Any)\n- `position`: The position where the entity is to be placed or interacted with (type: Any)\n- `quantity`: The number of items to be"}