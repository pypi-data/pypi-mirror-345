[project]
name = "agent-tooltree"
version = "0.0.1"
description = "Agent ToolTree: Navigate your Agent Arsenal - A set of tools to be used by the AI agents"
authors = [
    {name = "Rohit S. Garud"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pydantic>=2.0.0",
    "jsonschema>=4.0.0",
    "typing-extensions>=4.0.0"
]

[project.entry-points."agent_tooltree.plugins"]
# Intentionally left blank, plugins/toolsets will be added by the installed plugins

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
gitlint = "^0.19.1"
commitlint = "^1.3.0"
coverage = "^7.6.4"
factory-boy = "^3.3.1"
faker = "^30.8.2"
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-factoryboy = "^2.7.0"
pytest-xdist = "^3.6.1"
bandit = {extras = ["toml"], version = "^1.7.10"}
git-changelog = "^2.5.2"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
    "__pycache__"
]

[tool.ruff.lint]
extend-select = [
    "E501",
    "UP",
    "I"
    ]
ignore = [
    "W191"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py", "*/*/test_*.py", "*/*/tests.py"]

[tool.bandit]
exclude_dirs = ["venv"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[tool.git-changelog]
bump = "auto"
convention = "conventional"
in-place = false
# filter-commits = "0.5.0.."
# marker-line = "------------------------"
output = "CHANGELOG.md"
parse-refs = true
parse-trailers = true
provider = "github"
repository = "."
sections = "feat,fix,chore"
template = "keepachangelog"
# version-regex = "^## \\\\[(?P<version>v?[^\\\\]]+)"
versioning = "semver"
zerover = true

[tool.mypy]
disable_error_code = "var-annotated"
