"""
This type stub file was generated by pyright.
"""

import pyarrow as pa
from typing import List, Optional, Tuple, Union
from ._lancedb import RecordBatchStream

class AsyncRecordBatchReader:
    """
    An async iterator over a stream of RecordBatches.

    Also allows access to the schema of the stream
    """
    def __init__(self, inner: Union[RecordBatchStream, pa.Table], max_batch_length: Optional[int] = ...) -> None:
        """

        Attributes
        ----------
        schema : pa.Schema
            The schema of the batches produced by the stream.
            Accessing the schema does not consume any data from the stream
        """
        ...
    
    async def read_all(self) -> List[pa.RecordBatch]:
        """
        Read all the record batches from the stream

        This consumes the entire stream and returns a list of record batches

        If there are a lot of results this may consume a lot of memory
        """
        ...
    
    def __aiter__(self): # -> Self:
        ...
    
    async def __anext__(self) -> pa.RecordBatch:
        ...
    


def peek_reader(reader: pa.RecordBatchReader) -> Tuple[pa.RecordBatch, pa.RecordBatchReader]:
    ...

