# this file is where to specify
# custom username/password combinations
# for specific devices. The code will then
# look up the passwords for these in the cyberark API


default_user: automaton
default_enable: Infrastructure_from_2020-05-01_to_current
default_cyberark_env: UMNET

# each 'custom' entry can have the following things
# - host_match (required): Regex that matches the beginning of the device hostname.
#       Note that every host is evaluated against this list in order, so put more specific 
#       matches before more general ones.
# - env: The cyberark 'environment' to do your queries from. If none is specified the 'default'
#        from above is used.
# - username: the custom username to use to log into the device. This is also the 'Username' field 
#       that you see in cyberark.
# - password_host: the 'host' field to match in cyberark. If you don't supply this, it will look for
#       a 'global' credential tied to that username (eg 'umnet_user')
#  Note that if an 'enable' user is found for that particular cyberark host, it is used as a
# custom enable.

custom:

## ilab
  - host_match: al-deep-3
    password_host: Ilab

  - host_match: ngfw-lab-1
    username: admin
    password_host: ngfw-lab-1

## customer firewalls with non-standard credentials    
  - host_match: fw-cpp
    username: srancid
    password_host: fw-cpp
    env: NSO

  - host_match: fw-dent
    username: srancid
    password_host: fw-dent
    env: NSO

  - host_match: fw-uhs
    username: srancid
    password_host: fw-uhs
    env: NSO

## ngfw
  - host_match: ngfw-pellston-1
    username: nso-local
    password_host: ngfw-pellston-1
    env: NSO

## panorama-hosted ngfw
  - host_match: ngfw
    username: new_rancid
    password_host: panorama-1
    env: NSO

## default srancid credentials for Cisco firewalls
  - host_match: (fw|umvpn|proxy.police)
    username: srancid
    password_host: umvpn
    env: NSO

