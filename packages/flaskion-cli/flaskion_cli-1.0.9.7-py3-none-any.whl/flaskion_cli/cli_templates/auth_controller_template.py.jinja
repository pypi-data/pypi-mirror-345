from flask import render_template, request, redirect, url_for, session, flash
from werkzeug.security import generate_password_hash, check_password_hash
from app.models.user import User
from app.models import db

class AuthController:
    @staticmethod
    def login():
        if request.method == 'POST':
            email = request.form['email']
            password = request.form['password']
            user = User.query.filter_by(email=email).first()
            if user and check_password_hash(user.password_hash, password):
                session['user_id'] = user.id
                flash('Logged in successfully!')
                return redirect(url_for('dashboard'))
            flash('Invalid credentials')
        return render_template("auth/login.html")

    @staticmethod
    def register():
        if request.method == 'POST':
            email = request.form['email']
            password = request.form['password']
            existing = User.query.filter_by(email=email).first()
            if existing:
                flash('Email already registered.')
                return redirect(url_for('web_route.register'))
            hashed = generate_password_hash(password)
            user = User(email=email, password_hash=hashed)
            db.session.add(user)
            db.session.commit()
            flash('Registration successful.')
            return redirect(url_for('web_route.login'))
        return render_template("auth/register.html")

    @staticmethod
    def logout():
        session.pop('user_id', None)
        flash('Logged out.')
        return redirect(url_for('web_route.login'))

    @staticmethod
    def dashboard():
        if 'user_id' not in session:
            return redirect(url_for('web_route.login'))
        return render_template("auth/dashboard.html")