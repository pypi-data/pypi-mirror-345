{"content": "Based on the execution results, let me analyze the pattern that worked successfully:\n\n1. Resource Location and Movement:\n```python\nstone_pos = nearest(Resource.Stone)  # Successfully found stone at x=-14.5 y=-14.5\nmove_to(stone_pos)  # Successfully moved to location\n```\n\n2. Resource Gathering:\n```python\nstone_gathered = harvest_resource(stone_pos, quantity=10)  # Successfully gathered 10 stone\n```\n\n3. Inventory Management:\n- Initial inventory showed no stone\n- After gathering: 10 stone added to inventory\n- After crafting: 5 stone consumed, 5 stone remaining\n- New stone furnace appeared in inventory\n\n4. Crafting:\n```python\nif inventory.get(Prototype.Stone, 0) >= 5:\n    craft_item(Prototype.StoneFurnace)\n```\n- Successfully crafted stone furnace using 5 stone\n- Final inventory shows new 'stone-furnace': 1\n\nKey Learnings:\n1. Always gather more resources than minimum needed (gathered 10 when only 5 required)\n2. Check inventory before and after operations to confirm success\n3. Use `.get()` with default value (0) to safely check inventory quantities\n4. Raw resources must be gathered before crafting\n5. Crafting consumes exactly the required resources (5 stone -> 1 furnace)\n\nSuccessful Pattern Template:\n```python\n# 1. Find resource\nresource_pos = nearest(Resource.Type)\n\n# 2. Move to resource\nmove_to(resource_pos)\n\n# 3. Gather more than needed\nharvest_resource(resource_pos, quantity=required_amount * 2)\n\n# 4. Verify inventory\ninventory = inspect_inventory()\n\n# 5. Craft if sufficient resources\nif inventory.get(Prototype.Resource, 0) >= required_amount:\n    craft_item(Prototype.Item)\n\n# 6. Verify result\nfinal_inventory = inspect_inventory()\n```\n\nThis pattern ensures reliable resource gathering and crafting operations in Factorio.", "summary_range": "[1-2474]"}