[build-system]
requires = [
    "setuptools",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "pttools-gw"
version = "0.9.0"
description = "PTtools simulation framework for phase transitions in the early universe"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
keywords = [
    "cosmology",
    "phase transitions",
    "gravitational waves",
    "hydrodynamics",
    "relativistic hydrodynamics",
    "sound shell model"
]
# When updating these, also update acknowledgements.rst, AUTHORS, CITATION.cff and codemeta.json
authors = [
    {name = "Mark Hindmarsh", email = "mark.hindmarsh@helsinki.fi"},
    {name = "Chloe Hopling", email = "c.hopling@sussex.ac.uk"},
    {name = "Mika Mäki", email = "mika.x.maki@helsinki.fi"}
]
maintainers = [
    {name = "Mark Hindmarsh", email = "mark.hindmarsh@helsinki.fi"},
    {name = "Mika Mäki", email = "mika.x.maki@helsinki.fi"}
]
classifiers = [
    "Framework :: Matplotlib",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
]
# Keep this up to date with requirements.txt
dependencies = [
    "h5py >= 3.12.1",
    "kaleido >= 0.2.1",
    "matplotlib >= 3.9.2",
    "numba >= 0.60.0",
    "numpy >= 2.0.2",
    "orjson >= 3.10.12",
    "plotly >= 5.24.1",
    "scipy >= 1.14.1",
]
requires-python = ">= 3.11"
# dynamic = ["version"]

[project.optional-dependencies]
numbalsoda = ["numbalsoda >= 0.3.4"]
performance = [
    "icc-rt >= 2019.0; platform_machine != 'arm64'",
    "intel-openmp >= 2020.0.133; sys_platform == 'darwin' and platform_machine != 'arm64'",
    "tbb >= 2021.10.0; platform_machine != 'arm64'",
]

[project.urls]
documentation = "https://pttools.readthedocs.io"
repository = "https://github.com/CFT-HY/pttools"

[tool.coverage.run]
branch = true
command_line = "manage.py test --noinput --parallel"
concurrency = [
    "thread",
    "multiprocessing"
]
source = ["."]
omit = [
    "**/envs/*",
    "**/venv/*"
]
parallel = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:"
]
show_missing = true

[tool.pytest.ini_options]
# On clusters "--numprocesses=auto" creates processes according to the total number of CPU cores
# instead of the number of cores available to the job.
# Therefore, it may be wise to set the number of processes manually.
addopts = "--alluredir=test-results/allure --cov=. --cov-report=html --cov-report=term --cov-report=term-missing --cov-report=xml --dist=loadscope --html=test-results/html/test-report.html --numprocesses=auto"
norecursedirs = "test_data"
# python_paths = "tests"
testpaths = [
    "tests"
]
# log_cli = true
# log_cli_level = "INFO"

# [tool.setuptools.dynamic]
# version = {attr = "docs.conf.version"}

[tool.setuptools.packages.find]
include = [
    "pttools*",
]
exclude = [
    "docs",
    "examples",
    "tests",
]
