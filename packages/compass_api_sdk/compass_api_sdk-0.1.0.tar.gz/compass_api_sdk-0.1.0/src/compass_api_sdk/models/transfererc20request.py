"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from .token_enum import TokenEnum
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


TransferErc20RequestAmountTypedDict = TypeAliasType(
    "TransferErc20RequestAmountTypedDict", Union[float, str]
)
r"""Amount of token to transfer"""


TransferErc20RequestAmount = TypeAliasType(
    "TransferErc20RequestAmount", Union[float, str]
)
r"""Amount of token to transfer"""


class TransferErc20RequestTypedDict(TypedDict):
    r"""Request model for transferring ERC20 tokens."""

    amount: TransferErc20RequestAmountTypedDict
    r"""Amount of token to transfer"""
    token: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
    to: str
    r"""The recipient of the tokens."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class TransferErc20Request(BaseModel):
    r"""Request model for transferring ERC20 tokens."""

    amount: TransferErc20RequestAmount
    r"""Amount of token to transfer"""

    token: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    to: str
    r"""The recipient of the tokens."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
