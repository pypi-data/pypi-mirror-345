{"content": "## EXISTING STRUCTURES\n\n### Coal Mining Setup at (40.0, -85.0)\nConsists of:\n- Burner mining drill at (40.0, -85.0) mining coal\n- Self-fueling burner inserter at (40.5, -83.5)\n- The inserter is configured to pick up from (40.5, -82.5) and drop at (40.5, -84.5)\n- System is operational and working\n\n### Iron Ore Mining and Smelting Complex\nConsists of:\n- Burner mining drill at (3.0, -60.0) for mining iron ore\n- Burner inserter at (3.5, -58.5) configured to:\n  - Pick up from (2.5, -58.5)\n  - Drop at (4.5, -58.5)\n- Stone furnace at (6.0, -60.0) for smelting iron plates\n\nCurrent status: Setup is incomplete as the inserter's drop position doesn't align with furnace input\n\n## ERROR TIPS\n\n### Previous Tips Still Relevant\n- Before crafting complex items, ensure all required base materials are available\n- Ensure target position is valid and free before placing entities\n\n### New Tips\n\n### Inventory Management\n- Always maintain sufficient coal supply for refueling operations\n- Check inventory before attempting to insert fuel into entities\n\n### Entity Placement and Alignment\n- Ensure inserters' pickup and drop positions align with source and destination entities\n- Verify entity positions allow for proper material flow between components\n- When placing mining setups, check that the output path is clear and has a valid destination\n\n### Entity Status Monitoring\n- Monitor entity status messages for issues like:\n  - \"output blocked by item on ground\"\n  - \"waiting for space in destination\"\n  - \"no ingredients to smelt\"\n- These indicate misalignment or missing connections in production chains\n\n## NAMESPACE\n\n### Important Variables\n- `drill`: BurnerMiningDrill\n- `furnace`: Furnace\n- `inserter`: BurnerInserter\n- `chest`: Container\n\n### Functions Used\n- `craft_item(prototype: Prototype, quantity: int)`: Crafts items\n- `place_entity()`: Places entities at specified coordinates\n- `insert_item(prototype: Prototype, entity: Entity, quantity: int)`: Inserts items into entities\n- `harvest()`: Collects resources\n- `extract()`: Removes items from entities\n\nSuccess patterns:\n- Coal mining setup maintains stable operation\n- Basic resource gathering and crafting of simple items\n- Entity placement when positions are valid\n\nFailure patterns:\n- Inserting items when inventory is empty\n- Placing entities without proper alignment\n- Creating production chains with misaligned components"}