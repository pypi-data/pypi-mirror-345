{"content": "## EXISTING STRUCTURES\n\n### Power Generation System\n- **Offshore pump** at position (-9.5, 19.5) - Working, connected to water system\n- **Boiler** at position (18.0, 22.5) - Working, fueled with coal\n- **Steam engine** at position (22.5, 22.5) - Working, connected to power network\n- **Pipes** (32 water pipes and 10 steam pipes) forming complete fluid system\n\n### Oil Processing Complex\n- **Pumpjack** at position (17.5, 40.5) - Working, connected to power network\n- **Oil refinery** at position (27.5, 40.5) - Powered, recipe set to basic oil processing\n- **Power poles** forming complete connection to power grid\n\n### Chemical Production Setup\n- **Chemical plant** at position (37.5, 22.5) - Powered, recipe set to sulfur production\n- **Storage tank** at position (32.5, 22.5) - Empty, intended for petroleum gas\n- **Power poles** connecting chemical plant to network\n\n## ERROR TIPS\n\n### Fluid System Connection Issues\n- Verify source has fluid before connecting (chemical plant connection failed due to empty source)\n- Check connection point availability (oil refinery index error)\n- Ensure proper spacing between connection points (repeated pipe connection failures)\n\n### Power System Verification\n- Confirm power connection before asserting working status (refinery power verification)\n- Check all entities in power network are properly connected (steam engine connection issue)\n- Verify power supply meets demand (chemical plant power issues)\n\n### Recipe Configuration\n- Set recipes before expecting production (chemical plant and refinery initial state)\n- Verify recipe ingredients are available (chemical plant fluid shortage)\n- Check recipe compatibility with building type\n\n### System Validation\n- Verify all system components before asserting working state\n- Check fluid levels in connected systems\n- Monitor power consumption vs production\n\n### Programming Best Practices\n- Validate array indices before access (refinery connection points)\n- Check entity status before assertions\n- Implement proper error handling for connection attempts\n\n## NAMESPACE\n\n### Functions\n- `connect_fluid_system(source: Entity, target: Entity, pipe_count: int) -> bool` - Successfully used for water system but failed for chemical plant connections\n- `verify_power_connection(entity: Entity) -> bool` - Needs implementation to check power status\n\n### Variables\n- `steam_engine_pos: Position` - Position of working steam engine\n- `refinery_pos: Position` - Location of oil refinery\n- `chemical_plant_pos: Position` - Location of chemical production facility"}