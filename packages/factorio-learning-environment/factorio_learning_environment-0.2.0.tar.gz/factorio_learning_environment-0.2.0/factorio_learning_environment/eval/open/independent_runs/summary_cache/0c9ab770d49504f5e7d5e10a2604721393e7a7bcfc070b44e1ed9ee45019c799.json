{"content": "## EXISTING STRUCTURES\n\n### Power Generation System\n- **Offshore pump** at position (-9.5, 19.5) - Working, connected to water system\n- **Boiler** at position (18.0, 22.5) - Fueled with coal, steam output at 165\u00b0C\n- **Steam engine** at position (22.5, 22.5) - Now connected to power network\n- **Pipes** (31 water pipes and 10 steam pipes) forming complete fluid system\n\n### Oil Processing Complex\n- **Pumpjack** at position (17.5, 40.5) - Now receiving power, extracting crude oil\n- **Oil refinery** at position (27.5, 40.5) - Recipe set to basic oil processing, powered but connection issues\n- **Storage tank** at position (32.5, 22.5) - Contains petroleum gas (40.46 units)\n- **Pipes** (28 pipes) connecting refinery to storage\n\n### Chemical Production Setup\n- **Chemical plant** at position (37.5, 22.5) - Now powered but experiencing fluid shortages\n- **Power poles** network with 434 poles, voltage at 6.19MW\n\n## ERROR TIPS\n\n### Persistent Fluid Connection Issues\n- Verify fluid presence before connecting (repeated chemical plant connection failures)\n- Clear blocked connection points (oil refinery connection failures)\n- Ensure proper pipe routing between distant entities (water system connection problems)\n- Check fluid types match between connected systems (chemical plant input requirements)\n\n### Power System Validation\n- Confirm all production chain components are powered (refinery power verification)\n- Monitor power consumption vs production capacity\n- Verify power pole network connectivity (steam engine connection issues)\n\n### System Verification\n- Check fluid levels in storage before asserting production status\n- Validate all variables are defined before use (output_chest reference error)\n- Implement proper error handling for connection attempts\n- Monitor system throughput metrics for performance issues\n\n### Programming Best Practices\n- Validate array indices before access (refinery connection points)\n- Implement proper exception handling for fluid systems\n- Check entity status before assertions\n- Handle None cases in entity lookups (power network verification)\n\n## NAMESPACE\n\n### Functions\n- `connect_fluid_system(source: Entity, target: Entity, pipe_count: int) -> bool` - Needs additional fluid validation and error handling\n- `verify_power_connection(entity: Entity) -> bool` - Requires implementation to check power status and network connectivity\n\n### Variables\n- `steam_engine_pos: Position` - Position of now-connected steam engine\n- `refinery_pos: Position` - Location of oil refinery with connection issues\n- `chemical_plant_pos: Position` - Location of chemical plant with input shortages\n- `output_chest_pos: Position` - Still undefined target position (40.5, 22.5)"}