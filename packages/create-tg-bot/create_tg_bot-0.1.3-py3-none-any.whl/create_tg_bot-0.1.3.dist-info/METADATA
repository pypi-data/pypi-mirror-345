Metadata-Version: 2.4
Name: create-tg-bot
Version: 0.1.3
Summary: A modular, CLI-first Python boilerplate for building Telegram bots. Fast setup, clean architecture, and open-source ready.
Home-page: https://github.com/emilastanov/create-tg-bot
Author: Emil Astanov
Author-email: emila1998@yandex.ru
License: MIT
Keywords: telegram,bot,telegram-bot,cli,command-line,python,boilerplate,template,starter-kit,open-source,asyncio,telegram-cli,modular,framework,python3,telegram-api,telegram-bot-api
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Environment :: Console
Classifier: Operating System :: OS Independent
Classifier: Topic :: Utilities
Classifier: Topic :: Software Development :: Build Tools
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click
Requires-Dist: jinja2
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# create-tg-bot

[![PyPI version](https://img.shields.io/pypi/v/create-tg-bot.svg)](https://pypi.org/project/create-tg-bot/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](LICENSE)
[![CI/CD](https://github.com/emilastanov/create-tg-bot/actions/workflows/publish.yml/badge.svg)](https://github.com/emilastanov/create-tg-bot/actions)

📖 This README is also available in [🇷🇺 Russian](README.ru.md)

`create-tg-bot` is a CLI tool for rapidly creating clean-architecture Telegram bots using Python.

---

## 🚀 Features

- Quickly scaffold a new project structure
- SQLite and PostgreSQL support
- Environment variable and `.env` management
- Generates Dockerfile and GitHub Actions workflows
- Automatic database migrations (Alembic)
- Optional development and production bot tokens
- Ready for PyPI publishing
- Includes testing with `pytest`

---

## 📦 Installation

```bash
pip install create-tg-bot
```

---

## 🛠️ Usage

```bash
create-tg-bot <project_name>
```

### Example

```bash
create-tg-bot my_bot_project
```

This creates a fully-structured bot project and initializes it with environment setup, dependency installation, migrations, and Git repository initialization.

---

## 📁 Project Structure

```
project/
├── .env
├── alembic.ini
├── config.py
├── main.py
├── models/
├── services/
├── crud/
├── migrations/
├── templates/
├── requirements.txt
└── .github/workflows/
```

---

## 🧪 Development Notes

- Uses `setuptools_scm` for automatic versioning
- Templates live in `create_tg_bot/templates`
- CLI interface powered by `Click`

---

## 📄 License

This project is licensed under the [MIT License](LICENSE).

---

## 👤 Author

[Emil Astanov](mailto:emila1998@yandex.ru)
