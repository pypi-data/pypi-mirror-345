#!/usr/bin/env python3

import sys
from .ps import port_scanner
from .utility import util

def process(ports: list, args, is_root=False) -> None:
    open_ports = []
    ip = args.ip
    is_verbose = args.v
    PU = args.PU
    PS = args.PS
    PH = args.PH
    
    # Prompt
    if PH:
        if is_root:
            print("[*] Running with root privileges, using hybrid strategy...")
        else:
            print("[*] Running without root privileges, using hybrid strategy...")
    elif PU:
        if is_root:
            print("[*] Running with root privileges, using Scapy UDP scan...")
        else:
            print("[*] Running without root privileges, using socket UDP scan...")
    elif PS:
        if is_root:
            print("[*] Running with root privileges, using SYN scan...")
        else:
            print("[*] Running without root privileges, using connect scan...")
    
    sorted_ports = sorted(ports)
    
    if PH or PU:
        if PH:
            for port in sorted_ports:
                sys.stdout.flush()
                port_scanner.scan_tcp_port(ip, port, is_root=is_root, 
                    is_verbose=is_verbose, open_ports=open_ports)
        if args.ports:
            ports = util.parse_ports(args.ports)
        else:
            ports = util.load_default_ports(flag="UDP")
        sorted_ports = sorted(ports)
        port_scanner.udp_multiple_threaded(ip=ip, ports=sorted_ports, threads=20, is_root=is_root,
                is_verbose=is_verbose, open_ports=open_ports)
    else:
        for port in sorted_ports:
            sys.stdout.flush()
            port_scanner.scan_tcp_port(ip, port, is_root=is_root, is_verbose=is_verbose,
                    open_ports=open_ports)
    
    if open_ports:
        print(f"\nOpened: {sorted(set(open_ports))}")
    else:
        print("\nNo open ports were detected.")
