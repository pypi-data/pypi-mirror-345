[project]
name = "pip_inside"
description = "Like poetry, but it's pip"
authors = [
    { name = "orctom", email = "orctom@gmail.com" },
]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = ['version']
requires-python = ">=3.8"
dependencies = [
    "flit_core>=3.8.0",
    "tomlkit",
    "requests>=2.31.0",
    "certifi>=2024.7.4",
    "urllib3>=1.26.18",
    "click",
    "inquirerpy",
    "pexpect",
    "packaging",
]

[project.urls]
homepage = "https://github.com/orctom/pip-inside"
repository = "https://github.com/orctom/pip-inside"

[project.scripts]
pi = "pip_inside.main:cli"
pip-inside = "pip_inside.main:cli"

[project.optional-dependencies]
dev = [
    "ruff",
    "passlib[bcrypt]",
]

[build-system]
requires = ["flit_core>=3.8.0,<4"]
build-backend = "flit_core.buildapi"

[tool.pi]
license-expression = 'Apache-2.0'

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q -s"
testpaths = [
    "tests",
]

[tool.autopep8]
max_line_length = 135
in-place = true
recursive = true
aggressive = 3

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "data",
    ".vscode",
    ".ipynb_checkpoints",
]
line-length = 135
target-version = "py38"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
