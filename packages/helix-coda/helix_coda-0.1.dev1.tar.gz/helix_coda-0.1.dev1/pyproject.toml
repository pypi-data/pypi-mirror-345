[project]
name = "helix-coda"
dynamic = ["version"]
description = "Code indexing for better AI code generation"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "asgi-correlation-id>=4.3.4",
    "better-exceptions>=0.3.3",
    "click>=8.1.8",
    "colorama>=0.4.6",
    "dotenv>=0.9.9",
    "fastapi[standard]>=0.115.12",
    "httpx-retries>=0.3.2",
    "httpx>=0.28.1",
    "mcp>=1.6.0",
    "structlog>=25.3.0",
    "posthog>=4.0.1",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "mypy>=1.15.0",
    "pytest-asyncio>=0.26.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.8",
]

[project.scripts]
coda = "coda.cli:cli"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/coda/_version.py"

[tool.pytest.ini_options]
norecursedirs = ".git"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore:.*websockets.*:DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = []

[tool.ruff.lint]
ignore = [
  "ANN401", # Opinionated warning on disallowing dynamically typed expressions
  "ASYNC109", # Opinionated warning on not allowing timeout parameters in favour of asyncio.timeout
  "COM812", # Conflicts with other rules
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "ISC001", # Conflicts with other rules
  "PLR2004", # Just annoying, not really useful
  "TRY003", # Long exception messages in custom exception classes
  "S101", # Allow assert statements in test files
]
select = ["ALL"]
exclude = []
