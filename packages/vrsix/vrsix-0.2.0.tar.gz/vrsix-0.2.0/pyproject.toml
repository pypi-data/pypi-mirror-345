[project]
name = "vrsix"
version = "0.2.0"
authors = [
    {name = "James Stevenson"},
]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Rust",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
]
requires-python = ">=3.10"
description = "Tools for indexing GREGoR VCFs"
license = {file = "LICENSE"}
dependencies = ["click", "asyncclick"]

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-cov"
]
dev = [
    "maturin",
    "ruff==0.8.6",
    "pre-commit>=4.0.1",
]

[project.urls]
Homepage = "https://github.com/genomicmedlab/gregor"
Documentation = "https://github.com/genomicmedlab/gregor"
Changelog = "https://github.com/genomicmedlab/gregor/releases"
Source = "https://github.com/genomicmedlab/gregor"
"Bug Tracker" = "https://github.com/genomicmedlab/gregor/issues"

[project.scripts]
"vrsix" = "vrsix.cli:cli"

[build-system]
requires = ["maturin>=1.2,<2.0"]
build-backend = "maturin"

[tool.maturin]
features = ["pyo3/extension-module"]
module-name = "vrsix._core"
python-source = "src"

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report term-missing"
testpaths = ["tests"]

[tool.coverage.run]
branch = true

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
select = [
    "F",  # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "E", "W",  # https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "I",  # https://docs.astral.sh/ruff/rules/#isort-i
    "N",  # https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "D",  # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "UP",  # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "ANN",  # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "ASYNC",  # https://docs.astral.sh/ruff/rules/#flake8-async-async
    "S",  # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "B",  # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "A",  # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
    "C4",  # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "DTZ",  # https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
    "T10",  # https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
    "EM",  # https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
    "LOG",  # https://docs.astral.sh/ruff/rules/#flake8-logging-log
    "INP",  # https://docs.astral.sh/ruff/rules/#flake8-no-pep420-inp
    "G",  # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
    "PIE",  # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "T20",  # https://docs.astral.sh/ruff/rules/#flake8-print-t20
    "PT",  # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
    "Q",  # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
    "RSE",  # https://docs.astral.sh/ruff/rules/#flake8-raise-rse
    "RET",  # https://docs.astral.sh/ruff/rules/#flake8-return-ret
    "SLF",  # https://docs.astral.sh/ruff/rules/#flake8-self-slf
    "SIM",  # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "ARG",  # https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
    "PTH",  # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "PGH",  # https://docs.astral.sh/ruff/rules/#pygrep-hooks-pgh
    "PLC",  # https://docs.astral.sh/ruff/rules/#convention-c
    "PLE",  # https://docs.astral.sh/ruff/rules/#error-e_1
    "TRY",  # https://docs.astral.sh/ruff/rules/#tryceratops-try
    "PERF",  # https://docs.astral.sh/ruff/rules/#perflint-perf
    "FURB",  # https://docs.astral.sh/ruff/rules/#refurb-furb
    "RUF",  # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
]
fixable = [
    "I",
    "F401",
    "D",
    "UP",
    "ANN",
    "B",
    "C4",
    "LOG",
    "G",
    "PIE",
    "PT",
    "RSE",
    "SIM",
    "PLC",
    "PLE",
    "TRY",
    "PERF",
    "FURB",
    "RUF"
]
ignore = [
    # ignored for compatibility with formatter:
    "D206", "D300", "E111", "E114", "E117", "E501", "W191",
    # other
    "ANN003",
    "D203", "D205", "D213", "D400", "D415",
    "S321",
    "PLC0206",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "ANN001",
    "ANN2",
    "S101",
    "B011",
    "INP001",
    "D100",
    "D101",
    "D102",
    "D103"
]
"src/vrsix/cli.py" = ["D301"]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.format]
docstring-code-format = true
