[[bin]]
name = "poodio"
path = "src/bin.rs"
required-features = ["default"]

[[bin]]
name = "poodio-bind-napi"
path = "bin/bind_napi.rs"
required-features = ["bind-napi"]

[[bin]]
name = "poodio-bind-pyo3"
path = "bin/bind_pyo3.rs"
required-features = ["bind-pyo3"]

[build-dependencies]
napi-build = {workspace = true, features = [], optional = true}
pyo3-build-config = {workspace = true, features = [], optional = true}

[dependencies]
anstream = {workspace = true, features = ["auto"]}
clap = {workspace = true, features = ["default", "derive"]}
color-eyre = {workspace = true, features = ["track-caller"], default-features = true}
cpal = {workspace = true, features = []}
log = {workspace = true, features = ["std"]}
napi = {workspace = true, features = ["dyn-symbols", "napi1"], optional = true}
napi-derive = {workspace = true, features = ["type-def"], optional = true}
pyo3 = {workspace = true, features = ["abi3-py38", "extension-module", "macros"], optional = true}
pyo3-stub-gen = {workspace = true, features = [], optional = true}
serde = {workspace = true, features = ["std"], optional = true}
serde_json = {workspace = true, features = ["std"], optional = true}
simple_logger = {workspace = true, features = ["colors", "stderr"]}
thiserror = {workspace = true, features = ["std"]}

[features]
bind-napi = [
  "dep:napi",
  "dep:napi-build",
  "dep:napi-derive",
  "dep:serde",
  "dep:serde_json",
]
bind-pyo3 = [
  "dep:pyo3",
  "dep:pyo3-build-config",
  "dep:pyo3-stub-gen",
]
default = []

[lib]
crate-type = ["cdylib", "lib"]

[package]
authors.workspace = true
categories = ["api-bindings", "command-line-utilities", "multimedia::audio", "simulation"]
default-run = "poodio"
description = "Farts poo poo audio"
documentation = "https://docs.rs/poodio"
edition.workspace = true
homepage = "https://github.com/AsherJingkongChen/poopoo/tree/main/poodio#readme"
include = ["/LICENSE.txt", "/build.rs", "/src/"]
keywords = ["api", "audio", "cli", "mcp", "synthesizer"]
license.workspace = true
name = "poodio"
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version = "0.0.23"

[package.metadata.binstall]
disabled-strategies = ["quick-install"]
pkg-fmt = "tgz"
pkg-url = "{ repo }/releases/download/{ name }%40{ version }/{ name }%40{ version }-{ target }{ archive-suffix }"

[package.metadata.docs.rs]
features = []
