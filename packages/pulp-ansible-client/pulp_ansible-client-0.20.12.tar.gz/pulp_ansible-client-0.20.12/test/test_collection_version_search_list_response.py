# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages  # noqa: E501

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pulpcore.client.pulp_ansible
from pulpcore.client.pulp_ansible.models.collection_version_search_list_response import CollectionVersionSearchListResponse  # noqa: E501
from pulpcore.client.pulp_ansible.rest import ApiException

class TestCollectionVersionSearchListResponse(unittest.TestCase):
    """CollectionVersionSearchListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CollectionVersionSearchListResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pulpcore.client.pulp_ansible.models.collection_version_search_list_response.CollectionVersionSearchListResponse()  # noqa: E501
        if include_optional :
            return CollectionVersionSearchListResponse(
                repository = pulpcore.client.pulp_ansible.models.repository_response.RepositoryResponse(
                    pulp_href = '0', 
                    pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    versions_href = '0', 
                    pulp_labels = {
                        'key' : '0'
                        }, 
                    latest_version_href = '0', 
                    name = '0', 
                    description = '0', 
                    retain_repo_versions = 1, 
                    remote = '0', ), 
                collection_version = pulpcore.client.pulp_ansible.models.collection_summary_response.CollectionSummaryResponse(
                    pulp_href = '0', 
                    namespace = '0', 
                    name = '0', 
                    version = '0', 
                    requires_ansible = '0', 
                    pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    contents = pulpcore.client.pulp_ansible.models.contents.contents(), 
                    dependencies = pulpcore.client.pulp_ansible.models.dependencies.dependencies(), 
                    description = '0', 
                    tags = [
                        pulpcore.client.pulp_ansible.models.ansible/tag_response.ansible.TagResponse(
                            name = '0', )
                        ], ), 
                repository_version = '0', 
                namespace_metadata = null, 
                is_highest = True, 
                is_deprecated = True, 
                is_signed = True
            )
        else :
            return CollectionVersionSearchListResponse(
                repository = pulpcore.client.pulp_ansible.models.repository_response.RepositoryResponse(
                    pulp_href = '0', 
                    pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    versions_href = '0', 
                    pulp_labels = {
                        'key' : '0'
                        }, 
                    latest_version_href = '0', 
                    name = '0', 
                    description = '0', 
                    retain_repo_versions = 1, 
                    remote = '0', ),
                collection_version = pulpcore.client.pulp_ansible.models.collection_summary_response.CollectionSummaryResponse(
                    pulp_href = '0', 
                    namespace = '0', 
                    name = '0', 
                    version = '0', 
                    requires_ansible = '0', 
                    pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    contents = pulpcore.client.pulp_ansible.models.contents.contents(), 
                    dependencies = pulpcore.client.pulp_ansible.models.dependencies.dependencies(), 
                    description = '0', 
                    tags = [
                        pulpcore.client.pulp_ansible.models.ansible/tag_response.ansible.TagResponse(
                            name = '0', )
                        ], ),
                namespace_metadata = null,
                is_highest = True,
                is_deprecated = True,
                is_signed = True,
        )

    def testCollectionVersionSearchListResponse(self):
        """Test CollectionVersionSearchListResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
