name: CI
on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ci
    strategy:
      max-parallel: 1
      matrix:
        # python-version: ["3.12", "3.13"]
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pipx install uv --python $(which python${{ matrix.python-version }})
          uv sync
      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CI: "true"
        run: |
          uv run pytest ./opsmate/tests -n auto -m "not serial"
      - name: Docker runtime tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CI: "true"
        run: |
          uv run pytest ./opsmate/tests -m serial
      - name: mysql tool tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CI: "true"
        run: |
          uv run --package opsmate-tool-mysql pytest ./contrib/tests/tools/mysql
      - name: postgres tool tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CI: "true"
        run: |
          uv run --package opsmate-tool-postgres pytest ./contrib/tests/tools/postgres

  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build image
        run: |
          make docker-build
