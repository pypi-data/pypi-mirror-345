<?xml version="1.0" standalone="yes"?>

<!-- Generated by BEAUTi v1.10.4 Prerelease #bc6cbd9                         -->
<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       David Geffen School of Medicine, University of California, Los Angeles-->
<!--       http://beast.community/                                           -->
<beast version="1.10.4">
	

	<!-- The list of taxa to be analysed (can also include dates/ages).          -->
	<!-- ntax=317                                                                -->
	<taxa id="taxa">
		{% for taxon in taxa -%}
		<taxon id="{{ taxon.id }}">
			<date value="{{ taxon.date }}" direction="forwards" units="years" {% if taxon.uncertainty %} uncertainty="{{ taxon.uncertainty }}"{% endif %}/>
		</taxon>
		{% endfor -%}
	</taxa>
	
	
	
	<!-- The sequence alignment (each sequence refers to a taxon above).         -->
	<alignment id="alignment" dataType="nucleotide">
		{% for taxon in taxa -%}
		<sequence>
			<taxon idref="{{ taxon.id }}"/>
			{% if sampleFromPrior %}???{% else %}{{ taxon.sequence }}{% endif %}
		</sequence>
		{% endfor -%}
	</alignment>
	
	

	<!-- The unique patterns from 1 to end                                       -->
	{% if constantSites %}
	<mergePatterns id="patterns"> 
		<patterns from="1" every="1"> 
			<alignment idref="alignment"/> 
		</patterns> 
		<constantPatterns> 
			<alignment idref="alignment"/> 
			<counts> 
				<parameter value="{{ constantSites }}"/>
			</counts>
		</constantPatterns> 
    </mergePatterns>
	{% else %}
	<patterns id="patterns" from="1" strip="false">
		<alignment idref="alignment"/>
	</patterns>
	{% endif %}
	
	

	<!-- This is a simple constant population size coalescent model              -->
	<!-- that is used to generate an initial tree for the chain.                 -->
	<constantSize id="initialDemo" units="years">
		<populationSize>
			<parameter id="initialDemo.popSize" value="100"/>
		</populationSize>
	</constantSize>
	

	<!-- Generate a random starting tree under the coalescent process            -->
	<coalescentSimulator id="startingTree">
		<taxa idref="taxa"/>
		<constantSize idref="initialDemo"/>
	</coalescentSimulator>
	

	<!-- Generate a tree model                                                   -->
	<treeModel id="treeModel">
		<coalescentTree idref="startingTree"/>
		<rootHeight>
			<parameter id="treeModel.rootHeight"/>
		</rootHeight>
		<nodeHeights internalNodes="true">
			<parameter id="treeModel.internalNodeHeights"/>
		</nodeHeights>
		<nodeHeights internalNodes="true" rootNode="true">
			<parameter id="treeModel.allInternalNodeHeights"/>
		</nodeHeights>

		<!-- START Tip date sampling                                                 -->
		{% for taxon in taxa -%}
		{% if taxon.uncertainty -%}
		<leafHeight taxon="{{ taxon.id }}">
			<parameter id="age({{ taxon.id }})"/>
		</leafHeight>
		{% endif -%}
		{% endfor -%}
		<!-- END Tip date sampling                                                   -->

	</treeModel>

	<!-- Statistic for sum of the branch lengths of the tree (tree length)       -->
	<treeLengthStatistic id="treeLength">
		<treeModel idref="treeModel"/>
	</treeLengthStatistic>

	<!-- Statistic for time of most recent common ancestor of tree               -->
	<tmrcaStatistic id="age(root)" absolute="true">
		<treeModel idref="treeModel"/>
	</tmrcaStatistic>
	
	

	<!-- Generate a gmrfSkyGridLikelihood for the Bayesian SkyGrid process       -->
	<gmrfSkyGridLikelihood id="skygrid">
		<populationSizes>

			<!-- skygrid.logPopSize is in log units unlike other popSize                 -->
			<parameter id="skygrid.logPopSize" dimension="{{ dimensions }}" value="1"/>
		</populationSizes>
		<precisionParameter>
			<parameter id="skygrid.precision" value="0.1" lower="0.0"/>
		</precisionParameter>
		<numGridPoints>
			<parameter id="skygrid.numGridPoints" value="{{  dimensions - 1 }}"/> 
		</numGridPoints>
		<cutOff>
			<parameter id="skygrid.cutOff" value="{{ cutoff }}" />
		</cutOff>
		<populationTree>
			<treeModel idref="treeModel"/>
		</populationTree>
	</gmrfSkyGridLikelihood>

	{% if clockModel == 'strict' %}
	<!-- The strict clock (Uniform rates across branches)                        -->
	<strictClockBranchRates id="branchRates">
		<rate>
			<parameter id="clock.rate"{%if fixedClockRate %} value="{{ fixedClockRate }}"{% else %} value="1.0"{% endif %} lower="0.0" />
		</rate>
	</strictClockBranchRates>
	{% elif clockModel == 'relaxed' %}
	<!-- The uncorrelated relaxed clock (Drummond, Ho, Phillips & Rambaut (2006) PLoS Biology 4, e88 )-->
	<discretizedBranchRates id="branchRates">
		<treeModel idref="treeModel"/>
		<distribution>
			<logNormalDistributionModel meanInRealSpace="true">
				<mean>
					<parameter id="ucld.mean"{%if fixedClockRate %} value="{{ fixedClockRate }}"{% else %} value="1.0"{% endif %} lower="0.0"/>
				</mean>
				<stdev>
					<parameter id="ucld.stdev" value="0.3333333333333333" lower="0.0"/>
				</stdev>
			</logNormalDistributionModel>
		</distribution>
		<rateCategories>
			<parameter id="branchRates.categories"/>
		</rateCategories>
	</discretizedBranchRates>
	{% endif %}
	
	<rateStatistic id="meanRate" name="meanRate" mode="mean" internal="true" external="true">
		<treeModel idref="treeModel"/>
		{% if clockModel == 'strict' %}
		<strictClockBranchRates idref="branchRates"/>
		{% elif clockModel == 'relaxed' %}
		<discretizedBranchRates idref="branchRates"/>
		{% endif %}
	</rateStatistic>
	
	{% if clockModel == 'relaxed' %}
	<rateStatistic id="coefficientOfVariation" name="coefficientOfVariation" mode="coefficientOfVariation" internal="true" external="true">
		<treeModel idref="treeModel"/>
		<discretizedBranchRates idref="branchRates"/>
	</rateStatistic>
	
	<rateCovarianceStatistic id="covariance" name="covariance">
		<treeModel idref="treeModel"/>
		<discretizedBranchRates idref="branchRates"/>
	</rateCovarianceStatistic>
	{% endif %}




	<!-- The HKY substitution model (Hasegawa, Kishino & Yano, 1985)             -->
	<HKYModel id="hky">
		<frequencies>
			<frequencyModel dataType="nucleotide">
				<frequencies>
					<parameter id="frequencies" value="0.25 0.25 0.25 0.25"/>
				</frequencies>
			</frequencyModel>
		</frequencies>
		<kappa>
			<parameter id="kappa" value="2.0" lower="0.0"/>
		</kappa>
	</HKYModel>

	<!-- site model                                                              -->
	<siteModel id="siteModel">
		<substitutionModel>
			<HKYModel idref="hky"/>
		</substitutionModel>
		<proportionInvariant>
			<parameter id="pInv" value="0.5" lower="0.0" upper="1.0"/>
		</proportionInvariant>
	</siteModel>

	<!--                                                                         -->
	<statistic id="mu" name="mu">
		<siteModel idref="siteModel"/>
	</statistic>
	

	<!-- Likelihood for tree given sequence data                                 -->
	<treeDataLikelihood id="treeLikelihood" useAmbiguities="false">
		<partition>
			<patterns idref="patterns"/>
			<siteModel idref="siteModel"/>
		</partition>
		<treeModel idref="treeModel"/>
		{% if clockModel == 'strict' %}
		<strictClockBranchRates idref="branchRates"/>
		{% elif clockModel == 'relaxed' %}
		<discretizedBranchRates idref="branchRates"/>
		{% endif %}
	</treeDataLikelihood>
	

	<!-- Define operators                                                        -->
	<operators id="operators" optimizationSchedule="log">
		<scaleOperator scaleFactor="0.75" weight="1">
			<parameter idref="kappa"/>
		</scaleOperator>
		<deltaExchange delta="0.01" weight="1">
			<parameter idref="frequencies"/>
		</deltaExchange>
		<randomWalkOperator windowSize="0.75" weight="1" boundaryCondition="logit">
			<parameter idref="pInv"/>
		</randomWalkOperator>
		{% if clockModel == 'strict' and not fixedClockRate %}
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="clock.rate"/>
		</scaleOperator>
		{% elif clockModel == 'relaxed' %}
		{% if not fixedClockRate %}
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="ucld.mean"/>
		</scaleOperator>
		{% endif %}
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="ucld.stdev"/>
		</scaleOperator>
		{% endif %}

		{% if not fixedClockRate %}
		<upDownOperator scaleFactor="0.75" weight="3">
			<up>
				<parameter idref="treeModel.allInternalNodeHeights"/>
			</up>
			<down>
				{% if clockModel == 'strict' %}
				<parameter idref="clock.rate"/>
				{% elif clockModel == 'relaxed' %}
				<parameter idref="ucld.mean"/>
				{% endif %}
			</down>
		</upDownOperator>
		{% endif %}
		{% if clockModel == 'relaxed' %}
		<swapOperator size="1" weight="10" autoOptimize="false">
			<parameter idref="branchRates.categories"/>
		</swapOperator>
		<uniformIntegerOperator weight="10">
			<parameter idref="branchRates.categories"/>
		</uniformIntegerOperator>
		{% endif %}
		<subtreeSlide size="1.0" gaussian="true" weight="30">
			<treeModel idref="treeModel"/>
		</subtreeSlide>
		<narrowExchange weight="30">
			<treeModel idref="treeModel"/>
		</narrowExchange>
		<wideExchange weight="3">
			<treeModel idref="treeModel"/>
		</wideExchange>
		<wilsonBalding weight="3">
			<treeModel idref="treeModel"/>
		</wilsonBalding>
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="treeModel.rootHeight"/>
		</scaleOperator>
		<uniformOperator weight="30">
			<parameter idref="treeModel.internalNodeHeights"/>
		</uniformOperator>
		<gmrfGridBlockUpdateOperator scaleFactor="1.0" weight="2">
			<gmrfSkyrideLikelihood idref="skygrid"/>
		</gmrfGridBlockUpdateOperator>
		<scaleOperator scaleFactor="0.75" weight="1">
			<parameter idref="skygrid.precision"/>
		</scaleOperator>
		{% for taxon in taxa -%}
		{% if taxon.uncertainty -%}
		<uniformOperator weight="1">
			<parameter idref="age({{ taxon.id }})"/>
		</uniformOperator>
		{% endif -%}
		{% endfor -%}
	</operators>
	

	<!-- Define MCMC                                                             -->
	<mcmc id="mcmc" chainLength="{{ chainLength }}" autoOptimize="true" operatorAnalysis="skygrid.ops">
		<joint id="joint">
			<prior id="prior">
				<logNormalPrior mu="1.0" sigma="1.25" offset="0.0">
					<parameter idref="kappa"/>
				</logNormalPrior>
				<dirichletPrior alpha="1.0" sumsTo="1.0">
					<parameter idref="frequencies"/>
				</dirichletPrior>
				<uniformPrior lower="0.0" upper="1.0">
					<parameter idref="pInv"/>
				</uniformPrior>
				{% if clockModel == 'strict' and not fixedClockRate %}
				<ctmcScalePrior>
					<ctmcScale>
						<parameter idref="clock.rate"/>
					</ctmcScale>
					<treeModel idref="treeModel"/>
				</ctmcScalePrior>
				{% elif clockModel == 'relaxed' %}
				{% if not fixedClockRate %}
				<gammaPrior shape="{{ relaxedGammaShape }}" scale="{{ relaxedGammaScale }}" offset="0.0">
					<parameter idref="ucld.mean"/>
				</gammaPrior>
				{% endif %}
				<exponentialPrior mean="0.3333333333333333" offset="0.0">
					<parameter idref="ucld.stdev"/>
				</exponentialPrior>
				{% endif %}
				<gammaPrior shape="0.001" scale="1000.0" offset="0.0">
					<parameter idref="skygrid.precision"/>
				</gammaPrior>
				
				<gmrfSkyGridLikelihood idref="skygrid"/>
				{% if clockModel == 'strict' %}
				<strictClockBranchRates idref="branchRates"/>
				{% elif clockModel == 'relaxed' %}
				<discretizedBranchRates idref="branchRates"/>
				{% endif %}
			</prior>
			<likelihood id="likelihood">
				<treeDataLikelihood idref="treeLikelihood"/>
			</likelihood>
		</joint>
		<operators idref="operators"/>

		<!-- write log to screen                                                     -->
		<log id="screenLog" logEvery="{{ screenLogEvery }}">
			<column label="Joint" dp="4" width="12">
				<joint idref="joint"/>
			</column>
			<column label="Prior" dp="4" width="12">
				<prior idref="prior"/>
			</column>
			<column label="Likelihood" dp="4" width="12">
				<likelihood idref="likelihood"/>
			</column>
			<column label="age(root)" sf="6" width="12">
				<tmrcaStatistic idref="age(root)"/>
			</column>
			{% if clockModel == 'strict' %}
			<column label="clock.rate" sf="6" width="12">
				<parameter idref="clock.rate"/>
			</column>
			{% elif clockModel == 'relaxed' %}
			<column label="ucld.mean" sf="6" width="12">
				<parameter idref="ucld.mean"/>
			</column>
			{% endif %}
		</log>

		<!-- write log to file                                                       -->
		<log id="fileLog" logEvery="{{ traceLogEvery }}" fileName="{{ traceLogName }}" overwrite="false">
			<joint idref="joint"/>
			<prior idref="prior"/>
			<likelihood idref="likelihood"/>
			<parameter idref="treeModel.rootHeight"/>
			<tmrcaStatistic idref="age(root)"/>
			<treeLengthStatistic idref="treeLength"/>
			<parameter idref="skygrid.precision"/>
			<parameter idref="skygrid.logPopSize"/>
			<parameter idref="skygrid.cutOff"/>
			<parameter idref="kappa"/>
			<parameter idref="frequencies"/>
			<parameter idref="pInv"/>
			{% if clockModel == 'strict' %}
			<parameter idref="clock.rate"/>
			{% elif clockModel == 'relaxed' %}
			<parameter idref="ucld.mean"/>
			<parameter idref="ucld.stdev"/>
			<rateStatistic idref="coefficientOfVariation"/>
			<rateCovarianceStatistic idref="covariance"/>
			{% endif %}

			<rateStatistic idref="meanRate"/>

			<!-- START Tip date sampling                                                 -->
			{% for taxon in taxa -%}
			{% if taxon.uncertainty -%}
			<parameter idref="age({{ taxon.id }})"/>
			{% endif -%}
			{% endfor -%}

			<!-- END Tip date sampling                                                   -->

			<treeDataLikelihood idref="treeLikelihood"/>
			{% if clockModel == 'strict' %}
			<strictClockBranchRates idref="branchRates"/>
			{% elif clockModel == 'relaxed' %}
			<discretizedBranchRates idref="branchRates"/>
			{% endif %}
			<gmrfSkyGridLikelihood idref="skygrid"/>
		</log>

		<!-- write tree log to file                                                  -->
		<logTree id="treeFileLog" logEvery="{{ treeLogEvery }}" nexusFormat="true" fileName="{{ treeLogName }}" sortTranslationTable="true">
			<treeModel idref="treeModel"/>
			<trait name="rate" tag="rate">
				{% if clockModel == 'strict' %}
				<strictClockBranchRates idref="branchRates"/>
				{% elif clockModel == 'relaxed' %}
				<discretizedBranchRates idref="branchRates"/>
				{% endif %}
			</trait>
			<joint idref="joint"/>
		</logTree>
	</mcmc>
	
	<report>
		<property name="timer">
			<mcmc idref="mcmc"/>
		</property>
	</report>
	
</beast>
