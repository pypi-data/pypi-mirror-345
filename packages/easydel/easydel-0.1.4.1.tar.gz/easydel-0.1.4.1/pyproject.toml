[tool.poetry]
name = "easydel"
version = "0.1.4.1"

description = "Accelerate, Optimize performance with streamlined training and serving options with JAX."
authors = ["Erfan Zare Chavoshi <Erfanzare810@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"

homepage = "https://github.com/erfanzar/EasyDeL"
repository = "https://github.com/erfanzar/EasyDeL"
documentation = "https://easydel.readthedocs.io/en/latest/"

keywords = [
	"Deep Learning",
	"Machine Learning",
	"JAX",
	"CUDA",
	"XLA",
	"Triton",
	"Pallas",
]

classifiers = [
	"Development Status :: 3 - Alpha",
	"Intended Audience :: Developers",
	"Topic :: Scientific/Engineering :: Artificial Intelligence",
	"License :: OSI Approved :: Apache Software License",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
jax = ">=0.5.3"
jaxlib = ">=0.5.3"
eformer = "0.0.34"
einops = "~0.8.0"
transformers = ">=4.51.0"
flax = "0.10.4"
optax = "^0.2.2"
triton = "~3.2.0"
tqdm = "*"
fastapi = "^0.115.2"
wandb = ">=0.18.5"
uvloop = "0.21.0"
uvicorn = "^0.32.0"
jinja2 = ">=3.1.5"
datasets = ">=3.3.2" 

tensorflow-datasets = { version = ">=4.9.6", optional = true }
tensorflow-cpu = { version = ">=2.18.0", optional = true }
tensorboard = { version = ">=2.18.0", optional = true }
torch = { version = ">=2.6.0", source = "torch-cpu", optional = true }

[[tool.poetry.source]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.poetry.group.tf]
optional = true

[tool.poetry.group.tf.dependencies]
tensorflow-datasets = "^4.9.6"
tensorflow-cpu = "^2.18.0"
tensorboard = "^2.18.0"

[tool.poetry.group.torch]
optional = true

[tool.poetry.group.torch.dependencies]
torch = { version = ">=2.6.0", source = "torch-cpu", optional = true }


[tool.poetry.group.all]
optional = true

[tool.poetry.group.all.dependencies]
tensorflow-datasets = "^4.9.6"
tensorflow-cpu = "^2.18.0"
tensorboard = "^2.18.0"
torch = { version = ">=2.6.0", source = "torch-cpu", optional = true }

[tool.poetry.extras]
tf = ["tensorflow-datasets", "tensorflow-cpu", "tensorboard"]
all = ["tensorflow-datasets", "tensorflow-cpu", "tensorboard"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "B"]
ignore = ["E501", "B905", "B007"]
unfixable = ["B"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]
"tests/*" = ["E402", "E731"]
"benchmarks/*" = ["E402", "E731"]
"triton_*" = ["E741", "ISC001", "E501", "E731"]
"pallas_*" = ["E741", "ISC001", "E501", "E731"]

[tool.ruff.format]
quote-style = "double"
indent-style = "tab"
docstring-code-format = true

[tool.ruff]
target-version = "py311"
line-length = 88
indent-width = 2
