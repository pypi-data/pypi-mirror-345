"""Integration tests."""

import pytest

from src.processor import InvalidInputError
from src.processor.csv import CSVValidator
from tests.config import TestConfig


@pytest.fixture
def csv_paths_1() -> list[str]:
    """Return csv paths."""
    return [f"{TestConfig.INPUT_CSVS_FOLDER}/input_001.csv"]


@pytest.fixture
def csv_paths_2() -> list[str]:
    """Return csv paths."""
    return [f"{TestConfig.INPUT_CSVS_FOLDER}/input_005.csv"]


@pytest.fixture
def csv_paths_3() -> list[str]:
    """Return csv paths."""
    return [f"{TestConfig.INPUT_CSVS_FOLDER}/input_006.csv"]

@pytest.fixture
def csv_paths_4() -> list[str]:
    """Return csv paths (for optimisation)."""
    return [f"{TestConfig.INPUT_CSVS_FOLDER}/input_007.csv"]



@pytest.mark.integration
def test_integration_1(csv_paths_1: list[str] ) -> None:
    """Test integration 1."""
    with pytest.raises(expected_exception=InvalidInputError):
        CSVValidator(
            csv_paths=csv_paths_1,
            columns_with_no_missing_data=[
                "SOURCE_SYSTEM",
                "BALANCE_AMOUNT",
                "AMOUNT_PAID"
            ],
            data_types=["character","character","character","character","character","character","character","character","numeric","numeric","character","character","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","character","numeric","character","numeric","numeric","character","character","numeric","character","character","character","numeric","character","character","character","integer64",],
            column_names=["AS_OF_DATE","DEAL_REFERENCE","ORIGINATION_DATE","MATURITY_DATE","CUSTOMER_REFERENCE","CASHFLOW_TYPE","PAYMENT_DATE","LAYOUT","AMOUNT_PAID","BALANCE_AMOUNT","REPRICING_TYPE","REPRICING_DATE","EFFECTIVE_INTEREST_RATE","FTP_RATE","LP_RATE","SP1_Rate","SP2_Rate","SP3_Rate","SP4_Rate","SP5_Rate","RATE_SPREAD","RATE_FLOOR","EFFECTIVE_REPRICING","SOURCE_SYSTEM","SP6_Rate","ADJUSTED_REPRICING_DATE","FTP_BASE_RATE","RATE_CHANGE_FREQUENCY","RATE_FLAG","NEXT_RESET_DATE","FREQUENCY_PRINCIPAL","GL_CATEGORY","ENTITY","CURRENCY","EXCNG_RT","LAST_RESET_DATE","PAYMENT_TYPE","SOURCE_VERSION","version",],
            )

@pytest.mark.integration
def test_integration_2(csv_paths_2: list[str] ) -> None:
    """Test integration 2."""
    with pytest.raises(expected_exception=InvalidInputError):
        CSVValidator(
            csv_paths=csv_paths_2,
            unique_value_columns=["DEAL_REFERENCE"],
            columns_with_no_missing_data=[
                "PAYMENT_TYPE", "NEXT_INTEREST_PAY_DATE", "DEAL_REFERENCE", "AS_OF_DATE", "LAYOUT", "PRODUCT_DESCRIPTION", "GL_CATEGORY", "ORIGINATION_DATE", "ACCRUAL_BASIS", "PRINCIPAL_OS_LCY", "NEXT_PRIN_PAY_DATE",],
            data_types=[
                "character",
                "character",
                "character",
                "character",
                "character",
                "character",
                "character",
                "character",
                "character",
                "character",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "character",
                "character",
                "character",
                "numeric",
                "integer64",
                "integer64",
                "numeric",
                "character",
                "character",
                "numeric",
                "integer64",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "integer64",
                "numeric",
                "integer64",
                "integer64",
                "integer64",
                "integer64",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "character",
                "character",
                "character",
                "character",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "character",
                "character",
                "numeric",
                "integer64",
                "numeric",
                "numeric",
                "integer64",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "character",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "character",
                "numeric",
                "character",
                "character",
                "integer64",
                "character",
                "integer64",
                "numeric",
                "character",
                "character",
                "character",
                "numeric",
                "numeric",
                "numeric",
                "numeric",
                "integer64"
            ],
            column_names=[
                "AS_OF_DATE",
                "DEAL_REFERENCE",
                "ENTITY",
                "COUNTRY",
                "BRANCH",
                "CURRENCY",
                "LAYOUT",
                "GL_CATEGORY",
                "PRODUCT_DESCRIPTION",
                "BUSINESS_UNIT",
                "REGULATORY_SEGMENT",
                "CUSTOMER_REFERENCE",
                "CUSTOMER_NAME",
                "INTRAGROUP_ENTITY",
                "BOOK_CLASSIFICATION",
                "ACCOUNTING_CLASSIFICATION",
                "FACILITY_ID",
                "FACILITY_TYPE",
                "TRADE_DATE",
                "VALUE_DATE",
                "ORIGINATION_DATE",
                "MATURITY_DATE",
                "PAYMENT_TYPE",
                "BALLOON_FLAG",
                "FREQUENCY_PRINCIPAL",
                "FREQUENCY_INTEREST",
                "PMT_TEASER_TENOR",
                "ACCRUAL_BASIS",
                "BUSINESS_DAY_CONVENTION",
                "RATE_FLAG",
                "RATE_CHANGE_FREQUENCY",
                "RATE_INDEX",
                "RATE_FLOOR",
                "RATE_CEILING",
                "PRICE_TEASER_TENOR",
                "RESCHEDULE_FLAG",
                "SECURED_TRANSACTION",
                "COLLATERAL_SECURITY_CLASS_BANK",
                "COLLATERAL_SECURITY_CLASS_CP",
                "COLLATERAL_REHYPOTHECATED",
                "COLLATERAL_REHYPOTHECATION_TENOR",
                "ENCUMBERANCE",
                "ENCUMBERANCE_TERM_DATE",
                "BANK_PUT_OPTION",
                "BANK_PUT_KICKIN_DATE",
                "BANK_PUT_NOTICE_PERIOD",
                "PREPAY_OPTION",
                "PREPAY_KICKIN_DATE",
                "PREPAY_PENALTY",
                "PARTIAL_PREPAY",
                "PARTIAL_PREPAY_TREATMENT",
                "PORTFOLIO",
                "SOURCE",
                "POOL_CALC",
                "END_OF_MONTH",
                "DCC",
                "ORIGINAL_TENOR",
                "ORIG_EFF_MATURITY",
                "EFFECTIVE_REPRICING",
                "RATE_SPREAD_COMP",
                "BENCHMARK_RATE",
                "ORIGINAL_BALANCE_FCY",
                "ORIGINAL_BALANCE_LCY",
                "BALLOON_AMOUNT_LCY",
                "PMT_TEASER_AMOUNT",
                "RATE_SPREAD",
                "PRICE_TEASER_RATE",
                "PRICE_TEASER_SPREAD",
                "PRINCIPAL_OS_FCY",
                "PRINCIPAL_OS_LCY",
                "ANNUITY_AMOUNT",
                "FACE_VALUE_LCY",
                "CARRYING_VALUE_LCY",
                "CLEAN_PRICE",
                "PREV_PRIN_PAY_DATE",
                "NEXT_PRIN_PAY_DATE",
                "PREV_INTEREST_PAY_DATE",
                "NEXT_INTEREST_PAY_DATE",
                "PAYMENT_DEFFERAL",
                "EFFECTIVE_INTEREST_RATE",
                "COUPON",
                "YIELD_TO_MATURITY",
                "LAST_RESET_DATE",
                "NEXT_RESET_DATE",
                "LOAN_TO_VALUE",
                "CREDIT_STATUS",
                "DAYS_PASTDUE",
                "PASTDUE_AMOUNT",
                "CREDIT_RATING",
                "RISK_WEIGHT",
                "MITIGATED_RISK_WEIGHT",
                "REPO_ELIGIBILITY",
                "REPO_HAIRCUT",
                "COLLATERAL_MARKET_VALUE",
                "BANK_PUT_DATE",
                "FTP_RATE",
                "BASE_RATE",
                "LP_RATE",
                "LP_ADJ1_RATE",
                "LP_ADJ2_RATE",
                "ADJ_LP_RATE",
                "CUSTOMER_SECTOR",
                "CUSTOMER_INDUSTRY",
                "CUSTOMER_REGION",
                "CUSTOMER_RESIDENCE",
                "CUSTOMER_NATIONALITY",
                "CUSTOMER_AGE_GROUP",
                "CUSTOMER_OCCUPATION",
                "REMAINING_TENOR",
                "SEASONING",
                "TIME_TO_REPRICE",
                "TIME_SINCE_REPRICE",
                "MATURITY_LESSTHAN_30D",
                "BANK_NOTICE_LESSTHAN_30D",
                "CUST_NOTICE_LESSTHAN_30D",
                "RW_CLASS",
                "ACCOUNT_STATUS",
                "AVG_BALANCE_MTD",
                "AVG_BALANCE_YTD",
                "RELATED_PARTY",
                "PURPOSE",
                "JURISDICTION",
                "PROFIT_CENTER",
                "COUNTRY_OF_RISK",
                "SENIORITY",
                "SYNDICATION",
                "SYNDICATION_ROLE",
                "SECURITIZED_PCT",
                "HQLA_CLASS",
                "TRI_PARTY",
                "OPEN_MATURITY",
                "ROLLOVER_REPO",
                "GL_CODE",
                "HIER_BUSINESS_UNIT",
                "HIER_CURR",
                "HIER_COA",
                "HIER_ENTITY",
                "HIER_INDUSTRY",
                "HIER_PAYMENTSTRUCTURE",
                "HIER_RATESTRUCTURE",
                "HIER_CREDITRATING",
                "HIER_REGION",
                "HIER_REGULATORYSEGMENT",
                "HIER_SECTOR",
                "ANNUITY_PRIN_FLAG",
                "PASTDUE_BUCKET",
                "ENCUMBERANCE_TENOR",
                "ACCRUAL_ADJUSTMENT",
                "CALENDAR_NAME",
                "OFFSET_DAYS",
                "SOURCE_SYSTEM",
                "SOURCE_VERSION",
                "EXCNG_RT",
                "NOTIONAL_EXCHANGE",
                "AXIOM_PRODUCT",
                "CHAR_CUSTOM_2",
                "CHAR_CUSTOM_3",
                "NUM_CUSTOM_1",
                "NUM_CUSTOM_2",
                "NUM_CUSTOM_3",
                "version"
            ]
            )
