name: Tests

on:
  pull_request:
  push:
    branches:
      - main
      - dev
    tags:
      - "*.*"
      - "v*.*"
  release:

jobs:

  pre-commit:
    name: Check code quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - uses: pre-commit/action@v3.0.1

  test_pipenv:
    name: Run tests in development environment with pipenv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - run: pip install pipenv
      - run: pipenv sync --dev
      - run: pipenv run pytest

  check_install:
    runs-on: ubuntu-latest
    name: Check package installation via setup.py works
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - run: pip install --upgrade setuptools
      - name: Build package
        run: python setup.py sdist
      - name: Install package
        run: pip install dist/*

  test_general:
    needs: check_install
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Run Tests on ${{ matrix.os }} - Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install --upgrade setuptools
      - run: pip install -e ./[test]
      - run: pytest

  dist:
    name: Python bdist/wheel
    needs: [pre-commit, test_pipenv, test_general]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fetch all tags, so setuptools_scm can determine version
        run: git fetch --prune --unshallow --tags
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade wheel setuptools setuptools_scm build
      - name: Build package
        run: python -m build -s -w -o dist/
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  dist_check:
    needs: [dist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install twine
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - run: twine check dist/*


  dist_upload_test_pypi_only:
    if: github.event.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs: [dist_check]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.test_pypi_token }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true


  dist_upload_pypi:
    if: startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [dist_check]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.test_pypi_token }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
