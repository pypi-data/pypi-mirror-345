Metadata-Version: 2.1
Name: treegenix
Version: 0.1.2
Summary: A Python CLI tool to generate directory tree structures
Home-page: https://github.com/sujal-1245/treegenix.git
Author: Sujal Bhagat
Author-email: sujaldbhagat2004@gmail.com
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Environment :: Console
Classifier: Operating System :: OS Independent
Classifier: Topic :: Utilities
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

````markdown
# 🌳 treegenix

[![PyPI version](https://img.shields.io/pypi/v/treegenix?color=brightgreen)](https://pypi.org/project/treegenix/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](LICENSE)
[![Python](https://img.shields.io/badge/python-3.7%2B-blue.svg)](https://www.python.org/)

**treegenix** is a lightweight Python CLI tool to beautifully display the directory structure of any folder — like the classic `tree` command, but written in Python, with customization and clean output.

---

## ✨ Features

- 📁 Visualize any folder's file structure in a clean tree format
- ❌ Easily exclude folders/files (e.g., `venv`, `__pycache__`, `.git`)
- 💻 Command-line interface
- 🙈 Ignores hidden files/folders by default
- 🐍 Pure Python, no external dependencies

---

## 📦 Installation

Install via [PyPI](https://pypi.org/project/treegenix/):

```bash
pip install treegenix
````

---

## 🚀 Usage

After installation, run `treegenix` from your terminal.

```bash
treegenix [path] [--exclude folder1 folder2 ...]
```

### 📌 Arguments

* `path` *(optional)*: Path to the directory you want to scan. Defaults to the current directory.
* `--exclude`: List of folder or file names to exclude from the tree.

---

### 🔍 Examples

#### 1. Show structure of current directory:

```bash
treegenix
```

#### 2. Show structure of a specific directory:

```bash
treegenix ./my_project
```

#### 3. Exclude folders like `venv` and `__pycache__`:

```bash
treegenix . --exclude venv __pycache__
```

Output:

```
my_project/
├── app/
│   ├── __init__.py
│   └── main.py
├── README.md
└── requirements.txt
```

---

## 🧪 Development Setup

If you'd like to contribute:

```bash
git clone https://github.com/sujal-1245/treegenix.git
cd treegenix
pip install -e .
python -m treegenix .
```

---

## 📄 License

Licensed under the [MIT License](LICENSE).

---

## 👤 Author

**Sujal Bhagat**
🔗 [GitHub Profile](https://github.com/sujal-1245)

```

---


