# This is a template file for mml local variables setup.
#

# ╔═════════════╗
# ║  IMPORTANT  ║
# ╚═════════════╝
# It is recommended to use the `mml-env-setup` command to create your personel mml.env file! After pip installing
# mml-core, navigate to your preferred config file storage location (e.g. ~/.config/mml) and start mml-env-setup.
#
# ALTERANTIVE MANUAL SETUP:
# Please duplicate the file and rename as "mml.env", afterwards set your variables -
# if you move to a different location, make sure to provide MML_ENV_PATH to your shell before starting mml

# ╔═════════════════════════════╗
# ║ Bare minimum - local system ║
# ╚═════════════════════════════╝
# Path variables, provides storage for data (input) and results (output)
export MML_DATA_PATH=/path/to/data
export MML_RESULTS_PATH=/path/to/results
export MML_LOCAL_WORKERS=available_local_CPU_cores

# ╔════════════════════════════╗
# ║ Config location management ║
# ╚════════════════════════════╝
# MML config location information (used when mofifications of configs files are needen, see docs for details)
# leave as is to use mml default configs files location
# make sure to be compatible across systems
export MML_CONFIGS_PATH=DEFAULT_CONF_PATH
export MML_CONFIG_NAME=config_mml

# ╔══════════════════════════════════════╗
# ║ Additional system - "cluster" system ║
# ╚══════════════════════════════════════╝
# mml supports an additional system (named cluster) out of the box, provide details here, similar to local system
export MML_CLUSTER_DATA_PATH=/gpu/data/...
export MML_CLUSTER_RESULTS_PATH=/gpu/checkpoints/...
export MML_CLUSTER_WORKERS=12

# ╔════════════╗
# ║ Kaggle API ║
# ╚════════════╝
# OPTIONAL Kaggle API settings (see https://github.com/Kaggle/kaggle-api#api-credentials for details)
# only necessary when downloading kaggle datasets during "mml create ..." (example tasks see mml-data plugin)
export KAGGLE_USERNAME=your_kaggle_username
export KAGGLE_KEY=your_kaggle_api_key

# ╔═══════════╗
# ║ Notifiers ║
# ╚═══════════╝
# mml supports notification systems to message e.g. failed runs, see mml.core.scripts.notifier.py for more details
# notifications are optional and notifiers are independent
# Slack notifier
# URL for failure notification
export MML_SLACK_WEBHOOK_URL=dummy
# Email notifier
# details for failure notification
export MML_SMTP_SERVER=dummy
export MML_SMTP_SERVER_PORT=dummy
export MML_SENDER_EMAIL=dummy
export MML_RECEIVER_EMAIL=dummy
# set to NO_PASSWORD if there is no password necessary
export MML_MAIL_PASSWORD=NO_PASSWORD