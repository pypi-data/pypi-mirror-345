{"content": "\"\"\"\nAh, I see the issue. Some furnaces are already full of coal. Let's check inventories first and only insert what's needed.\n\"\"\"\n\n# Get more coal first\nmove_to(nearest(Resource.Coal))\nharvest_resource(nearest(Resource.Coal), quantity=50)\n\n# Move back to our copper setup\ncopper_pos = nearest(Resource.CopperOre)\nmove_to(copper_pos)\n\n# Add fuel to machines only if needed\nentities = get_entities([Prototype.BurnerMiningDrill, Prototype.BurnerInserter, Prototype.StoneFurnace])\nfor entity in entities:\n    inventory = inspect_inventory(entity)\n    coal_amount = inventory.get(Prototype.Coal, 0)\n    \n    # Only add coal if there's less than 5 pieces\n    if coal_amount < 5:\n        amount_to_add = 5 - coal_amount\n        try:\n            insert_item(Prototype.Coal, entity, quantity=amount_to_add)\n        except Exception as e:\n            print(f\"Couldn't add coal to {entity.name} at {entity.position}: {e}\")\n\n# Check copper furnace ore levels\nfurnaces = get_entities([Prototype.StoneFurnace])\nfor furnace in furnaces:\n    inventory = inspect_inventory(furnace)\n    copper_amount = inventory.get(Prototype.CopperOre, 0)\n    \n    # Add copper ore if needed\n    if copper_amount < 5:\n        amount_to_add = 5 - copper_amount\n        try:\n            insert_item(Prototype.CopperOre, furnace, quantity=amount_to_add)\n        except Exception as e:\n            print(f\"Couldn't add copper ore to furnace at {furnace.position}: {e}\")\n\nprint(\"\\nProduction line status:\")\nprint(\"Player Inventory:\", inspect_inventory())\nprint(\"\\nEntities and their status:\")\nfor entity in get_entities():\n    print(f\"\\n{entity.name} at {entity.position}:\")\n    print(f\"Status: {entity.status}\")\n    print(f\"Inventory: {inspect_inventory(entity)}\")\n    if hasattr(entity, 'warnings') and entity.warnings:\n        print(f\"Warnings: {entity.warnings}\")", "summary_range": "[1-38]"}