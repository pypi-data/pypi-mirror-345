{"content": "### EXISTING STRUCTURES\n### Copper plate mine at position (41.0, -82.0)\nConsists of following entities\n- Burner mining drill (position (41.0, -82.0)) and a furnace at position (41.0, -80.0)\n- Burner inserter (position (39.5, -79.5)) and a transport belt at position (38.5, -79.5)\n\n### Electricity generator at position (117.5, -30.5)\nConsists of steam engine (position (117.5, -30.5)), boiler (position (111.5, -32.0)), offshore pump (position (106.5, -32.5)), and small electric poles at positions (111.5, -30.5), (115.5, -32.5), and (115.5, -30.5)\n\n### Water supply system at position (106.5, -32.5)\nConsists of offshore pump (position (106.5, -32.5)), pipe group (fluid system 165373), and boiler (position (111.5, -32.0))\n\n### ERROR TIPS\n* Errors when placing entities next to other entities\n  - Ensure there is enough space to place an entity next to another entity\n  - Check if the target position is occupied by another entity\n* Errors when connecting entities with transport belts\n  - Ensure the entities are close enough to be connected by a transport belt\n  - Check if the path between the entities is clear of obstacles\n* Errors when getting entities at specific positions\n  - Ensure the entity exists at the specified position\n  - Check if the entity has been removed or destroyed\n* Errors when connecting fluid systems\n  - Ensure the fluid systems are compatible and can be connected\n  - Check if the connection points are correctly aligned\n\n### NAMESPACE\n* Defined functions:\n  + `get_entity`: Retrieves an entity at a specific position\n  + `place_entity_next_to`: Places an entity next to another entity\n  + `get_connection_amount`: Calculates the number of transport belts required to connect two entities\n* Important variables:\n  + `drill`: A burner mining drill entity\n  + `inserter`: A burner inserter entity\n  + `furnace`: A stone furnace entity\n  + `transport_belt`: A transport belt entity\n  + `Prototype`: A dictionary of entity prototypes\n  + `Position`: A class representing a position in the game world\n  + `Direction`: A class representing a direction in the game world\n  + `Entity`: A class representing an entity in the game world\n  + `Inventory`: A class representing an entity's inventory\n  + `fluid_system`: A dictionary of fluid systems\n  + `pipe_group`: A dictionary of pipe groups\n  + `electricity_group`: A dictionary of electricity groups\n  + `belt_group`: A dictionary of belt groups"}