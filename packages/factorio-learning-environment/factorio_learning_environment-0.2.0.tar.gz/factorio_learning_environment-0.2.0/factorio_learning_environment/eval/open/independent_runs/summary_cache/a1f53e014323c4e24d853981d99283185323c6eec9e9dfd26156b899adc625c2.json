{"content": "```text\nEXISTING STRUCTURES\n### Burner mining drill setup at x=-15.0, y=-50.0\nConsists of:\n- Burner mining drill at position x=-15.0, y=-50.0. It mines iron-ore.\n- Burner inserter at position x=-14.5, y=-51.5, which inserts coal into the drill.\n- Wooden chest at position x=-15.5, y=-51.5, which stores the mined iron-ore.\n\n### Storage area near the burner mining drill at x=-15.0, y=-50.0\nConsists of several chests:\n- Steel chest at (-12.5, -49.5)\n- Iron chests at (-11.5, -49.5), (-18.5, -49.5), (-19.5, -49.5), (-21.5, -49.5), (-22.5, -49.5), (-23.5, -49.5), (-24.5, -49.5), (-14.5, -46.5), (-14.5, -45.5), (-14.5, -43.5), (-14.5, -42.5)\n- Wooden chests at (-14.5, -47.5), (-14.5, -38.5), (-13.5, -39.5), (-20.5, -49.5), (-25.5, -49.5)\n- Iron chest containing coal, stone and iron-ore at (-26.5, -49.5)\n- Steel chest at (-14.5, -34.5)\n\n### Stone furnace setup at x=0.0, y=0.0\nConsists of:\n- Stone furnace at position x=0.0, y=0.0.\n- Wooden chest at position x=1.5, y=0.5.\n\n### Belt network\nConsists of multiple belt groups connecting various locations.\n- BeltGroup(inputs=[Belt((x=37.5 y=-83.5)->, direction=Direction.DOWN)], outputs=[Belt((x=-11.5 y=-47.5)->, direction=Direction.LEFT)])\n- BeltGroup(inputs=[Belt((x=45.5 y=-83.5)->, direction=Direction.RIGHT)], outputs=[Belt((x=45.5 y=-81.5)->, direction=Direction.LEFT)])\n- BeltGroup(inputs=[Belt((x=4.5 y=-73.5)->, direction=Direction.RIGHT)], outputs=[Belt((x=4.5 y=-71.5)->, direction=Direction.LEFT)])\n- BeltGroup(inputs=[Belt((x=-15.5 y=-55.5)->, direction=Direction.DOWN)], outputs=[Belt((x=-15.5 y=-53.5)->, direction=Direction.DOWN)])\n- BeltGroup(inputs=[Belt((x=-17.5 y=-51.5)->, direction=Direction.DOWN)], outputs=[Belt((x=-15.5 y=-39.5)->, direction=Direction.DOWN)])\n- BeltGroup(inputs=[Belt((x=-7.5 y=-48.5)->, direction=Direction.RIGHT)], outputs=[Belt((x=10.5 y=-48.5)->, direction=Direction.RIGHT)])\n\nERROR TIPS\n### Errors when using extracting but being too far\n- Make sure to move to the target entity where you want to extract from before extracting items\n\n### Errors when placing into a tile which is occupied by another entity\n- Ensure you can place a entity to a tile before attempting placing\n\n### Errors related to inventory being full\n- Before attempting to pick up an item, ensure that the inventory has sufficient space.\n\n### Errors related to incorrect argument type in `insert_item` function\n- The first argument of `insert_item` must be a Prototype object, not a string.\n- When using `item.prototype_name` or `item.name`, ensure that `item` is a Prototype object and not a string. If `item` is a string, you should directly pass the string to the function if it expects a string, or convert it to a Prototype object if it expects a Prototype.\n\nNAMESPACE\n- insert_item(item, destination, quantity):\n  - Failure:\n    - AssertionError: The first argument must be a Prototype. Occurs when the item argument"}