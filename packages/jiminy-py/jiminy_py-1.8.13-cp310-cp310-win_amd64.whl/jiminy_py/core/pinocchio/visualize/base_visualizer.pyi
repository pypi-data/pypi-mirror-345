from _typeshed import Incomplete

__all__ = ['BaseVisualizer']

class BaseVisualizer:
    model: Incomplete
    collision_model: Incomplete
    visual_model: Incomplete
    data: Incomplete
    collision_data: Incomplete
    visual_data: Incomplete
    def __init__(self, model=..., collision_model: Incomplete | None = None, visual_model: Incomplete | None = None, copy_models: bool = False, data: Incomplete | None = None, collision_data: Incomplete | None = None, visual_data: Incomplete | None = None) -> None: ...
    def rebuildData(self) -> None: ...
    def getViewerNodeName(self, geometry_object, geometry_type) -> None: ...
    def initViewer(self, *args, **kwargs) -> None: ...
    def loadViewerModel(self, *args, **kwargs) -> None: ...
    def reload(self, new_geometry_object, geometry_type: Incomplete | None = None) -> None: ...
    def clean(self) -> None: ...
    def display(self, q: Incomplete | None = None) -> None: ...
    def displayCollisions(self, visibility) -> None: ...
    def displayVisuals(self, visibility) -> None: ...
    def setBackgroundColor(self, *args, **kwargs) -> None: ...
    def setCameraTarget(self, target) -> None: ...
    def setCameraPosition(self, position) -> None: ...
    def setCameraZoom(self, zoom) -> None: ...
    def setCameraPose(self, pose=...) -> None: ...
    def captureImage(self, w: Incomplete | None = None, h: Incomplete | None = None) -> None: ...
    def disableCameraControl(self) -> None: ...
    def enableCameraControl(self) -> None: ...
    def drawFrameVelocities(self, *args, **kwargs) -> None: ...
    def sleep(self, dt) -> None: ...
    def has_video_writer(self): ...
    def play(self, q_trajectory, dt: Incomplete | None = None, callback: Incomplete | None = None, capture: bool = False, **kwargs): ...
    def create_video_ctx(self, filename: Incomplete | None = None, fps: int = 30, directory: Incomplete | None = None, **kwargs): ...

class VideoContext:
    viz: Incomplete
    vid_writer: Incomplete
    def __init__(self, viz, fps, filename, **kwargs) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, *args) -> None: ...
