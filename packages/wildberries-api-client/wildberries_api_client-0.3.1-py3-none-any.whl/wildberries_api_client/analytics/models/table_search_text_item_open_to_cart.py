# coding: utf-8

"""
    Analitika i dannye

    <div class=\"description_important\">     Uznat bolhe ob analitike i dannyh mohno v <a href=\"https://seller.wildberries.ru/instructions/subcategory/be1a4034-53f9-47d6-8f12-9a2923280026\">spravohnom centre</a> </div>  V dannom razdele dostupny metody poluhenia:   1. [Statistiki po prodviheniu](/openapi/analytics#tag/Statistika-po-prodvizheniyu)   2. [Voronki prodah](/openapi/analytics#tag/Voronka-prodazh)   3. [Poiskovyh zaprosov](/openapi/analytics#tag/Poiskovye-zaprosy)   4. [Istorii ostatkov](/openapi/analytics#tag/Istoriya-ostatkov)   5. [Analitiki prodavca v formate CSV](/openapi/analytics#tag/Analitika-prodavca-CSV)   # noqa: E501

    OpenAPI spec version: analytics
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class TableSearchTextItemOpenToCart(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'current': 'int',
        'dynamics': 'int',
        'percentile': 'int'
    }

    attribute_map = {
        'current': 'current',
        'dynamics': 'dynamics',
        'percentile': 'percentile'
    }

    def __init__(self, current=None, dynamics=None, percentile=None):  # noqa: E501
        """TableSearchTextItemOpenToCart - a model defined in Swagger"""  # noqa: E501
        self._current = None
        self._dynamics = None
        self._percentile = None
        self.discriminator = None
        self.current = current
        if dynamics is not None:
            self.dynamics = dynamics
        self.percentile = percentile

    @property
    def current(self):
        """Gets the current of this TableSearchTextItemOpenToCart.  # noqa: E501

        Tekuhaa konversia  # noqa: E501

        :return: The current of this TableSearchTextItemOpenToCart.  # noqa: E501
        :rtype: int
        """
        return self._current

    @current.setter
    def current(self, current):
        """Sets the current of this TableSearchTextItemOpenToCart.

        Tekuhaa konversia  # noqa: E501

        :param current: The current of this TableSearchTextItemOpenToCart.  # noqa: E501
        :type: int
        """
        if current is None:
            raise ValueError("Invalid value for `current`, must not be `None`")  # noqa: E501

        self._current = current

    @property
    def dynamics(self):
        """Gets the dynamics of this TableSearchTextItemOpenToCart.  # noqa: E501

        Dinamika po sravneniu s predyduhim periodom, %  # noqa: E501

        :return: The dynamics of this TableSearchTextItemOpenToCart.  # noqa: E501
        :rtype: int
        """
        return self._dynamics

    @dynamics.setter
    def dynamics(self, dynamics):
        """Sets the dynamics of this TableSearchTextItemOpenToCart.

        Dinamika po sravneniu s predyduhim periodom, %  # noqa: E501

        :param dynamics: The dynamics of this TableSearchTextItemOpenToCart.  # noqa: E501
        :type: int
        """

        self._dynamics = dynamics

    @property
    def percentile(self):
        """Gets the percentile of this TableSearchTextItemOpenToCart.  # noqa: E501

        Procent, na kotoryi pokazatel konversii v korzinu vyhe, hem u kartohek konkurentov po poiskovomu zaprosu  # noqa: E501

        :return: The percentile of this TableSearchTextItemOpenToCart.  # noqa: E501
        :rtype: int
        """
        return self._percentile

    @percentile.setter
    def percentile(self, percentile):
        """Sets the percentile of this TableSearchTextItemOpenToCart.

        Procent, na kotoryi pokazatel konversii v korzinu vyhe, hem u kartohek konkurentov po poiskovomu zaprosu  # noqa: E501

        :param percentile: The percentile of this TableSearchTextItemOpenToCart.  # noqa: E501
        :type: int
        """
        if percentile is None:
            raise ValueError("Invalid value for `percentile`, must not be `None`")  # noqa: E501

        self._percentile = percentile

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TableSearchTextItemOpenToCart, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TableSearchTextItemOpenToCart):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
