############################ Copyrights and license ###########################
#                                                                             #
# Copyright 2025 Brian Gray <bgraymusic@gmail.com>                            #
#                                                                             #
# This file is part of GitHubGQL.                                             #
# https://github.com/bgraymusic/github-gql                                    #
#                                                                             #
# GitHubGQL is free software: you can redistribute it and/or modify it under  #
# the terms of the GNU Lesser General Public License as published by the Free #
# Software Foundation, either version 3 of the License, or (at your option)   #
# any later version.                                                          #
#                                                                             #
# GitHubGQL is distributed in the hope that it will be useful, but WITHOUT    #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or       #
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License #
# for more details.                                                           #
#                                                                             #
# You should have received a copy of the GNU Lesser General Public License    #
# along with PyGithub. If not, see <http://www.gnu.org/licenses/>.            #
#                                                                             #
###############################################################################

github_graphql_endpoint: https://api.github.com/graphql
github_graphql_schema: schema.docs.graphql
gh_gql_schema_bin: graphql_schema.bin
clock_on: False

# Default fields to fetch by interface
interfaces:
  Actor: [login, url]
  Comment: [author, createdAt, id]
  Contribution: [occurredAt, url, user]
  EnterpriseAuditEntryData: [enterpriseUrl]
  GitObject: [commitUrl, id, oid]
  GitSignature: [email, signer, state]
  Migration: [createdAt, id, state]
  Node: [id]
  OauthApplicationAuditEntryData: [oauthApplicationName, oauthApplicationUrl]
  PackageOwner: [id]
  ProfileOwner: [email, id, login, name, websiteUrl]
  ProjectV2FieldCommon: [createdAt, id, name]
  ProjectV2ItemFieldValueCommon: [createdAt, id]
  ProjectV2Owner: [id]
  Reactable: [id]
  RepositoryAuditEntryData: [repositoryUrl]
  RepositoryInfo: [createdAt, homepageUrl, nameWithOwner, url]
  RepositoryOwner: [id, login, url]
  Starrable: [id]
  Subscribable: [id]
  SubscribableThread: [id]
  TeamAuditEntryData: [teamName, teamUrl]
  TopicAuditEntryData: [topicName]
  UniformResourceLocatable: [url]

# To merge across pages, objects with groups of subobjects need some kind of
# identifier to match on. Usually we use 'id', but some types do not have one.
# Here we designate a sorted (highest priority first) list of keys to look
# for. If none is found, do not merge this item.
merge_match_keys:
  - id
  - databaseId
  - number
  - url
  - gitUrl
  - path
  - packageName
  - waitTimerStartedAt
  - updatedAt
  - date
