# coding: utf-8

"""
    Marketing i prodvihenie

    <div class=\"description_important\">       Uznat bolhe o marketinge i prodvihenii mohno v <a href=\"https://seller.wildberries.ru/instructions/category/59d92bd3-6ea0-40f2-b762-ca8835d7d42e?goBackOption=prevRoute&categoryId=479385c6-de01-4b4d-ad4e-ed941e65582e\">spravohnom centre</a> </div>    Metody marketinga i prodvihenia pozvolaut:   1. Poluhat informaciu o [reklamnyh kampaniah](/openapi/promotion#tag/Kampanii) i [mediakampaniah](/openapi/promotion#tag/Media).   2. [Sozdavat](/openapi/promotion#tag/Sozdanie-kampanij) i [upravlat](/openapi/promotion#tag/Upravlenie-kampaniyami) kampaniami.   3. Nastraivat [parametry kampanii](/openapi/promotion#tag/Parametry-kampanij) â€” klastery fraz, prodvigaemye tovary i tak dalee.   4. Upravlat [finansami kampanii](/openapi/promotion#tag/Finansy).   5. Rabotat s [kalendarem akcii](/openapi/promotion#tag/Kalendar-akcij).  Dannye sinhroniziruutsa s bazoi raz v 3 minuty. Statusy kampanii menautsa raz v minutu. Stavki kampanii menautsa raz v 30 sekund.   # noqa: E501

    OpenAPI spec version: promotion
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20013DataPromotions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'description': 'str',
        'advantages': 'list[str]',
        'start_date_time': 'str',
        'end_date_time': 'str',
        'in_promo_action_leftovers': 'int',
        'in_promo_action_total': 'int',
        'not_in_promo_action_leftovers': 'int',
        'not_in_promo_action_total': 'int',
        'participation_percentage': 'int',
        'type': 'str',
        'exception_products_count': 'int',
        'ranging': 'list[InlineResponse20013DataRanging]'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'description': 'description',
        'advantages': 'advantages',
        'start_date_time': 'startDateTime',
        'end_date_time': 'endDateTime',
        'in_promo_action_leftovers': 'inPromoActionLeftovers',
        'in_promo_action_total': 'inPromoActionTotal',
        'not_in_promo_action_leftovers': 'notInPromoActionLeftovers',
        'not_in_promo_action_total': 'notInPromoActionTotal',
        'participation_percentage': 'participationPercentage',
        'type': 'type',
        'exception_products_count': 'exceptionProductsCount',
        'ranging': 'ranging'
    }

    def __init__(self, id=None, name=None, description=None, advantages=None, start_date_time=None, end_date_time=None, in_promo_action_leftovers=None, in_promo_action_total=None, not_in_promo_action_leftovers=None, not_in_promo_action_total=None, participation_percentage=None, type=None, exception_products_count=None, ranging=None):  # noqa: E501
        """InlineResponse20013DataPromotions - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._description = None
        self._advantages = None
        self._start_date_time = None
        self._end_date_time = None
        self._in_promo_action_leftovers = None
        self._in_promo_action_total = None
        self._not_in_promo_action_leftovers = None
        self._not_in_promo_action_total = None
        self._participation_percentage = None
        self._type = None
        self._exception_products_count = None
        self._ranging = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if advantages is not None:
            self.advantages = advantages
        if start_date_time is not None:
            self.start_date_time = start_date_time
        if end_date_time is not None:
            self.end_date_time = end_date_time
        if in_promo_action_leftovers is not None:
            self.in_promo_action_leftovers = in_promo_action_leftovers
        if in_promo_action_total is not None:
            self.in_promo_action_total = in_promo_action_total
        if not_in_promo_action_leftovers is not None:
            self.not_in_promo_action_leftovers = not_in_promo_action_leftovers
        if not_in_promo_action_total is not None:
            self.not_in_promo_action_total = not_in_promo_action_total
        if participation_percentage is not None:
            self.participation_percentage = participation_percentage
        if type is not None:
            self.type = type
        if exception_products_count is not None:
            self.exception_products_count = exception_products_count
        if ranging is not None:
            self.ranging = ranging

    @property
    def id(self):
        """Gets the id of this InlineResponse20013DataPromotions.  # noqa: E501

        ID akcii  # noqa: E501

        :return: The id of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse20013DataPromotions.

        ID akcii  # noqa: E501

        :param id: The id of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this InlineResponse20013DataPromotions.  # noqa: E501

        Nazvanie akcii  # noqa: E501

        :return: The name of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse20013DataPromotions.

        Nazvanie akcii  # noqa: E501

        :param name: The name of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this InlineResponse20013DataPromotions.  # noqa: E501

        Opisanie akcii  # noqa: E501

        :return: The description of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InlineResponse20013DataPromotions.

        Opisanie akcii  # noqa: E501

        :param description: The description of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def advantages(self):
        """Gets the advantages of this InlineResponse20013DataPromotions.  # noqa: E501

        Preimuhestva akcii  # noqa: E501

        :return: The advantages of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: list[str]
        """
        return self._advantages

    @advantages.setter
    def advantages(self, advantages):
        """Sets the advantages of this InlineResponse20013DataPromotions.

        Preimuhestva akcii  # noqa: E501

        :param advantages: The advantages of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: list[str]
        """

        self._advantages = advantages

    @property
    def start_date_time(self):
        """Gets the start_date_time of this InlineResponse20013DataPromotions.  # noqa: E501

        Nahalo akcii  # noqa: E501

        :return: The start_date_time of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: str
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this InlineResponse20013DataPromotions.

        Nahalo akcii  # noqa: E501

        :param start_date_time: The start_date_time of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: str
        """

        self._start_date_time = start_date_time

    @property
    def end_date_time(self):
        """Gets the end_date_time of this InlineResponse20013DataPromotions.  # noqa: E501

        Konec akcii  # noqa: E501

        :return: The end_date_time of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: str
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this InlineResponse20013DataPromotions.

        Konec akcii  # noqa: E501

        :param end_date_time: The end_date_time of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: str
        """

        self._end_date_time = end_date_time

    @property
    def in_promo_action_leftovers(self):
        """Gets the in_promo_action_leftovers of this InlineResponse20013DataPromotions.  # noqa: E501

        Kolihestvo tovarov s ostatkami, uhastvuuhih v akcii  # noqa: E501

        :return: The in_promo_action_leftovers of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: int
        """
        return self._in_promo_action_leftovers

    @in_promo_action_leftovers.setter
    def in_promo_action_leftovers(self, in_promo_action_leftovers):
        """Sets the in_promo_action_leftovers of this InlineResponse20013DataPromotions.

        Kolihestvo tovarov s ostatkami, uhastvuuhih v akcii  # noqa: E501

        :param in_promo_action_leftovers: The in_promo_action_leftovers of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: int
        """

        self._in_promo_action_leftovers = in_promo_action_leftovers

    @property
    def in_promo_action_total(self):
        """Gets the in_promo_action_total of this InlineResponse20013DataPromotions.  # noqa: E501

        Obhee kolihestvo tovarov, uhastvuuhih v akcii  # noqa: E501

        :return: The in_promo_action_total of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: int
        """
        return self._in_promo_action_total

    @in_promo_action_total.setter
    def in_promo_action_total(self, in_promo_action_total):
        """Sets the in_promo_action_total of this InlineResponse20013DataPromotions.

        Obhee kolihestvo tovarov, uhastvuuhih v akcii  # noqa: E501

        :param in_promo_action_total: The in_promo_action_total of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: int
        """

        self._in_promo_action_total = in_promo_action_total

    @property
    def not_in_promo_action_leftovers(self):
        """Gets the not_in_promo_action_leftovers of this InlineResponse20013DataPromotions.  # noqa: E501

        Kolihestvo tovarov s ostatkami, ne uhastvuuhih v akcii  # noqa: E501

        :return: The not_in_promo_action_leftovers of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: int
        """
        return self._not_in_promo_action_leftovers

    @not_in_promo_action_leftovers.setter
    def not_in_promo_action_leftovers(self, not_in_promo_action_leftovers):
        """Sets the not_in_promo_action_leftovers of this InlineResponse20013DataPromotions.

        Kolihestvo tovarov s ostatkami, ne uhastvuuhih v akcii  # noqa: E501

        :param not_in_promo_action_leftovers: The not_in_promo_action_leftovers of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: int
        """

        self._not_in_promo_action_leftovers = not_in_promo_action_leftovers

    @property
    def not_in_promo_action_total(self):
        """Gets the not_in_promo_action_total of this InlineResponse20013DataPromotions.  # noqa: E501

        Obhee kolihestvo tovarov, ne uhastvuuhih v akcii  # noqa: E501

        :return: The not_in_promo_action_total of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: int
        """
        return self._not_in_promo_action_total

    @not_in_promo_action_total.setter
    def not_in_promo_action_total(self, not_in_promo_action_total):
        """Sets the not_in_promo_action_total of this InlineResponse20013DataPromotions.

        Obhee kolihestvo tovarov, ne uhastvuuhih v akcii  # noqa: E501

        :param not_in_promo_action_total: The not_in_promo_action_total of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: int
        """

        self._not_in_promo_action_total = not_in_promo_action_total

    @property
    def participation_percentage(self):
        """Gets the participation_percentage of this InlineResponse20013DataPromotions.  # noqa: E501

        Uhe uhastvuuhie v akcii tovary, %. Rasshityvaetsa po tovaram v akcii i s ostatkom  # noqa: E501

        :return: The participation_percentage of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: int
        """
        return self._participation_percentage

    @participation_percentage.setter
    def participation_percentage(self, participation_percentage):
        """Sets the participation_percentage of this InlineResponse20013DataPromotions.

        Uhe uhastvuuhie v akcii tovary, %. Rasshityvaetsa po tovaram v akcii i s ostatkom  # noqa: E501

        :param participation_percentage: The participation_percentage of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: int
        """

        self._participation_percentage = participation_percentage

    @property
    def type(self):
        """Gets the type of this InlineResponse20013DataPromotions.  # noqa: E501

        Tip akcii:   - `regular` â€” akcia   - `auto` â€” avtoakcia   # noqa: E501

        :return: The type of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InlineResponse20013DataPromotions.

        Tip akcii:   - `regular` â€” akcia   - `auto` â€” avtoakcia   # noqa: E501

        :param type: The type of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: str
        """
        allowed_values = ["regular", "auto"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"  # noqa: E501
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def exception_products_count(self):
        """Gets the exception_products_count of this InlineResponse20013DataPromotions.  # noqa: E501

        Kolihestvo tovarov, iskluhennyh iz avtoakcii do ee starta. Tolko pri `\"type\": \"auto\"`. <br>V moment starta akcii eti tovary avtomatiheski budut bez skidki   # noqa: E501

        :return: The exception_products_count of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: int
        """
        return self._exception_products_count

    @exception_products_count.setter
    def exception_products_count(self, exception_products_count):
        """Sets the exception_products_count of this InlineResponse20013DataPromotions.

        Kolihestvo tovarov, iskluhennyh iz avtoakcii do ee starta. Tolko pri `\"type\": \"auto\"`. <br>V moment starta akcii eti tovary avtomatiheski budut bez skidki   # noqa: E501

        :param exception_products_count: The exception_products_count of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: int
        """

        self._exception_products_count = exception_products_count

    @property
    def ranging(self):
        """Gets the ranging of this InlineResponse20013DataPromotions.  # noqa: E501

        Ranhirovanie (esli podkluheno)  # noqa: E501

        :return: The ranging of this InlineResponse20013DataPromotions.  # noqa: E501
        :rtype: list[InlineResponse20013DataRanging]
        """
        return self._ranging

    @ranging.setter
    def ranging(self, ranging):
        """Sets the ranging of this InlineResponse20013DataPromotions.

        Ranhirovanie (esli podkluheno)  # noqa: E501

        :param ranging: The ranging of this InlineResponse20013DataPromotions.  # noqa: E501
        :type: list[InlineResponse20013DataRanging]
        """

        self._ranging = ranging

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20013DataPromotions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20013DataPromotions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
