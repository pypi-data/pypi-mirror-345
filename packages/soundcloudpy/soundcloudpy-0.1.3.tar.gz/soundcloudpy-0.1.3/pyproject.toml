[project]
name = "soundcloudpy"
version = "0.1.3"
description = "Client for async connection to the Soundcloud api."
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Giel Janssens", email = "giel@music-assistant.io" },
]
classifiers = [
    "Environment :: Console",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "aiohttp>=3.11.0",
]

[project.license]
text = "Apache-2.0"

[project.optional-dependencies]
test = [
    "black==24.10.0",
    "codespell==2.3.0",
    "isort==5.13.2",
    "mypy==1.14.1",
    "pre-commit==4.0.1",
    "pre-commit-hooks==5.0.0",
    "pylint==3.3.3",
    "pytest==8.3.4",
    "pytest-aiohttp==1.0.5",
    "pytest-cov==6.0.0",
    "ruff==0.8.5",
    "safety==3.2.14",
]

[tool.codespell]
ignore-words-list = "soundcloud"

[tool.setuptools]
platforms = [
    "any",
]
zip-safe = false
packages = [
    "soundcloudpy",
]
include-package-data = true

[tool.setuptools.package-data]
soundcloudpy = [
    "py.typed",
]

[tool.ruff]
fix = true
show-fixes = true
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "ALL",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.pylint]
max-branches = 25
max-returns = 15
max-args = 10
max-statements = 50

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = [
    "soundcloudpy",
]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.mypy]
platform = "linux"
python_version = "3.11"
follow_imports = "normal"
ignore_missing_imports = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
extension-pkg-whitelist = [
    "orjson",
]
ignore = [
    "tests",
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "id",
    "on",
    "Run",
    "T",
]

[tool.pylint.DESIGN]
max-attributes = 8

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "too-many-public-methods",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 100

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"
