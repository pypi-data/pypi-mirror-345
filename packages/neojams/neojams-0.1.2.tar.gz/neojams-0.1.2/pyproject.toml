[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "neojams"
version = "0.1.2"
description = "A modernized Python package for working with the JAMS format, built on top of the original JAMS project"
authors = ["Igor Bogicevic <igor.bogicevic@gmail.com>", "MARL development team"]
maintainers = ["Igor Bogicevic <igor.bogicevic@gmail.com>"]
license = "ISC"
readme = "README.md"
repository = "https://github.com/probablyrobot/neojams"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: ISC License (ISCL)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["audio", "music", "json", "jams", "mir"]
packages = [{include = "neojams"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.14"
numpy = "^2.2.5"
pandas = "^2.2.0"
jsonschema = "^4.20.0"
mir_eval = "^0.8.2"
sortedcontainers = "^2.4.0"
pydantic = "^2.5.3"
decorator = "^5.1.1"
matplotlib = "^3.8.4"
librosa = "^0.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
black = "^25.1.0"
ruff = "^0.11.8"
pre-commit = "^4.2.0"
isort = "^6.0.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^8.2.3"
sphinx-rtd-theme = "^3.0.2"

[tool.poetry.scripts]
pydantic-example = "examples.pydantic_example:main"

[tool.black]
line-length = 120
target-version = ["py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["neojams"]
known-third-party = ["numpy", "pandas", "matplotlib", "mir_eval", "jsonschema"]

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--cov-report=term-missing",
    "--cov=neojams",
]
testpaths = [
    "tests"
]
