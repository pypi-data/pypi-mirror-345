"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


TransferEthRequestAmountTypedDict = TypeAliasType(
    "TransferEthRequestAmountTypedDict", Union[float, str]
)
r"""Amount of ETH to transfer"""


TransferEthRequestAmount = TypeAliasType("TransferEthRequestAmount", Union[float, str])
r"""Amount of ETH to transfer"""


class TransferEthRequestTypedDict(TypedDict):
    r"""Request model for transferring native ETH."""

    amount: TransferEthRequestAmountTypedDict
    r"""Amount of ETH to transfer"""
    to: str
    r"""The recipient of the ETH."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class TransferEthRequest(BaseModel):
    r"""Request model for transferring native ETH."""

    amount: TransferEthRequestAmount
    r"""Amount of ETH to transfer"""

    to: str
    r"""The recipient of the ETH."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
