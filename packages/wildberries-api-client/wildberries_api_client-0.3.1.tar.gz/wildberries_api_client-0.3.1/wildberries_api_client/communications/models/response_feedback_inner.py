# coding: utf-8

"""
    Obhenie s pokupatelami

    <div class=\"description_important\">       Uznat bolhe ob obhenii s pokupatelami mohno v <a href=\"https://seller.wildberries.ru/instructions/category/f7f6c465-dd12-422d-80a0-a6d9562115d5?goBackOption=prevRoute&categoryId=30817062-14cc-4a82-bc78-3600c2b0685b\">spravohnom centre</a> </div>  herez metody obhenia s pokupatelem vy mohete rabotat s:   1. [Voprosami](/openapi/user-communication#tag/Voprosy) i [otzyvami](/openapi/user-communication#tag/Otzyvy) pokupatelei   2. [hablonami otvetov](/openapi/user-communication#tag/Shablony-otvetov) na voprosy i otzyvy   3. [hatami s pokupatelami](/openapi/user-communication#tag/Chat-s-pokupatelyami)   4. [Zaavkami pokupatelei na vozvrat](/openapi/user-communication#tag/Vozvraty-pokupatelyami)   # noqa: E501

    OpenAPI spec version: communication
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ResponseFeedbackInner(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'text': 'str',
        'pros': 'str',
        'cons': 'str',
        'product_valuation': 'int',
        'created_date': 'datetime',
        'answer': 'object',
        'state': 'str',
        'product_details': 'object',
        'photo_links': 'list[object]',
        'video': 'object',
        'was_viewed': 'bool',
        'user_name': 'str',
        'matching_size': 'str',
        'is_able_supplier_feedback_valuation': 'bool',
        'supplier_feedback_valuation': 'int',
        'is_able_supplier_product_valuation': 'bool',
        'supplier_product_valuation': 'int',
        'is_able_return_product_orders': 'bool',
        'return_product_orders_date': 'str',
        'bables': 'list[str]',
        'last_order_shk_id': 'int',
        'last_order_created_at': 'str',
        'color': 'str',
        'subject_id': 'int',
        'subject_name': 'str',
        'parent_feedback_id': 'str',
        'child_feedback_id': 'str'
    }

    attribute_map = {
        'id': 'id',
        'text': 'text',
        'pros': 'pros',
        'cons': 'cons',
        'product_valuation': 'productValuation',
        'created_date': 'createdDate',
        'answer': 'answer',
        'state': 'state',
        'product_details': 'productDetails',
        'photo_links': 'photoLinks',
        'video': 'video',
        'was_viewed': 'wasViewed',
        'user_name': 'userName',
        'matching_size': 'matchingSize',
        'is_able_supplier_feedback_valuation': 'isAbleSupplierFeedbackValuation',
        'supplier_feedback_valuation': 'supplierFeedbackValuation',
        'is_able_supplier_product_valuation': 'isAbleSupplierProductValuation',
        'supplier_product_valuation': 'supplierProductValuation',
        'is_able_return_product_orders': 'isAbleReturnProductOrders',
        'return_product_orders_date': 'returnProductOrdersDate',
        'bables': 'bables',
        'last_order_shk_id': 'lastOrderShkId',
        'last_order_created_at': 'lastOrderCreatedAt',
        'color': 'color',
        'subject_id': 'subjectId',
        'subject_name': 'subjectName',
        'parent_feedback_id': 'parentFeedbackId',
        'child_feedback_id': 'childFeedbackId'
    }

    def __init__(self, id=None, text=None, pros=None, cons=None, product_valuation=None, created_date=None, answer=None, state=None, product_details=None, photo_links=None, video=None, was_viewed=None, user_name=None, matching_size=None, is_able_supplier_feedback_valuation=None, supplier_feedback_valuation=None, is_able_supplier_product_valuation=None, supplier_product_valuation=None, is_able_return_product_orders=None, return_product_orders_date=None, bables=None, last_order_shk_id=None, last_order_created_at=None, color=None, subject_id=None, subject_name=None, parent_feedback_id=None, child_feedback_id=None):  # noqa: E501
        """ResponseFeedbackInner - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._text = None
        self._pros = None
        self._cons = None
        self._product_valuation = None
        self._created_date = None
        self._answer = None
        self._state = None
        self._product_details = None
        self._photo_links = None
        self._video = None
        self._was_viewed = None
        self._user_name = None
        self._matching_size = None
        self._is_able_supplier_feedback_valuation = None
        self._supplier_feedback_valuation = None
        self._is_able_supplier_product_valuation = None
        self._supplier_product_valuation = None
        self._is_able_return_product_orders = None
        self._return_product_orders_date = None
        self._bables = None
        self._last_order_shk_id = None
        self._last_order_created_at = None
        self._color = None
        self._subject_id = None
        self._subject_name = None
        self._parent_feedback_id = None
        self._child_feedback_id = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if text is not None:
            self.text = text
        if pros is not None:
            self.pros = pros
        if cons is not None:
            self.cons = cons
        if product_valuation is not None:
            self.product_valuation = product_valuation
        if created_date is not None:
            self.created_date = created_date
        if answer is not None:
            self.answer = answer
        if state is not None:
            self.state = state
        if product_details is not None:
            self.product_details = product_details
        if photo_links is not None:
            self.photo_links = photo_links
        if video is not None:
            self.video = video
        if was_viewed is not None:
            self.was_viewed = was_viewed
        if user_name is not None:
            self.user_name = user_name
        if matching_size is not None:
            self.matching_size = matching_size
        if is_able_supplier_feedback_valuation is not None:
            self.is_able_supplier_feedback_valuation = is_able_supplier_feedback_valuation
        if supplier_feedback_valuation is not None:
            self.supplier_feedback_valuation = supplier_feedback_valuation
        if is_able_supplier_product_valuation is not None:
            self.is_able_supplier_product_valuation = is_able_supplier_product_valuation
        if supplier_product_valuation is not None:
            self.supplier_product_valuation = supplier_product_valuation
        if is_able_return_product_orders is not None:
            self.is_able_return_product_orders = is_able_return_product_orders
        if return_product_orders_date is not None:
            self.return_product_orders_date = return_product_orders_date
        if bables is not None:
            self.bables = bables
        if last_order_shk_id is not None:
            self.last_order_shk_id = last_order_shk_id
        if last_order_created_at is not None:
            self.last_order_created_at = last_order_created_at
        if color is not None:
            self.color = color
        if subject_id is not None:
            self.subject_id = subject_id
        if subject_name is not None:
            self.subject_name = subject_name
        if parent_feedback_id is not None:
            self.parent_feedback_id = parent_feedback_id
        if child_feedback_id is not None:
            self.child_feedback_id = child_feedback_id

    @property
    def id(self):
        """Gets the id of this ResponseFeedbackInner.  # noqa: E501

        ID otzyva  # noqa: E501

        :return: The id of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ResponseFeedbackInner.

        ID otzyva  # noqa: E501

        :param id: The id of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def text(self):
        """Gets the text of this ResponseFeedbackInner.  # noqa: E501

        Tekst otzyva  # noqa: E501

        :return: The text of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ResponseFeedbackInner.

        Tekst otzyva  # noqa: E501

        :param text: The text of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._text = text

    @property
    def pros(self):
        """Gets the pros of this ResponseFeedbackInner.  # noqa: E501

        Dostoinstva tovara  # noqa: E501

        :return: The pros of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._pros

    @pros.setter
    def pros(self, pros):
        """Sets the pros of this ResponseFeedbackInner.

        Dostoinstva tovara  # noqa: E501

        :param pros: The pros of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._pros = pros

    @property
    def cons(self):
        """Gets the cons of this ResponseFeedbackInner.  # noqa: E501

        Nedostatki tovara  # noqa: E501

        :return: The cons of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._cons

    @cons.setter
    def cons(self, cons):
        """Sets the cons of this ResponseFeedbackInner.

        Nedostatki tovara  # noqa: E501

        :param cons: The cons of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._cons = cons

    @property
    def product_valuation(self):
        """Gets the product_valuation of this ResponseFeedbackInner.  # noqa: E501

        Ocenka tovara  # noqa: E501

        :return: The product_valuation of this ResponseFeedbackInner.  # noqa: E501
        :rtype: int
        """
        return self._product_valuation

    @product_valuation.setter
    def product_valuation(self, product_valuation):
        """Sets the product_valuation of this ResponseFeedbackInner.

        Ocenka tovara  # noqa: E501

        :param product_valuation: The product_valuation of this ResponseFeedbackInner.  # noqa: E501
        :type: int
        """

        self._product_valuation = product_valuation

    @property
    def created_date(self):
        """Gets the created_date of this ResponseFeedbackInner.  # noqa: E501

        Data i vrema sozdania otzyva  # noqa: E501

        :return: The created_date of this ResponseFeedbackInner.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ResponseFeedbackInner.

        Data i vrema sozdania otzyva  # noqa: E501

        :param created_date: The created_date of this ResponseFeedbackInner.  # noqa: E501
        :type: datetime
        """

        self._created_date = created_date

    @property
    def answer(self):
        """Gets the answer of this ResponseFeedbackInner.  # noqa: E501

        Struktura otveta  # noqa: E501

        :return: The answer of this ResponseFeedbackInner.  # noqa: E501
        :rtype: object
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this ResponseFeedbackInner.

        Struktura otveta  # noqa: E501

        :param answer: The answer of this ResponseFeedbackInner.  # noqa: E501
        :type: object
        """

        self._answer = answer

    @property
    def state(self):
        """Gets the state of this ResponseFeedbackInner.  # noqa: E501

        Status otzyva:   - `none` - ne obrabotan (novyi)   - `wbRu` - obrabotan   # noqa: E501

        :return: The state of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ResponseFeedbackInner.

        Status otzyva:   - `none` - ne obrabotan (novyi)   - `wbRu` - obrabotan   # noqa: E501

        :param state: The state of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def product_details(self):
        """Gets the product_details of this ResponseFeedbackInner.  # noqa: E501

        Struktura tovara  # noqa: E501

        :return: The product_details of this ResponseFeedbackInner.  # noqa: E501
        :rtype: object
        """
        return self._product_details

    @product_details.setter
    def product_details(self, product_details):
        """Sets the product_details of this ResponseFeedbackInner.

        Struktura tovara  # noqa: E501

        :param product_details: The product_details of this ResponseFeedbackInner.  # noqa: E501
        :type: object
        """

        self._product_details = product_details

    @property
    def photo_links(self):
        """Gets the photo_links of this ResponseFeedbackInner.  # noqa: E501

        Massiv struktur fotografii  # noqa: E501

        :return: The photo_links of this ResponseFeedbackInner.  # noqa: E501
        :rtype: list[object]
        """
        return self._photo_links

    @photo_links.setter
    def photo_links(self, photo_links):
        """Sets the photo_links of this ResponseFeedbackInner.

        Massiv struktur fotografii  # noqa: E501

        :param photo_links: The photo_links of this ResponseFeedbackInner.  # noqa: E501
        :type: list[object]
        """

        self._photo_links = photo_links

    @property
    def video(self):
        """Gets the video of this ResponseFeedbackInner.  # noqa: E501

        Struktura video  # noqa: E501

        :return: The video of this ResponseFeedbackInner.  # noqa: E501
        :rtype: object
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this ResponseFeedbackInner.

        Struktura video  # noqa: E501

        :param video: The video of this ResponseFeedbackInner.  # noqa: E501
        :type: object
        """

        self._video = video

    @property
    def was_viewed(self):
        """Gets the was_viewed of this ResponseFeedbackInner.  # noqa: E501

        Prosmotren li otzyv  # noqa: E501

        :return: The was_viewed of this ResponseFeedbackInner.  # noqa: E501
        :rtype: bool
        """
        return self._was_viewed

    @was_viewed.setter
    def was_viewed(self, was_viewed):
        """Sets the was_viewed of this ResponseFeedbackInner.

        Prosmotren li otzyv  # noqa: E501

        :param was_viewed: The was_viewed of this ResponseFeedbackInner.  # noqa: E501
        :type: bool
        """

        self._was_viewed = was_viewed

    @property
    def user_name(self):
        """Gets the user_name of this ResponseFeedbackInner.  # noqa: E501

        Ima avtora otzyva  # noqa: E501

        :return: The user_name of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this ResponseFeedbackInner.

        Ima avtora otzyva  # noqa: E501

        :param user_name: The user_name of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def matching_size(self):
        """Gets the matching_size of this ResponseFeedbackInner.  # noqa: E501

        Sootvetstvie zaavlennogo razmera realnomu. <br>Vozmohnye znahenia: - ` ` - dla bezrazmernyh tovarov - `ok` - sootvetstvuet razmeru - `smaller` - malomerit - `bigger` - bolhemerit    # noqa: E501

        :return: The matching_size of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._matching_size

    @matching_size.setter
    def matching_size(self, matching_size):
        """Sets the matching_size of this ResponseFeedbackInner.

        Sootvetstvie zaavlennogo razmera realnomu. <br>Vozmohnye znahenia: - ` ` - dla bezrazmernyh tovarov - `ok` - sootvetstvuet razmeru - `smaller` - malomerit - `bigger` - bolhemerit    # noqa: E501

        :param matching_size: The matching_size of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._matching_size = matching_size

    @property
    def is_able_supplier_feedback_valuation(self):
        """Gets the is_able_supplier_feedback_valuation of this ResponseFeedbackInner.  # noqa: E501

        Dostupna li prodavcu vozmohnost ostavit halobu na otzyv (`true` - dostupna, `false` - ne dostupna)  # noqa: E501

        :return: The is_able_supplier_feedback_valuation of this ResponseFeedbackInner.  # noqa: E501
        :rtype: bool
        """
        return self._is_able_supplier_feedback_valuation

    @is_able_supplier_feedback_valuation.setter
    def is_able_supplier_feedback_valuation(self, is_able_supplier_feedback_valuation):
        """Sets the is_able_supplier_feedback_valuation of this ResponseFeedbackInner.

        Dostupna li prodavcu vozmohnost ostavit halobu na otzyv (`true` - dostupna, `false` - ne dostupna)  # noqa: E501

        :param is_able_supplier_feedback_valuation: The is_able_supplier_feedback_valuation of this ResponseFeedbackInner.  # noqa: E501
        :type: bool
        """

        self._is_able_supplier_feedback_valuation = is_able_supplier_feedback_valuation

    @property
    def supplier_feedback_valuation(self):
        """Gets the supplier_feedback_valuation of this ResponseFeedbackInner.  # noqa: E501

        Kluh prihiny haloby na otzyv  <br>  (Znahenia sm. v <b>primery otveta</b> metoda poluhenia <a href=\"./user-communication#tag/Otzyvy/paths/~1api~1v1~1supplier-valuations/get\"> spiskov prihin halob i problem s tovarom</a>, pole <code>feedbackValuations</code> )   # noqa: E501

        :return: The supplier_feedback_valuation of this ResponseFeedbackInner.  # noqa: E501
        :rtype: int
        """
        return self._supplier_feedback_valuation

    @supplier_feedback_valuation.setter
    def supplier_feedback_valuation(self, supplier_feedback_valuation):
        """Sets the supplier_feedback_valuation of this ResponseFeedbackInner.

        Kluh prihiny haloby na otzyv  <br>  (Znahenia sm. v <b>primery otveta</b> metoda poluhenia <a href=\"./user-communication#tag/Otzyvy/paths/~1api~1v1~1supplier-valuations/get\"> spiskov prihin halob i problem s tovarom</a>, pole <code>feedbackValuations</code> )   # noqa: E501

        :param supplier_feedback_valuation: The supplier_feedback_valuation of this ResponseFeedbackInner.  # noqa: E501
        :type: int
        """

        self._supplier_feedback_valuation = supplier_feedback_valuation

    @property
    def is_able_supplier_product_valuation(self):
        """Gets the is_able_supplier_product_valuation of this ResponseFeedbackInner.  # noqa: E501

        Dostupna li prodavcu vozmohnost soobhit o probleme s tovarom  (`true` - dostupna, `false` - ne dostupna)  # noqa: E501

        :return: The is_able_supplier_product_valuation of this ResponseFeedbackInner.  # noqa: E501
        :rtype: bool
        """
        return self._is_able_supplier_product_valuation

    @is_able_supplier_product_valuation.setter
    def is_able_supplier_product_valuation(self, is_able_supplier_product_valuation):
        """Sets the is_able_supplier_product_valuation of this ResponseFeedbackInner.

        Dostupna li prodavcu vozmohnost soobhit o probleme s tovarom  (`true` - dostupna, `false` - ne dostupna)  # noqa: E501

        :param is_able_supplier_product_valuation: The is_able_supplier_product_valuation of this ResponseFeedbackInner.  # noqa: E501
        :type: bool
        """

        self._is_able_supplier_product_valuation = is_able_supplier_product_valuation

    @property
    def supplier_product_valuation(self):
        """Gets the supplier_product_valuation of this ResponseFeedbackInner.  # noqa: E501

        Kluh problemy s tovarom  <br>  (Znahenia sm. v <b>primery otveta</b> metoda poluhenia <a href=\"./user-communication#tag/Otzyvy/paths/~1api~1v1~1supplier-valuations/get\"> spiskov prihin halob i problem s tovarom</a>, pole <code>supplierProductValuation</code> )   # noqa: E501

        :return: The supplier_product_valuation of this ResponseFeedbackInner.  # noqa: E501
        :rtype: int
        """
        return self._supplier_product_valuation

    @supplier_product_valuation.setter
    def supplier_product_valuation(self, supplier_product_valuation):
        """Sets the supplier_product_valuation of this ResponseFeedbackInner.

        Kluh problemy s tovarom  <br>  (Znahenia sm. v <b>primery otveta</b> metoda poluhenia <a href=\"./user-communication#tag/Otzyvy/paths/~1api~1v1~1supplier-valuations/get\"> spiskov prihin halob i problem s tovarom</a>, pole <code>supplierProductValuation</code> )   # noqa: E501

        :param supplier_product_valuation: The supplier_product_valuation of this ResponseFeedbackInner.  # noqa: E501
        :type: int
        """

        self._supplier_product_valuation = supplier_product_valuation

    @property
    def is_able_return_product_orders(self):
        """Gets the is_able_return_product_orders of this ResponseFeedbackInner.  # noqa: E501

        Dostupna li tovaru opcia vozvrata (`false` - net, `true` - da)  # noqa: E501

        :return: The is_able_return_product_orders of this ResponseFeedbackInner.  # noqa: E501
        :rtype: bool
        """
        return self._is_able_return_product_orders

    @is_able_return_product_orders.setter
    def is_able_return_product_orders(self, is_able_return_product_orders):
        """Sets the is_able_return_product_orders of this ResponseFeedbackInner.

        Dostupna li tovaru opcia vozvrata (`false` - net, `true` - da)  # noqa: E501

        :param is_able_return_product_orders: The is_able_return_product_orders of this ResponseFeedbackInner.  # noqa: E501
        :type: bool
        """

        self._is_able_return_product_orders = is_able_return_product_orders

    @property
    def return_product_orders_date(self):
        """Gets the return_product_orders_date of this ResponseFeedbackInner.  # noqa: E501

        Data i vrema, kogda na zapros vozvrata byl poluhen otvet so status-kodom 200.  # noqa: E501

        :return: The return_product_orders_date of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._return_product_orders_date

    @return_product_orders_date.setter
    def return_product_orders_date(self, return_product_orders_date):
        """Sets the return_product_orders_date of this ResponseFeedbackInner.

        Data i vrema, kogda na zapros vozvrata byl poluhen otvet so status-kodom 200.  # noqa: E501

        :param return_product_orders_date: The return_product_orders_date of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._return_product_orders_date = return_product_orders_date

    @property
    def bables(self):
        """Gets the bables of this ResponseFeedbackInner.  # noqa: E501

        Spisok tegov pokupatela  # noqa: E501

        :return: The bables of this ResponseFeedbackInner.  # noqa: E501
        :rtype: list[str]
        """
        return self._bables

    @bables.setter
    def bables(self, bables):
        """Sets the bables of this ResponseFeedbackInner.

        Spisok tegov pokupatela  # noqa: E501

        :param bables: The bables of this ResponseFeedbackInner.  # noqa: E501
        :type: list[str]
        """

        self._bables = bables

    @property
    def last_order_shk_id(self):
        """Gets the last_order_shk_id of this ResponseFeedbackInner.  # noqa: E501

        htrihkod edinicy tovara  # noqa: E501

        :return: The last_order_shk_id of this ResponseFeedbackInner.  # noqa: E501
        :rtype: int
        """
        return self._last_order_shk_id

    @last_order_shk_id.setter
    def last_order_shk_id(self, last_order_shk_id):
        """Sets the last_order_shk_id of this ResponseFeedbackInner.

        htrihkod edinicy tovara  # noqa: E501

        :param last_order_shk_id: The last_order_shk_id of this ResponseFeedbackInner.  # noqa: E501
        :type: int
        """

        self._last_order_shk_id = last_order_shk_id

    @property
    def last_order_created_at(self):
        """Gets the last_order_created_at of this ResponseFeedbackInner.  # noqa: E501

        Data pokupki  # noqa: E501

        :return: The last_order_created_at of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._last_order_created_at

    @last_order_created_at.setter
    def last_order_created_at(self, last_order_created_at):
        """Sets the last_order_created_at of this ResponseFeedbackInner.

        Data pokupki  # noqa: E501

        :param last_order_created_at: The last_order_created_at of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._last_order_created_at = last_order_created_at

    @property
    def color(self):
        """Gets the color of this ResponseFeedbackInner.  # noqa: E501

        cvet tovara  # noqa: E501

        :return: The color of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this ResponseFeedbackInner.

        cvet tovara  # noqa: E501

        :param color: The color of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._color = color

    @property
    def subject_id(self):
        """Gets the subject_id of this ResponseFeedbackInner.  # noqa: E501

        ID predmeta  # noqa: E501

        :return: The subject_id of this ResponseFeedbackInner.  # noqa: E501
        :rtype: int
        """
        return self._subject_id

    @subject_id.setter
    def subject_id(self, subject_id):
        """Sets the subject_id of this ResponseFeedbackInner.

        ID predmeta  # noqa: E501

        :param subject_id: The subject_id of this ResponseFeedbackInner.  # noqa: E501
        :type: int
        """

        self._subject_id = subject_id

    @property
    def subject_name(self):
        """Gets the subject_name of this ResponseFeedbackInner.  # noqa: E501

        Nazvanie predmeta  # noqa: E501

        :return: The subject_name of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._subject_name

    @subject_name.setter
    def subject_name(self, subject_name):
        """Sets the subject_name of this ResponseFeedbackInner.

        Nazvanie predmeta  # noqa: E501

        :param subject_name: The subject_name of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._subject_name = subject_name

    @property
    def parent_feedback_id(self):
        """Gets the parent_feedback_id of this ResponseFeedbackInner.  # noqa: E501

        ID nahalnogo otzyva (`null`, esli etot otzyv nahalnyi)  # noqa: E501

        :return: The parent_feedback_id of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._parent_feedback_id

    @parent_feedback_id.setter
    def parent_feedback_id(self, parent_feedback_id):
        """Sets the parent_feedback_id of this ResponseFeedbackInner.

        ID nahalnogo otzyva (`null`, esli etot otzyv nahalnyi)  # noqa: E501

        :param parent_feedback_id: The parent_feedback_id of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._parent_feedback_id = parent_feedback_id

    @property
    def child_feedback_id(self):
        """Gets the child_feedback_id of this ResponseFeedbackInner.  # noqa: E501

        ID dopolnennogo otzyva (`null`, esli etot otzyv dopolnennyi)  # noqa: E501

        :return: The child_feedback_id of this ResponseFeedbackInner.  # noqa: E501
        :rtype: str
        """
        return self._child_feedback_id

    @child_feedback_id.setter
    def child_feedback_id(self, child_feedback_id):
        """Sets the child_feedback_id of this ResponseFeedbackInner.

        ID dopolnennogo otzyva (`null`, esli etot otzyv dopolnennyi)  # noqa: E501

        :param child_feedback_id: The child_feedback_id of this ResponseFeedbackInner.  # noqa: E501
        :type: str
        """

        self._child_feedback_id = child_feedback_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ResponseFeedbackInner, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResponseFeedbackInner):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
