"""
This type stub file was generated by pyright.
"""

import pyarrow as pa
from typing import List, TYPE_CHECKING, Union
from .base import Reranker
from ..table import LanceVectorQueryBuilder

if TYPE_CHECKING:
    ...
class RRFReranker(Reranker):
    """
    Reranks the results using Reciprocal Rank Fusion(RRF) algorithm based
    on the scores of vector and FTS search.
    Parameters
    ----------
    K : int, default 60
        A constant used in the RRF formula (default is 60). Experiments
        indicate that k = 60 was near-optimal, but that the choice is
        not critical. See paper:
        https://plg.uwaterloo.ca/~gvcormac/cormacksigir09-rrf.pdf
    return_score : str, default "relevance"
        opntions are "relevance" or "all"
        The type of score to return. If "relevance", will return only the relevance
        score. If "all", will return all scores from the vector and FTS search along
        with the relevance score.
    """
    def __init__(self, K: int = ..., return_score=...) -> None:
        ...
    
    def rerank_hybrid(self, query: str, vector_results: pa.Table, fts_results: pa.Table):
        ...
    
    def rerank_multivector(self, vector_results: Union[List[pa.Table], List[LanceVectorQueryBuilder]], query: str = ..., deduplicate: bool = ...):
        """
        Overridden method to rerank the results from multiple vector searches.
        This leverages the RRF hybrid reranking algorithm to combine the
        results from multiple vector searches as it doesn't support reranking
        vector results individually.
        """
        ...
    


