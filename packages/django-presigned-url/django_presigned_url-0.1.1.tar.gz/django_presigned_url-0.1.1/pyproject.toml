[tool.poetry]
name = "django-presigned-url"
version = "0.1.1"
description = "Generate presigned urls for django"
homepage = "https://github.com/projectcaluma/django-presigned-url"
repository = "https://github.com/projectcaluma/django-presigned-url"
documentation = "https://github.com/projectcaluma/django-presigned-url/README.md"
authors = ["Adfinis <info@adfinis.com>"]
readme = "README.md"
license = "GPL-3.0-or-later"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
include = ["CHANGELOG.md"]
exclude = ["**/tests"]

[tool.poetry.dependencies]
python = ">=3.10,<4"
django = ">=4.2"

[tool.poetry.group.dev.dependencies]
ruff = "0.11.8"
mypy = "1.10.1"
django-stubs = { extras = ["compatible-mypy"], version = "5.0.2" }
freezegun = "1.5.1"
pytest = "8.3.5"
python-semantic-release = "^9.8.5"

[tool.ruff]
exclude = ["migrations", "snapshots", ".venv"]
line-length = 88

[tool.ruff.lint]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D202",
    "E501",
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D407", # Missing dashed underline after section
    "D406", # Section name should end with a newline
    "D203", # one-blank-line-before-class (docstring)
]
select = ["C9", "D", "E", "F", "W", "I"]

[tool.ruff.lint.mccabe]
max-complexity = 11

[tool.ruff.lint.isort]
combine-as-imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:tool.poetry.version",
]
build_command = "poetry build"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
exclude_commit_patterns = []

[tool.semantic_release.default_templates]
changelog_file = "CHANGELOG.md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

