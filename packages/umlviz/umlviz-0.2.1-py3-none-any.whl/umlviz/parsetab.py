
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLOSE_CURLY COLON ENUM METHOD NEWLINE OBJECT OPEN_CURLY WORDmodel : type\n| model type\n| model NEWLINEtype : objectobject : OBJECT WORD OPEN_CURLY NEWLINE members NEWLINE CLOSE_CURLYmembers : member\n| members NEWLINE membermember : variable\n| methodvariable : WORD WORDmethod : METHOD'
    
_lr_action_items = {'OBJECT':([0,1,2,3,5,6,18,],[4,4,-1,-4,-2,-3,-5,]),'$end':([1,2,3,5,6,18,],[0,-1,-4,-2,-3,-5,]),'NEWLINE':([1,2,3,5,6,8,11,12,13,14,15,16,18,19,],[6,-1,-4,-2,-3,9,17,-6,-8,-9,-11,-10,-5,-7,]),'WORD':([4,9,10,17,],[7,10,16,10,]),'OPEN_CURLY':([7,],[8,]),'METHOD':([9,17,],[15,15,]),'CLOSE_CURLY':([17,],[18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'model':([0,],[1,]),'type':([0,1,],[2,5,]),'object':([0,1,],[3,3,]),'members':([9,],[11,]),'member':([9,17,],[12,19,]),'variable':([9,17,],[13,13,]),'method':([9,17,],[14,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> model","S'",1,None,None,None),
  ('model -> type','model',1,'p_model','parser.py',7),
  ('model -> model type','model',2,'p_model','parser.py',8),
  ('model -> model NEWLINE','model',2,'p_model','parser.py',9),
  ('type -> object','type',1,'p_type_object','parser.py',20),
  ('object -> OBJECT WORD OPEN_CURLY NEWLINE members NEWLINE CLOSE_CURLY','object',7,'p_object','parser.py',24),
  ('members -> member','members',1,'p_members','parser.py',31),
  ('members -> members NEWLINE member','members',3,'p_members','parser.py',32),
  ('member -> variable','member',1,'p_member','parser.py',40),
  ('member -> method','member',1,'p_member','parser.py',41),
  ('variable -> WORD WORD','variable',2,'p_variable','parser.py',45),
  ('method -> METHOD','method',1,'p_method','parser.py',53),
]
