from typing import Optional, Union

# z3scn.pyi - Type stubs for z3scn extension lite version

# Initialization
@overload
def init(com: int) -> bool: ...
@overload
def init(com: int, id: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int, accel: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int, accel: int, gain: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int, accel: int, gain: int, normalSpd: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int, accel: int, gain: int, normalSpd: int, homeSpd: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int, accel: int, gain: int, normalSpd: int, homeSpd: int, moveMode: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int, accel: int, gain: int, normalSpd: int, homeSpd: int, moveMode: int, gohome: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int, accel: int, gain: int, normalSpd: int, homeSpd: int, moveMode: int, gohome: int, gocenter: int) -> bool: ...
@overload
def init(com: int, id: int, stroke: int, accel: int, gain: int, normalSpd: int, homeSpd: int, moveMode: int, gohome: int, gocenter: int, diag: int) -> bool: ...

def init(*args: int) -> bool:
    """
    Initialize the SCN device.

    Parameters:
        com (int): Required. COM port number (e.g., 3 for COM4)
        id (int): Optional. Device ID [0â€“15] Default 0
        stroke (int): Optional. Stroke length (e.g., 100, 150, 200)
        accel (int): Optional. Acceleration value Default 200
        gain (int): Optional. Control gain Default 6
        normalSpd (int): Optional. Normal movement speed Default 7800
        homeSpd (int): Optional. Speed for homing, not modifiable, use TBVST or CAT app
        moveMode (int): Optional. Movement mode
        gohome (int): Optional. If non-zero, go home on init
        gocenter (int): Optional. If non-zero, go center after home
		diag (int): Optinal. If non-zero, print the scn eeprom bank1 and bank0
		
    Returns:
        bool: True if initialization succeeded, False otherwise
    """
    ...
def terminate() -> None: ...    

# Device Information
def get_device_info(selector: str) -> dict: ...    

# Device Motion Control
def go_home() -> bool: ...
def go_center() -> bool: ...
def go_position(pos: float) -> bool: ...
def load_position(pos: float) -> bool: ...
def check_scn() -> bool: ...
def submit_check() -> bool: ...    
def submit() -> bool: ...

def set_speed(speed: int) -> bool: ...
def set_accel(accel: int) -> bool: ...
def set_speed_accel(speed: int, accel: int) -> bool: ...
def set_default_speed() -> bool: ...
