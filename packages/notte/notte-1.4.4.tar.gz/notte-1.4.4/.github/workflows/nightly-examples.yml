name: nightly-examples

on:
  schedule:
    - cron: '0 6 * * *'  # Run at 6 AM every day
  workflow_dispatch:  # Allow manual triggering

env:
  CACHE_TYPE: "pip"
  NOTTE_API_KEY: ${{ secrets.NOTTE_API_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  NOTTE_VAULT_ID: ${{ secrets.NOTTE_VAULT_ID }}
  NOTTE_GITHUB_COM_EMAIL: ${{ secrets.NOTTE_GITHUB_COM_EMAIL }}
  NOTTE_GITHUB_COM_PASSWORD: ${{ secrets.NOTTE_GITHUB_COM_PASSWORD }}
  NOTTE_GITHUB_COM_MFA_SECRET: ${{ secrets.NOTTE_GITHUB_COM_MFA_SECRET }}
  STEEL_API_KEY: ${{ secrets.STEEL_API_KEY }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  example-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
            enable-cache: true
            cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
          cache: ${{ env.CACHE_TYPE }}

      - name: Install dependencies
        run: uv sync --dev --all-extras

      - name: Install patchright
        run: |
          echo "Cache miss - installing patchright"
          uv run patchright install --with-deps chromium

      - name: Verify environment variables
        run: |
          if [ -z "$NOTTE_API_KEY" ]; then
            echo "NOTTE_API_KEY is not set"
            exit 1
          fi
          if [ -z "$GEMINI_API_KEY" ]; then
            echo "GEMINI_API_KEY is not set"
            exit 1
          fi
          echo "Environment variables are set"

      - name: Run example tests
        uses: coactions/setup-xvfb@v1
        with:
            run: uv run pytest tests/examples --durations=10

      - name: Send Slack Notification if failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "username": "GitHub Nightly Pipeline (${{ steps.timestamp.outputs.timestamp }})",
              "text": "Failed to run examples (cf url (https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}))"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
