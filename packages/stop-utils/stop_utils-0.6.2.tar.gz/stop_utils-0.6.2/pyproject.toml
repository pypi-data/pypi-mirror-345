[tool.poetry]
name = "stop-utils"
version = "0.6.2"
description = "Utilities for analyzing wavefront error data"
authors = ["Andrea Bocchieri <andrea.bocchieri@uniroma1.it>"]
readme = "README.md"
license = "BSD 3-Clause"
packages = [{include = "stop_utils"}]
homepage = "https://github.com/arielmission-space/stop-utils"
repository = "https://github.com/arielmission-space/stop-utils"
documentation = "https://stop-utils.readthedocs.io"
keywords = ["optics", "wavefront", "analysis", "polynomials", "paos", "zernike", "Ariel"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
numpy = "^1.24.0"
matplotlib = "^3.7.0"
scikit-image = "^0.25.0"
photutils = "^1.7.0"
paos = "^1.2.8"
typer = "^0.9.0"
rich = "^14.0.0"
loguru = "^0.7.2"
pythonnet = "^3.0.5"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
mypy = "^1.6.0"
types-setuptools = "^69.0.0"
isort = "^5.12.0"

[tool.poetry.group.docs.dependencies]
sphinx = ">=4.0"
sphinx-rtd-theme = ">=1.0"
sphinx-autodoc-typehints = ">=1.12" # Added version constraint
myst-parser = ">=0.15"
sphinxcontrib-mermaid = ">=1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
stop-utils = "stop_utils.cli:main"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["photutils.*", "paos.*", "skimage.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v -ra --strict-markers"

[tool.black]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/tests/data/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip = ["tests/data"]