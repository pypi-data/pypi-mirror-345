# coding: utf-8

"""
    Zakazy DBS

    <div class=\"description_important\">       Uznat bolhe o zakazah DBS mohno v <a href=\"https://seller.wildberries.ru/instructions/category/6572e024-7428-4db1-86a8-a4c7dbebbfcf?goBackOption=prevRoute&categoryId=5a8e1202-0865-45b7-acae-5d0afc7add56\">spravohnom centre</a> </div>  Upravlenie [sborohnymi zadaniami](/openapi/orders-dbs#tag/Sborochnye-zadaniya-DBS) i [metadannymi](/openapi/orders-dbs#tag/Metadannye-DBS) zakazov DBS (Delivery by Seller).   # noqa: E501

    OpenAPI spec version: order
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DbsOnlyClientInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'first_name': 'str',
        'full_name': 'str',
        'order_id': 'int',
        'phone': 'str',
        'phone_code': 'str',
        'additional_phone_codes': 'str'
    }

    attribute_map = {
        'first_name': 'firstName',
        'full_name': 'fullName',
        'order_id': 'orderID',
        'phone': 'phone',
        'phone_code': 'phoneCode',
        'additional_phone_codes': 'additionalPhoneCodes'
    }

    def __init__(self, first_name=None, full_name=None, order_id=None, phone=None, phone_code=None, additional_phone_codes=None):  # noqa: E501
        """DbsOnlyClientInfo - a model defined in Swagger"""  # noqa: E501
        self._first_name = None
        self._full_name = None
        self._order_id = None
        self._phone = None
        self._phone_code = None
        self._additional_phone_codes = None
        self.discriminator = None
        if first_name is not None:
            self.first_name = first_name
        if full_name is not None:
            self.full_name = full_name
        if order_id is not None:
            self.order_id = order_id
        if phone is not None:
            self.phone = phone
        if phone_code is not None:
            self.phone_code = phone_code
        if additional_phone_codes is not None:
            self.additional_phone_codes = additional_phone_codes

    @property
    def first_name(self):
        """Gets the first_name of this DbsOnlyClientInfo.  # noqa: E501

        Ima pokupatela  # noqa: E501

        :return: The first_name of this DbsOnlyClientInfo.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this DbsOnlyClientInfo.

        Ima pokupatela  # noqa: E501

        :param first_name: The first_name of this DbsOnlyClientInfo.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def full_name(self):
        """Gets the full_name of this DbsOnlyClientInfo.  # noqa: E501

        Polnoe ima, ispolzuetsa dla oformlenia dokumentov. Naprimer, dokumenty dla avtomobila.  # noqa: E501

        :return: The full_name of this DbsOnlyClientInfo.  # noqa: E501
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this DbsOnlyClientInfo.

        Polnoe ima, ispolzuetsa dla oformlenia dokumentov. Naprimer, dokumenty dla avtomobila.  # noqa: E501

        :param full_name: The full_name of this DbsOnlyClientInfo.  # noqa: E501
        :type: str
        """

        self._full_name = full_name

    @property
    def order_id(self):
        """Gets the order_id of this DbsOnlyClientInfo.  # noqa: E501

        Nomer zakaza  # noqa: E501

        :return: The order_id of this DbsOnlyClientInfo.  # noqa: E501
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this DbsOnlyClientInfo.

        Nomer zakaza  # noqa: E501

        :param order_id: The order_id of this DbsOnlyClientInfo.  # noqa: E501
        :type: int
        """

        self._order_id = order_id

    @property
    def phone(self):
        """Gets the phone of this DbsOnlyClientInfo.  # noqa: E501

        Telefon dla svazi s pokupatelem. <br> htoby svazatsa s pokupatelem naberite etot nomer i vvedite dobavohnyi kod. <br> Dannyi nomer ne avlaetsa pramym nomerom pokupatela.  # noqa: E501

        :return: The phone of this DbsOnlyClientInfo.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this DbsOnlyClientInfo.

        Telefon dla svazi s pokupatelem. <br> htoby svazatsa s pokupatelem naberite etot nomer i vvedite dobavohnyi kod. <br> Dannyi nomer ne avlaetsa pramym nomerom pokupatela.  # noqa: E501

        :param phone: The phone of this DbsOnlyClientInfo.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def phone_code(self):
        """Gets the phone_code of this DbsOnlyClientInfo.  # noqa: E501

        Dobavohnyi kod  # noqa: E501

        :return: The phone_code of this DbsOnlyClientInfo.  # noqa: E501
        :rtype: str
        """
        return self._phone_code

    @phone_code.setter
    def phone_code(self, phone_code):
        """Sets the phone_code of this DbsOnlyClientInfo.

        Dobavohnyi kod  # noqa: E501

        :param phone_code: The phone_code of this DbsOnlyClientInfo.  # noqa: E501
        :type: str
        """

        self._phone_code = phone_code

    @property
    def additional_phone_codes(self):
        """Gets the additional_phone_codes of this DbsOnlyClientInfo.  # noqa: E501

        Dopolnitelnye dobavohnye kody pokupatela, ispolzovat, esli ne poluhilos dozvonitsa po dobavohnomu kodu iz `phoneCode`  # noqa: E501

        :return: The additional_phone_codes of this DbsOnlyClientInfo.  # noqa: E501
        :rtype: str
        """
        return self._additional_phone_codes

    @additional_phone_codes.setter
    def additional_phone_codes(self, additional_phone_codes):
        """Sets the additional_phone_codes of this DbsOnlyClientInfo.

        Dopolnitelnye dobavohnye kody pokupatela, ispolzovat, esli ne poluhilos dozvonitsa po dobavohnomu kodu iz `phoneCode`  # noqa: E501

        :param additional_phone_codes: The additional_phone_codes of this DbsOnlyClientInfo.  # noqa: E501
        :type: str
        """

        self._additional_phone_codes = additional_phone_codes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DbsOnlyClientInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DbsOnlyClientInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
