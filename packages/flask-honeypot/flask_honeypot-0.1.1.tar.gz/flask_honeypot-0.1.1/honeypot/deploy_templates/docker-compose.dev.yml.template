
# For Development frontend with hot reloading

services:
  frontend-dev:
    image: node:18-alpine
    container_name: honeypot_frontend_dev
    working_dir: /app
    volumes:
      - ./honeypot/frontend:/app:cached
      - node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=3000
      - NODE_ENV=development
      - REACT_APP_API_BASE_URL=http://backend:5000
      - FAST_REFRESH=true
    command: sh -c "npm install && npm start"
    networks:
      - honeypot_network
    depends_on:
      - backend
    stdin_open: true
    tty: true


  nginx-dev:
    image: nginx:alpine
    ports:
      - "8080:80"  # Access via port 8080 when dev
    volumes:
      - ./dev-nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend-dev
      - backend
    networks:
      - honeypot_network


  backend:
    build:
      context: . 
      dockerfile: Dockerfile.backend 
    container_name: honeypot_backend
    volumes:
      - honeypot_data:/app/data
      - honeypot_logs:/app/logs
      - ./honeypot:/app/honeypot:cached
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/honeypot?authSource=admin
      - SECRET_KEY=${SECRET_KEY}
      - HONEYPOT_ADMIN_PASSWORD=${HONEYPOT_ADMIN_PASSWORD}
      - HONEYPOT_DATA_DIRECTORY=/app/data
    networks:
      - honeypot_network
    depends_on:
      - mongodb
      - redis


  redis:
    image: redis:7-alpine 
    container_name: honeypot_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - honeypot_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:6 
    container_name: honeypot_mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - honeypot_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "||", "exit", "0"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

networks:
  honeypot_network:
    driver: bridge

volumes:
  honeypot_data: 
  honeypot_logs: 
  redis_data: 
  mongodb_data:
  node_modules:  
