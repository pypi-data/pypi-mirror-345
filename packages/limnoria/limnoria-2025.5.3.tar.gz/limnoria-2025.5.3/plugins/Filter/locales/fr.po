msgid ""
msgstr ""
"Project-Id-Version: Limnoria\n"
"POT-Creation-Date: 2022-02-06 00:12+0100\n"
"PO-Revision-Date: \n"
"Last-Translator: Valentin Lorentz <progval@gmail.com>\n"
"Language-Team: Limnoria <progval@gmail.com>\n"
"Language: fr_FR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Poedit-Language: Français\n"
"X-Poedit-Country: France\n"
"X-Poedit-SourceCharset: ASCII\n"

#: config.py:39
msgid ""
"Determines whether or not to\n"
"    replace letters in the output of spellit."
msgstr ""
"Détermine si il faut ou non remplacer les lettres dans la sortie de spellit."

#: config.py:42
msgid ""
"Determines whether or not\n"
"    to replace punctuation in the output of spellit."
msgstr ""
"Détermine si il faut replacer la ponctuation dans la sortie de spellit."

#: config.py:45
msgid ""
"Determines whether or not to\n"
"    replace numbers in the output of spellit."
msgstr "Détermine si on doit remplacer les nombres dans la sortie de spellit."

#: config.py:49
msgid ""
"Determines the minimum number of a letters\n"
"    in a word before it will be shrunken by the shrink command/filter."
msgstr ""
"Détermine le nombre minimum de lettre dans un mot pour qu'il soit coupé par "
"la commande/le filtre shrink."

#: plugin.py:55
msgid ""
"This plugin offers several commands which transform text in some way.\n"
"    It also provides the capability of using such commands to 'filter' the\n"
"    output of the bot -- for instance, you could make everything the bot "
"says\n"
"    be in leetspeak, or Morse code, or any number of other kinds of "
"filters.\n"
"    Not very useful, but definitely quite fun :)"
msgstr ""
"Ce plugin offre quelques commandes qui peuvent être utilisées pour "
"transformer du texte de différentes façons. Il fourni également la "
"possiblité d'utiliser ces commandes pour 'filtrer' la sortie du bot ; par "
"exemple, vous pouvez faire en sorte que tout ce que le bot dit le soit en "
"l33tsp34k, en Morse, ou n'importe lequel des autres filtres.    Pas très "
"utile, mais plutôt fun :)"

#: plugin.py:90
msgid ""
"[<channel>] [<command>]\n"
"\n"
"        Sets the outFilter of this plugin to be <command>.  If no command "
"is\n"
"        given, unsets the outFilter.  <channel> is only necessary if the\n"
"        message isn't sent in the channel itself.\n"
"        "
msgstr ""
"[<canal>] [<commande>]\n"
"\n"
"Définit le filtre de sortie de ce plugin pour être <commande>. Si aucune "
"commande n'est définie, supprime le filtre de sortie. <canal> n'est "
"nécessaire que si la commande n'est pas envoyée sur le canal lui-même."

#: plugin.py:103
msgid "That's not a valid filter command."
msgstr "Ce n'est pas une commande de filtre valide"

#: plugin.py:114
msgid ""
"<text>\n"
"\n"
"        Removes all the vowels from <text>.  (If you're curious why this is\n"
"        named 'hebrew' it's because I (jemfinch) thought of it in Hebrew "
"class,\n"
"        and printed Hebrew often elides the vowels.)\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retire toutes les voyelles du <texte> (si vous êtes curieux de pourquoi elle "
"s'appelle 'hebrew', c'est parce que je (jemfinch) pense que que en Hébreux, "
"il manque souvent les voyelles)."

#: plugin.py:128
msgid ""
"<text>\n"
"\n"
"        Removes all the spaces from <text>.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Supprime tous les espaces du <texte>."

#: plugin.py:137
msgid ""
"<text>\n"
"\n"
"        Returns <text>, with all consecutive duplicated letters removed.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Renvoie le texte, avec toutes les lettres consécutives dupliquées supprimées."

#: plugin.py:150
msgid ""
"<text>\n"
"\n"
"        Returns the binary representation of <text>.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne la représentation binaire du <texte>."

#: plugin.py:184
msgid ""
"<text>\n"
"\n"
"        Returns the character representation of binary <text>.\n"
"        Assumes ASCII, 8 digits per character.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le caractère représentant du <texte>. Considère qu'il s'agit "
"d'ASCII, 8 bits par caractère."

#: plugin.py:199
msgid ""
"<text>\n"
"\n"
"        Returns a hexstring from the given string; a hexstring is a string\n"
"        composed of the hexadecimal value of each character in the string\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne une chaîne héxadécimale à partir de la chaîne donnée ; une chaîne "
"héxadécimale est une chaîne composée de la valeur héxadécimale de chaque "
"caractère de la chaîne."

#: plugin.py:210
msgid ""
"<hexstring>\n"
"\n"
"        Returns the string corresponding to <hexstring>.  Obviously,\n"
"        <hexstring> must be a string of hexadecimal digits.\n"
"        "
msgstr ""
"<chaîne hexadécimale>\n"
"\n"
"Retourne la chaîne correspondant à la <chaîne hexadécimale>. Bien sûr, "
"<chaîne hexadécimale> ne doit contenir que des caractères hexadécimaux."

#: plugin.py:219
msgid "Invalid input."
msgstr "Entrée invalide."

#: plugin.py:225
msgid ""
"<text>\n"
"\n"
"        Rotates <text> 13 characters to the right in the alphabet.  Rot13 "
"is\n"
"        commonly used for text that simply needs to be hidden from "
"inadvertent\n"
"        reading by roaming eyes, since it's easily reversible.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Déplace chaque caractère du <texte> de 13 places vers la droite de "
"l'alphabet. Rot13 est courremment utilisé pour les textes qui doivent être "
"cachés des yeux indiscrets, mais être facilement reversible."

#: plugin.py:246
msgid ""
"<text>\n"
"\n"
"        Returns the l33tspeak version of <text>\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne la version l33t du <texte>."

#: plugin.py:266
msgid ""
"<text>\n"
"\n"
"        Replies with an especially k-rad translation of <text>.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Répond avec une traduction k-rad du <texte>."

#: plugin.py:282
msgid ""
"<text>\n"
"\n"
"        Replies with a string where each word is scrambled; i.e., each "
"internal\n"
"        letter (that is, all letters but the first and last) are shuffled.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Répond avec une chaîne où chaque mot est mélangé ; c'est à dire que chaque "
"lettre interne (=toute lettre qui n'est pas la première ni la dernière) est "
"mélangée avec les autres."

#: plugin.py:347
msgid ""
"<Morse code text>\n"
"\n"
"        Does the reverse of the morse command.\n"
"        "
msgstr ""
"<texte en Morse>\n"
"\n"
"Fait l'inverse de la commande morse."

#: plugin.py:364
msgid ""
"<text>\n"
"\n"
"        Gives the Morse code equivalent of a given string.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Donne le code Morse équivalent à la chaîne donnée."

#: plugin.py:376
msgid ""
"<text>\n"
"\n"
"        Reverses <text>.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Inverse le <texte>."

#: plugin.py:394
msgid ""
"<text>\n"
"\n"
"        Returns <text> with each character randomly colorized.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le <texte> avec chaque caractère coloré de façon aléatoire."

#: plugin.py:409
msgid ""
"<text>\n"
"\n"
"        Returns <text> colorized like a rainbow.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le texte colorisé comme un arc-en-ciel."

#: plugin.py:426
#, fuzzy
msgid ""
"<text>\n"
"\n"
"        Strips bold, underline, and colors from <text>."
msgstr ""
"<texte>\n"
"\n"
"Supprime tous les espaces du <texte>."

#: plugin.py:433
msgid ""
"<text>\n"
"\n"
"        Returns <text> stripped of all color codes.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le texte en retirant tous les codes de couleur"

#: plugin.py:442
#, fuzzy
msgid ""
"<text>\n"
"\n"
"        Returns <text> as if an AOL user had said it.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le <texte> comme si un AOLuser l'avait dit."

#: plugin.py:469
msgid ""
"<text>\n"
"\n"
"        Returns <text> as if JeffK had said it himself.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le <texte> comme si JeffK l'avait dit lui-même."

#: plugin.py:565
msgid "ay"
msgstr "ah"

#: plugin.py:565
msgid "bee"
msgstr "bé"

#: plugin.py:565
msgid "dee"
msgstr "dé"

#: plugin.py:565
msgid "see"
msgstr "cé"

#: plugin.py:566
msgid "aych"
msgstr "ache"

#: plugin.py:566
msgid "ee"
msgstr "euh"

#: plugin.py:566
msgid "eff"
msgstr "èf"

#: plugin.py:566
msgid "gee"
msgstr "gé"

#: plugin.py:567
msgid "ell"
msgstr "èl"

#: plugin.py:567
msgid "eye"
msgstr "ih"

#: plugin.py:567
msgid "jay"
msgstr "ji"

#: plugin.py:567
msgid "kay"
msgstr "ka"

#: plugin.py:568
msgid "cue"
msgstr "cu"

#: plugin.py:568
msgid "em"
msgstr "èm"

#: plugin.py:568
msgid "en"
msgstr "èn"

#: plugin.py:568
msgid "oh"
msgstr "oh"

#: plugin.py:568
msgid "pee"
msgstr "pé"

#: plugin.py:569
msgid "arr"
msgstr "ère"

#: plugin.py:569
msgid "ess"
msgstr "èce"

#: plugin.py:569
msgid "tee"
msgstr "té"

#: plugin.py:569
msgid "you"
msgstr "uh"

#: plugin.py:570
msgid "double-you"
msgstr "double-vé"

#: plugin.py:570
msgid "ecks"
msgstr "icks"

#: plugin.py:570
msgid "vee"
msgstr "vé"

#: plugin.py:570
msgid "why"
msgstr "i-grec"

#: plugin.py:571
msgid "zee"
msgstr "zèd"

#: plugin.py:576
msgid "exclamation point"
msgstr "point d'exclamation"

#: plugin.py:577
msgid "quote"
msgstr "guillemet double"

#: plugin.py:578
msgid "pound"
msgstr "livre"

#: plugin.py:579
msgid "dollar sign"
msgstr "signe du dollar"

#: plugin.py:580
msgid "percent"
msgstr "pourcent"

#: plugin.py:581
msgid "ampersand"
msgstr "espèrluette"

#: plugin.py:582
msgid "single quote"
msgstr "guillemet"

#: plugin.py:583
msgid "left paren"
msgstr "parenthèse ouvrante"

#: plugin.py:584
msgid "right paren"
msgstr "parenthèse fermante"

#: plugin.py:585
msgid "asterisk"
msgstr "asterisque"

#: plugin.py:586
msgid "plus"
msgstr "plus"

#: plugin.py:587
msgid "comma"
msgstr "virgule"

#: plugin.py:588
msgid "minus"
msgstr "moins"

#: plugin.py:589
msgid "period"
msgstr "point"

#: plugin.py:590
msgid "slash"
msgstr "slash"

#: plugin.py:591
msgid "colon"
msgstr "double-point"

#: plugin.py:592
msgid "semicolon"
msgstr "point-virgule"

#: plugin.py:593
msgid "less than"
msgstr "inférieur"

#: plugin.py:594
msgid "equals"
msgstr "moins que"

#: plugin.py:595
msgid "greater than"
msgstr "supérieur"

#: plugin.py:596
msgid "question mark"
msgstr "point d'exclamation"

#: plugin.py:597
msgid "at"
msgstr "arobase"

#: plugin.py:598
msgid "left bracket"
msgstr "crochet ouvrant"

#: plugin.py:599
msgid "backslash"
msgstr "anti-slash"

#: plugin.py:600
msgid "right bracket"
msgstr "crochet fermant"

#: plugin.py:601
msgid "caret"
msgstr "accent circonflexe"

#: plugin.py:602
msgid "underscore"
msgstr "underscore"

#: plugin.py:603
msgid "backtick"
msgstr "accent grave"

#: plugin.py:604
msgid "left brace"
msgstr "crochet ouvrant"

#: plugin.py:605
msgid "pipe"
msgstr "pipe"

#: plugin.py:606
msgid "right brace"
msgstr "crochet fermant"

#: plugin.py:607
msgid "tilde"
msgstr "tilde"

#: plugin.py:610
msgid "one"
msgstr "un"

#: plugin.py:610
msgid "three"
msgstr "trois"

#: plugin.py:610
msgid "two"
msgstr "deux"

#: plugin.py:610
msgid "zero"
msgstr "zéro"

#: plugin.py:611
msgid "five"
msgstr "cinq"

#: plugin.py:611
msgid "four"
msgstr "quatre"

#: plugin.py:611
msgid "seven"
msgstr "sept"

#: plugin.py:611
msgid "six"
msgstr "six"

#: plugin.py:612
msgid "eight"
msgstr "huit"

#: plugin.py:612
msgid "nine"
msgstr "neuf"

#: plugin.py:616
msgid ""
"<text>\n"
"\n"
"        Returns <text>, phonetically spelled out.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le <texte>, épellé phonétiquement"

#: plugin.py:646
msgid ""
"<text>\n"
"\n"
"        Returns <text> as GNU/RMS would say it.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le <texte> comme si GNU/RMS l'avait dite."

#: plugin.py:655
msgid ""
"<text>\n"
"\n"
"        Returns <text> with each word longer than\n"
"        supybot.plugins.Filter.shrink.minimum being shrunken (i.e., like\n"
"        \"internationalization\" becomes \"i18n\").\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le texte avec chaque mot plus long que supybot.plugins.Filter."
"shrink.minimum découpé (par exemple, \"internationalization\" devient i18n)"

#: plugin.py:714
msgid ""
"<text>\n"
"\n"
"        Returns <text> rotated 180 degrees. Only really works for ASCII\n"
"        printable characters.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le <texte> tourné à 180 degrés. Ne marche pour de bon qu'avec des "
"caractères ASCII imprimables"

#: plugin.py:740
#, fuzzy
msgid ""
"<text>\n"
"\n"
"        Capitalises the first letter of each word.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Donne le code Morse équivalent à la chaîne donnée."

#: plugin.py:749
#, fuzzy
msgid ""
"<text>\n"
"\n"
"        EVERYONE LOVES CAPS LOCK.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Inverse le <texte>."

#: plugin.py:758
#, fuzzy
msgid ""
"<text>\n"
"\n"
"        Returns <text> with vowels rotated\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Retourne le <texte>, épellé phonétiquement"

#: plugin.py:769
#, fuzzy
msgid ""
"<text>\n"
"\n"
"        Returns <text> in uwu-speak.\n"
"        "
msgstr ""
"<texte>\n"
"\n"
"Inverse le <texte>."

#~ msgid ""
#~ "<text>\n"
#~ "\n"
#~ "        Returns the lisping version of <text>\n"
#~ "        "
#~ msgstr ""
#~ "<texte>\n"
#~ "\n"
#~ "Retourne la version zézéyée du texte."

#~ msgid ""
#~ "<text>\n"
#~ "\n"
#~ "        Returns <text> with the l's made into r's and r's made into l's.\n"
#~ "        "
#~ msgstr ""
#~ "<texte>\n"
#~ "\n"
#~ "Retourne le <texte> avec les l transormés en r et les r transformés en l."
