Metadata-Version: 2.1
Name: acl-cpp-python
Version: 0.6.2
Summary: Python bindings for the AtCoder Library
Keywords: AtCoder,AtCoder Library,ACL
Author: tatyam
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python :: 3
Classifier: License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication
Project-URL: homepage, https://github.com/tatyam-prime/acl-cpp-python
Project-URL: repository, https://github.com/tatyam-prime/acl-cpp-python
Project-URL: documentation, https://tatam-prime.github.io/acl-cpp-python/en/
Requires-Python: >=3.9
Provides-Extra: docs
Requires-Dist: Sphinx~=8.1.3; extra == "docs"
Requires-Dist: sphinx-rtd-theme~=3.0.2; extra == "docs"
Requires-Dist: sphinx-intl~=2.3.1; extra == "docs"
Requires-Dist: sphinx-copybutton~=0.5.2; extra == "docs"
Requires-Dist: myst-parser~=4.0.0; extra == "docs"
Provides-Extra: test
Requires-Dist: cibuildwheel~=2.23.3; extra == "test"
Requires-Dist: pytest~=8.3.4; extra == "test"
Provides-Extra: build
Requires-Dist: build~=1.2.2; extra == "build"
Requires-Dist: twine~=6.1.0; extra == "build"
Description-Content-Type: text/markdown

# acl-cpp-python

[![GitHub: acl-cpp-python](https://img.shields.io/badge/GitHub-acl--cpp--python-darkmagenta?logo=GitHub&logoColor=white)](https://github.com/tatyam-prime/acl-cpp-python)
[![PyPI: acl-cpp-python](https://img.shields.io/badge/PyPI-acl--cpp--python-006dad?logo=PyPI&logoColor=white)](https://pypi.org/project/acl-cpp-python/)
[![AC Library: v1.6](https://img.shields.io/badge/AC%20Library-v1.6-seagreen)](https://github.com/atcoder/ac-library) [![License: CC0 1.0](https://img.shields.io/badge/License-CC0%201.0-darkgoldenrod)](https://creativecommons.org/publicdomain/zero/1.0/)

Documentation: [日本語](https://tatyam-prime.github.io/acl-cpp-python/ja/) | [English](https://tatyam-prime.github.io/acl-cpp-python/en/)

[acl-cpp-python](https://github.com/tatyam-prime/acl-cpp-python/) is a package that binds the [AtCoder Library (ACL)](https://github.com/atcoder/ac-library) implemented in C++ to Python.
Internally, it is implemented in C++, so you can use fast convolutions, flows, string algorithms, etc. from Python.
