[build-system]
requires = [ "setuptools", "setuptools-scm" ]
build-backend = "setuptools.build_meta"

[project]
name = "based"
authors = [{ name = "ansipunk", email = "kysput@gmail.com" }]
description = "A based asynchronous database connection manager."
readme = "README.md"
license = { file = "LICENSE.txt" }
keywords = [ "database", "sqlalchemy", "sqlite", "asyncio", "postgresql", "mysql" ]
requires-python = ">=3.8"
dynamic = [ "version" ]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Topic :: Database",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [ "SQLAlchemy>=2,<2.1" ]

[project.optional-dependencies]
sqlite = [
  "aiosqlite>=0.20,<1",
]
postgres = [
  "psycopg>=3,<4",
  "psycopg_pool>=3,<4",
]
mysql = [
  "asyncmy>=0.2,<1",
]
dev = [
  "mysqlclient>=2.2,<3",
  "psycopg2-binary>=2.9,<3",
  "pytest>=8,<9",
  "pytest-asyncio>=0.24,<1",
  "pytest-cov>=5,<6",
  "pytest-mock>=3,<4",
  "pytest-xdist>=3,<4",
  "ruff>=0.7,<0.8",
  "SQLAlchemy-Utils>=0.41,<1",
]

[project.urls]
Homepage = "https://github.com/ansipunk/based"
Repository = "https://github.com/ansipunk/based.git"
Issues = "https://github.com/ansipunk/based/issues"

[tool.setuptools.dynamic]
version = { attr = "based.__version__" }

[tool.pytest.ini_options]
addopts = "-n 2 --cov=based --cov-report=term-missing --cov-report=html --cov-report=xml"
testpaths = [ "tests" ]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff.lint]
select = [
  "A", "ANN", "ASYNC", "B", "BLE", "C90", "COM", "D", "E", "ERA", "F", "FBT",
  "I", "INP", "N", "PIE", "PT", "PYI", "Q", "R", "RET", "RSE", "RUF", "S",
  "SIM", "SLF", "T20", "TID", "UP", "W",
]
ignore = [
  "ANN101",
  "D100", "D104", "D105", "D203", "D213", "D413",
  "S311",
  "SIM117",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = [
  "ANN201", "ANN202",
  "B017",
  "D100", "D103", "D104",
  "FBT001",
  "INP001",
  "PT011", "PT012", "S101", "SLF001",
]
