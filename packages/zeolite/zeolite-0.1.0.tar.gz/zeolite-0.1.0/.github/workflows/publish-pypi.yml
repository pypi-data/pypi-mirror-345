# Publish a release to PyPI.
#
# Assumed to run as a subworkflow of .github/workflows/release.yml; specifically, as a publish job

name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  pypi-publish:
    name: Upload zeolite to PyPI
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      contents: read
      id-token: write  # IMPORTANT: this is needed for trusted publishing

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Get version
      id: get_version
      run: |
        # Extract version from tag (remove the 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Check if pyproject.toml version matches tag version
        PYPROJECT_VERSION=$(uvx --from=toml-cli toml get project.version --toml-path=pyproject.toml)
        if [ "$VERSION" != "$PYPROJECT_VERSION" ]; then
          echo "Error: Tag version ($VERSION) does not match version in pyproject.toml ($PYPROJECT_VERSION)"
          exit 1
        fi

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Run tests
      run: uv run pytest

    - name: Build package
      run: uv build

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        # No need to specify password when using trusted publishing 