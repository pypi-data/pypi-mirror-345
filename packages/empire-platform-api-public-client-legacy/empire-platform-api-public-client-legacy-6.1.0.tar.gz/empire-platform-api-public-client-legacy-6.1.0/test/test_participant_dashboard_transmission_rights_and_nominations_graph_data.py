# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Empire**, the allocation and nomination platform of BritNed_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/britned/empire-platform-api) 

    The version of the OpenAPI document: 6.1.0
    Contact: britned.info@britned.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from empire_platform_api_public_client_legacy.models.participant_dashboard_transmission_rights_and_nominations_graph_data import ParticipantDashboardTransmissionRightsAndNominationsGraphData  # noqa: E501

class TestParticipantDashboardTransmissionRightsAndNominationsGraphData(unittest.TestCase):
    """ParticipantDashboardTransmissionRightsAndNominationsGraphData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ParticipantDashboardTransmissionRightsAndNominationsGraphData:
        """Test ParticipantDashboardTransmissionRightsAndNominationsGraphData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ParticipantDashboardTransmissionRightsAndNominationsGraphData`
        """
        model = ParticipantDashboardTransmissionRightsAndNominationsGraphData()  # noqa: E501
        if include_optional:
            return ParticipantDashboardTransmissionRightsAndNominationsGraphData(
                mtus = [
                    empire_platform_api_public_client_legacy.models.participant_dashboard_transmission_rights_and_nominations_graph_data_mtus.ParticipantDashboardTransmissionRightsAndNominationsGraphData_mtus(
                        mtu = '2022-01-04T10:00:00.000Z', 
                        values = [
                            empire_platform_api_public_client_legacy.models.participant_dashboard_transmission_rights_and_nominations_graph_data_mtus_values.ParticipantDashboardTransmissionRightsAndNominationsGraphData_mtus_values(
                                direction = 'GB_NL', 
                                allocated_trs = 56, 
                                nominated_capacity = 56, )
                            ], )
                    ]
            )
        else:
            return ParticipantDashboardTransmissionRightsAndNominationsGraphData(
                mtus = [
                    empire_platform_api_public_client_legacy.models.participant_dashboard_transmission_rights_and_nominations_graph_data_mtus.ParticipantDashboardTransmissionRightsAndNominationsGraphData_mtus(
                        mtu = '2022-01-04T10:00:00.000Z', 
                        values = [
                            empire_platform_api_public_client_legacy.models.participant_dashboard_transmission_rights_and_nominations_graph_data_mtus_values.ParticipantDashboardTransmissionRightsAndNominationsGraphData_mtus_values(
                                direction = 'GB_NL', 
                                allocated_trs = 56, 
                                nominated_capacity = 56, )
                            ], )
                    ],
        )
        """

    def testParticipantDashboardTransmissionRightsAndNominationsGraphData(self):
        """Test ParticipantDashboardTransmissionRightsAndNominationsGraphData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
