"""
This type stub file was generated by pyright.
"""

import numpy as np
from typing import List, Union
from .base import TextEmbeddingFunction
from .registry import register
from .utils import weak_lru

@register("sentence-transformers")
class SentenceTransformerEmbeddings(TextEmbeddingFunction):
    """
    An embedding function that uses the sentence-transformers library

    https://huggingface.co/sentence-transformers

    Parameters
    ----------
    name: str, default "all-MiniLM-L6-v2"
        The name of the model to use.
    device: str, default "cpu"
        The device to use for the model
    normalize: bool, default True
        Whether to normalize the embeddings
    trust_remote_code: bool, default True
        Whether to trust the remote code
    """
    name: str = ...
    device: str = ...
    normalize: bool = ...
    trust_remote_code: bool = ...
    def __init__(self, **kwargs) -> None:
        ...
    
    @property
    def embedding_model(self): # -> Any:
        """
        Get the sentence-transformers embedding model specified by the
        name, device, and trust_remote_code. This is cached so that the
        model is only loaded once per process.
        """
        ...
    
    def ndims(self): # -> int:
        ...
    
    def generate_embeddings(self, texts: Union[List[str], np.ndarray]) -> List[np.array]:
        """
        Get the embeddings for the given texts

        Parameters
        ----------
        texts: list[str] or np.ndarray (of str)
            The texts to embed
        """
        ...
    
    @weak_lru(maxsize=1)
    def get_embedding_model(self): # -> Any:
        """
        Get the sentence-transformers embedding model specified by the
        name, device, and trust_remote_code. This is cached so that the
        model is only loaded once per process.

        TODO: use lru_cache instead with a reasonable/configurable maxsize
        """
        ...
    


